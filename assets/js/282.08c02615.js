(window.webpackJsonp=window.webpackJsonp||[]).push([[282],{6514:function(t,s,e){t.exports=e.p+"assets/img/1656833132133.49b22ed4.png"},6515:function(t,s,e){t.exports=e.p+"assets/img/1656833158659.b3b04189.png"},6516:function(t,s,e){t.exports=e.p+"assets/img/1656833323070.45605c8f.png"},6517:function(t,s,e){t.exports=e.p+"assets/img/1656833447219.86ccd770.png"},6518:function(t,s,e){t.exports=e.p+"assets/img/1656833481680.94e5bec5.png"},6519:function(t,s,e){t.exports=e.p+"assets/img/1656833662559.4a1cb00c.png"},6520:function(t,s,e){t.exports=e.p+"assets/img/1656833861943.73f63856.png"},6521:function(t,s,e){t.exports=e.p+"assets/img/1656834028785.8b31786d.png"},6522:function(t,s,e){t.exports=e.p+"assets/img/1656834141983.7b661e6c.png"},6523:function(t,s,e){t.exports=e.p+"assets/img/1656834339142.4dd8dccd.png"},6524:function(t,s,e){t.exports=e.p+"assets/img/1656835072662.f435d414.png"},8891:function(t,s,e){"use strict";e.r(s);var p=e(5),a=Object(p.a)({},(function(){var t=this,s=t.$createElement,p=t._self._c||s;return p("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[p("h1",{attrs:{id:"_9-devops-可视化pipeline-第二步-项目编译"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#_9-devops-可视化pipeline-第二步-项目编译"}},[t._v("#")]),t._v(" 9.devops-可视化Pipeline-第二步-项目编译")]),t._v(" "),p("p",[t._v("​\t我们的流水线第一步已经完成了--下面我们就来可视化Pipeline编辑第二步流水线")]),t._v(" "),p("p",[t._v("​\t第二步默认模板是单元测试unit test 我们改为项目编译")]),t._v(" "),p("p",[t._v("​\t添加步骤--指定容器maven，因为编译要使用到maven命令")]),t._v(" "),p("p",[p("img",{attrs:{src:e(6514),alt:"1656833132133"}})]),t._v(" "),p("p",[t._v("指定容器")]),t._v(" "),p("p",[p("img",{attrs:{src:e(6515),alt:"1656833158659"}})]),t._v(" "),p("p",[t._v("​\t先确定代码文件--添加一个shell脚本 ls")]),t._v(" "),p("p",[t._v("​\t我们想一下我们以前自己打包的时候，mvn 先clean 然后 package打包，然后-Dmaven.test.skip=true跳过测试")]),t._v(" "),p("p",[p("img",{attrs:{src:e(6516),alt:"1656833323070"}})]),t._v(" "),p("p",[t._v("​\t现在我们添加嵌套步骤--执行shell脚本 mvn的命令")]),t._v(" "),p("p",[p("img",{attrs:{src:e(6517),alt:"1656833447219"}})]),t._v(" "),p("p",[p("img",{attrs:{src:e(6518),alt:"1656833481680"}})]),t._v(" "),p("p",[t._v("​\t我们现在运行一下流水线--测试一下流水线项目是否能运行起来")]),t._v(" "),p("p",[p("img",{attrs:{src:e(6519),alt:"1656833662559"}})]),t._v(" "),p("p",[t._v("​\t这个编译的过程比较慢-----注意可能这里是去maven的中央仓库去下载包，导致速度很慢，因为我们之前在本地运行的时候一般是设置maven的mirror指定镜像的加速仓库如阿里云的镜像，但是在这里并没有指定")]),t._v(" "),p("p",[t._v("​\t如果需要修改镜像仓库地址的话---使用admin登录kubesphere")]),t._v(" "),p("p",[t._v("​\t平台管理--集群管理--配置中心--配置下")]),t._v(" "),p("p",[p("img",{attrs:{src:e(6520),alt:"1656833861943"}})]),t._v(" "),p("p",[t._v("​\t然后找到devops-agent这个就是maven的配置，修改这个配置")]),t._v(" "),p("p",[p("img",{attrs:{src:e(6521),alt:"1656834028785"}})]),t._v(" "),p("p",[t._v("​\t点击修改配置--将我们指定的mirror镜像地址拷贝进去")]),t._v(" "),p("p",[p("img",{attrs:{src:e(6522),alt:"1656834141983"}})]),t._v(" "),p("p",[t._v("​\t\t还有--如果是本地jar包---那么就需要使用到私服了")]),t._v(" "),p("p",[t._v("​\t现在我们修改好以后--再来运行流水线，看看编译打包的速度是不是快了")]),t._v(" "),p("p",[t._v("​\t可以看到编译和打包花费了4分钟的时间--编译成功没有问题")]),t._v(" "),p("p",[p("img",{attrs:{src:e(6523),alt:"1656834339142"}})]),t._v(" "),p("p",[t._v("​\t还有个问题就是，比如我们项目打包过了，那么我们的流水线还需不需要重新把所有的东西都下载一遍呢？")]),t._v(" "),p("p",[t._v("​\t我们再次运行一下流水线--我们发现第二次，编译打包只用了18秒，日志中也没有下载包的日志，所以kubesphere在集成Jenkins也帮助我们加入了合理的缓存机制，下载过的jar包会缓存下来，下次就不需要下载了。")]),t._v(" "),p("p",[p("img",{attrs:{src:e(6524),alt:"1656835072662"}})]),t._v(" "),p("p",[t._v("​\t所以说我们的流水线是越来越快的")]),t._v(" "),p("h2",{attrs:{id:"_1、修改maven让他从阿里云下载镜像"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#_1、修改maven让他从阿里云下载镜像"}},[t._v("#")]),t._v(" 1、修改maven让他从阿里云下载镜像")]),t._v(" "),p("ul",[p("li",[p("p",[t._v("使用admin登陆ks")])]),t._v(" "),p("li",[p("p",[t._v("进入集群管理")])]),t._v(" "),p("li",[p("p",[t._v("进入配置中心")])]),t._v(" "),p("li",[p("p",[t._v("找到配置")])]),t._v(" "),p("li",[p("ul",[p("li",[p("a",{attrs:{href:"http://139.198.165.238:30880/clusters/default/projects/kubesphere-devops-system/configmaps/ks-devops-agent",target:"_blank",rel:"noopener noreferrer"}},[t._v("ks-devops-agent"),p("OutboundLink")],1)]),t._v(" "),p("li",[t._v("修改这个配置。加入maven阿里云镜像加速地址")])])])]),t._v(" "),p("h2",{attrs:{id:"_2、缓存机制"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#_2、缓存机制"}},[t._v("#")]),t._v(" 2、缓存机制")]),t._v(" "),p("p",[t._v("已经下载过的jar包，下一次流水线的启动，不会重复下载")]),t._v(" "),p("p",[t._v("https://www.bilibili.com/video/BV13Q4y1C7hS?p=114&spm_id_from=pageDriver&vd_source=243ad3a9b323313aa1441e5dd414a4ef")])])}),[],!1,null,null,null);s.default=a.exports}}]);