(window.webpackJsonp=window.webpackJsonp||[]).push([[333],{6517:function(s,t,a){s.exports=a.p+"assets/img/1650608080852.64d25de6.png"},6518:function(s,t,a){s.exports=a.p+"assets/img/1650608128783.5dbdf498.png"},6519:function(s,t,a){s.exports=a.p+"assets/img/1650608251685.73855a59.png"},6520:function(s,t,a){s.exports=a.p+"assets/img/1650608333487.77fc2e6b.png"},6521:function(s,t,a){s.exports=a.p+"assets/img/1650608536012.b3ce6d7a.png"},6522:function(s,t,a){s.exports=a.p+"assets/img/1650611856504.9f037f74.png"},6523:function(s,t,a){s.exports=a.p+"assets/img/1650612574554.47b534d9.png"},6524:function(s,t,a){s.exports=a.p+"assets/img/1650614560578.245fe7b5.png"},6525:function(s,t,a){s.exports=a.p+"assets/img/1650614635821.752d364e.png"},8852:function(s,t,a){"use strict";a.r(t);var e=a(5),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"_11-k8s集群搭建-master节点完成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11-k8s集群搭建-master节点完成"}},[s._v("#")]),s._v(" 11.k8s集群搭建-master节点完成")]),s._v(" "),e("p",[s._v("​\t我们之前已经把主节点初始化完成了，但是还差一步是需要部署一个网络节点，包括这个网络插件去哪找都是有官方地址的。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6517),alt:"1650608080852"}})]),s._v(" "),e("p",[e("img",{attrs:{src:a(6518),alt:"1650608128783"}})]),s._v(" "),e("p",[s._v("​\t比如我们使用calico的网络插件，我们在master节点下执行curl....把calico的yaml配置文件下载下来")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6519),alt:"1650608251685"}})]),s._v(" "),e("p",[s._v("我们有了这个calico的配置文件以后，就可以在k8s中安装了")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6520),alt:"1650608333487"}})]),s._v(" "),e("p",[s._v("其实给k8s安装东西特别容易，只要有这个需要安装的配置文件我们就可以使用")]),s._v(" "),e("p",[s._v("kubectl apply -f 文件名称  ，可以使用这个命令来下载安装")]),s._v(" "),e("p",[s._v("-f 就是我需要的file文件")]),s._v(" "),e("p",[s._v("例如：我们安装calico网络组件")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6521),alt:"1650608536012"}})]),s._v(" "),e("h4",{attrs:{id:"_2、安装网络组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、安装网络组件"}},[s._v("#")]),s._v(" 2、安装网络组件")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" https://docs.projectcalico.org/manifests/calico.yaml -O\n\nkubectl apply -f calico.yaml\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("还有就是安装这个网络组件的前提是我们没有修改过之前的--主节点初始化中的--pod-network-cidr=192.168.0.0/16这个地址，如果修改了，那么就需要 进入这个网络组件的calico.yaml配置文件中也修改一下")]),s._v(" "),e("p",[s._v("​\t\t如果修改后就需要把默认的注释的这个配置打开修改为自己配置的网络范围--所以一般就使用我们的默认就可以，不明白就不要乱改以防故障")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6522),alt:"1650611856504"}})]),s._v(" "),e("p",[s._v("现在我们看一下我们前面学习使用过的几个k8s的命令：")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看集群所有节点")]),s._v("\nkubectl get nodes\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#根据配置文件，给集群创建资源")]),s._v("\nkubectl apply -f xxxx.yaml\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看集群部署了哪些应用？")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("   "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("   kubectl get pods -A\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行中的应用在docker里面叫容器，在k8s里面叫Pod -A就是获取所有")]),s._v("\nkubectl get pods -A\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("使用kubectl get pods -A 一定要在master节点，因为master节点是控制节点-领导人")]),s._v(" "),e("p",[s._v("​\t然后我们现在可以看到 集群中有哪些资源 NAME：是我们应用的名称，READY：应用有没有就绪1/1就是有一个1个就绪，STATUS:状态Running正在运行，RESTART：重启了多少次，AGE：什么时候准备好的")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6523),alt:"1650612574554"}})]),s._v(" "),e("p",[s._v("我们等到我们集群中所有的状态都是running的时候，我们就可以继续往下做了")]),s._v(" "),e("p",[s._v("​\t我们看一下集群中的内容都是什么：")]),s._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[s._v("- kube-scheduler:调度者\n- kube-proxy：代理--看门大爷\n- kube-controller-manager：集群的决策者\n- kube-apiserver：相当于秘书部-所有请求经过这里调度\n- etcd-k8s：是我们集群的资料库\n")])])]),e("p",[e("img",{attrs:{src:a(6524),alt:"1650614560578"}})]),s._v(" "),e("p",[s._v("我们使用命令kubectl get nodes，我们的master节点就准备好了，将来集群中的其他节点往里加就可以了")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6525),alt:"1650614635821"}})])])}),[],!1,null,null,null);t.default=n.exports}}]);