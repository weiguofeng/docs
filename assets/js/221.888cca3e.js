(window.webpackJsonp=window.webpackJsonp||[]).push([[221],{5054:function(t,s,a){t.exports=a.p+"assets/img/1648385409885.180a9cb8.png"},5055:function(t,s,a){t.exports=a.p+"assets/img/1648385480897.161ff812.png"},5056:function(t,s,a){t.exports=a.p+"assets/img/1648385879299.0410f1d4.png"},5057:function(t,s,a){t.exports=a.p+"assets/img/1648385910939.875afe4d.png"},5058:function(t,s,a){t.exports=a.p+"assets/img/1648386015653.15f709b0.png"},5059:function(t,s,a){t.exports=a.p+"assets/img/1648386263979.2f983702.png"},5060:function(t,s,a){t.exports=a.p+"assets/img/1648386276688.e898df4e.png"},5061:function(t,s,a){t.exports=a.p+"assets/img/1648386322035.985df721.png"},5062:function(t,s,a){t.exports=a.p+"assets/img/1648387290738.10da6c03.png"},5063:function(t,s,a){t.exports=a.p+"assets/img/1648387602617.750742e9.png"},5064:function(t,s,a){t.exports=a.p+"assets/img/1648387825535.4b8fb7b5.png"},5065:function(t,s,a){t.exports=a.p+"assets/img/1648387928237.826d3147.png"},5066:function(t,s,a){t.exports=a.p+"assets/img/1648388056583.1309d56d.png"},8673:function(t,s,a){"use strict";a.r(s);var r=a(5),p=Object(r.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"_14-mosh-for循环"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-mosh-for循环"}},[t._v("#")]),t._v(" 14.mosh-For循环")]),t._v(" "),r("p",[r("img",{attrs:{src:a(5054),alt:"1648385409885"}})]),t._v(" "),r("p",[t._v("例如：我们想输出一个 hello World 并且需要5次")]),t._v(" "),r("p",[r("img",{attrs:{src:a(5055),alt:"1648385480897"}})]),t._v(" "),r("p",[t._v("这个代码明显看起来很丑，这就是我们在java中需要使用到循环的地方")]),t._v(" "),r("p",[t._v("有几种不同类型的循环，我们先了解一下for循环")]),t._v(" "),r("p",[t._v("​\t使用for循环 需要声明一个循环和一个计数器变量，我们声明一个名为 i 的变量初始化值设置为0，然后编写一个布尔表达式来确定循环")]),t._v(" "),r("p",[t._v("​\t\t我们现在没有加{}，如果有多个循环就需要加上了")]),t._v(" "),r("p",[r("img",{attrs:{src:a(5056),alt:"1648385879299"}})]),t._v(" "),r("p",[r("img",{attrs:{src:a(5057),alt:"1648385910939"}})]),t._v(" "),r("p",[t._v("我们了解一下当java看到这个for循环的代码是如何执行的：")]),t._v(" "),r("p",[t._v("​\t从初始值开始0，如果条件满足，循环的代码块中就会被执行一次，直到条件不满足的时候，就会执行for下面部分的代码")]),t._v(" "),r("p",[r("img",{attrs:{src:a(5058),alt:"1648386015653"}})]),t._v(" "),r("p",[t._v("我们也可以这样递减的方式进行循环")]),t._v(" "),r("p",[r("img",{attrs:{src:a(5059),alt:"1648386263979"}})]),t._v(" "),r("p",[r("img",{attrs:{src:a(5060),alt:"1648386276688"}})]),t._v(" "),r("h2",{attrs:{id:"while-循环"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#while-循环"}},[t._v("#")]),t._v(" While 循环")]),t._v(" "),r("p",[r("img",{attrs:{src:a(5061),alt:"1648386322035"}})]),t._v(" "),r("p",[t._v("我们在确定需要循环多少次的话最好使用for循环，如果我们不确定需要循环多少次，比如用户不断的输入东西，直到他们输入完成后，然后终止程序，这种情况下我们不知道用户输入了多少次内容，这样场景我们使用While循环编写程序")]),t._v(" "),r("p",[t._v("​\t\t引用类型的字符串，不能在引用类型之间使用比较运算符，因为这些"),r("strong",[t._v("运算符比较的是内存地址或对象而不是他们的值")]),t._v("，所以如果你有2个String进行比较的话，不同的内存地址，我们可以使用equals方法")]),t._v(" "),r("p",[r("img",{attrs:{src:a(5062),alt:"1648387290738"}})]),t._v(" "),r("p",[t._v("因为每次循环的时候我们都要创建一个 new Scanner扫描对象，假设用户输入了10次，那么就创建了10个对象，这样是不必要的，也是一种不好的做法，因为这样会污染我们的内存，所以最好在外部创建扫描对象")]),t._v(" "),r("p",[r("img",{attrs:{src:a(5063),alt:"1648387602617"}})]),t._v(" "),r("p",[t._v("假设用户以小写字母输入内容，我们将一直无法退出，所以我们需要将接收到的内容转化为小写")]),t._v(" "),r("p",[t._v("​\ttoLowerCase")]),t._v(" "),r("p",[r("img",{attrs:{src:a(5064),alt:"1648387825535"}})]),t._v(" "),r("h2",{attrs:{id:"do-while-循环"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#do-while-循环"}},[t._v("#")]),t._v(" do while 循环")]),t._v(" "),r("p",[r("img",{attrs:{src:a(5065),alt:"1648387928237"}})]),t._v(" "),r("p",[t._v("我们使用do while重写以上逻辑的代码")]),t._v(" "),r("p",[t._v("​\t\t与while循环的区别是 while是先判断后执行，do while 是先执行后判断，循环至少执行一次")]),t._v(" "),r("p",[r("img",{attrs:{src:a(5066),alt:"1648388056583"}})])])}),[],!1,null,null,null);s.default=p.exports}}]);