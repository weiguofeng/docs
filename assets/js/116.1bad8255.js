(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{2715:function(t,s,p){t.exports=p.p+"assets/img/1637416481036.37128110.png"},2716:function(t,s,p){t.exports=p.p+"assets/img/1637416495816.1e9e6815.png"},2717:function(t,s,p){t.exports=p.p+"assets/img/1637416549775.18e44c97.png"},2718:function(t,s,p){t.exports=p.p+"assets/img/1637416687323.26bddfcc.png"},2719:function(t,s,p){t.exports=p.p+"assets/img/1637416837379.7c0da750.png"},2720:function(t,s,p){t.exports=p.p+"assets/img/1637591763063.68050145.png"},2721:function(t,s,p){t.exports=p.p+"assets/img/1637591853761.85b0f7f9.png"},2722:function(t,s,p){t.exports=p.p+"assets/img/1637592064719.2cab82e4.png"},2723:function(t,s,p){t.exports=p.p+"assets/img/1637592129914.7a8aa399.png"},2724:function(t,s,p){t.exports=p.p+"assets/img/1637592215500.71492ad4.png"},2725:function(t,s,p){t.exports=p.p+"assets/img/1637592908814.3ff76cdf.png"},2726:function(t,s,p){t.exports=p.p+"assets/img/1637592980907.a44ebf1e.png"},2727:function(t,s,p){t.exports=p.p+"assets/img/1637593026318.6a465d1a.png"},2728:function(t,s,p){t.exports=p.p+"assets/img/1637593230051.6ec80e89.png"},2729:function(t,s,p){t.exports=p.p+"assets/img/1637593140894.e420877a.png"},2730:function(t,s,p){t.exports=p.p+"assets/img/1637593336813.0efa7be6.png"},2731:function(t,s,p){t.exports=p.p+"assets/img/1637593406324.19ba49a9.png"},2732:function(t,s,p){t.exports=p.p+"assets/img/1637593495798.c1645a2b.png"},2733:function(t,s,p){t.exports=p.p+"assets/img/1637593591701.de640d0c.png"},2734:function(t,s,p){t.exports=p.p+"assets/img/1637593653840.808ed918.png"},2735:function(t,s,p){t.exports=p.p+"assets/img/1637593767547.7ec36564.png"},9226:function(t,s,p){"use strict";p.r(s);var a=p(5),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_3-项目启动与配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-项目启动与配置"}},[t._v("#")]),t._v(" 3.项目启动与配置")]),t._v(" "),a("p",[a("img",{attrs:{src:p(2715),alt:"1637416481036"}})]),t._v(" "),a("p",[a("img",{attrs:{src:p(2716),alt:"1637416495816"}})]),t._v(" "),a("p",[a("img",{attrs:{src:p(2717),alt:"1637416549775"}})]),t._v(" "),a("p",[a("img",{attrs:{src:p(2718),alt:"1637416687323"}})]),t._v(" "),a("p",[t._v("配置反向代理用于以后跨域请求")]),t._v(" "),a("p",[a("img",{attrs:{src:p(2719),alt:"1637416837379"}})]),t._v(" "),a("p",[t._v("我们在请求不同域名的时候，可以请求回数据吗？跨域问题")]),t._v(" "),a("p",[t._v("我们想测试一下能不能跨域请求--我们使用axios请求--先安装axios")]),t._v(" "),a("p",[a("img",{attrs:{src:p(2720),alt:"1637591763063"}})]),t._v(" "),a("p",[t._v("使用axios：")]),t._v(" "),a("p",[a("img",{attrs:{src:p(2721),alt:"1637591853761"}})]),t._v(" "),a("p",[t._v("我们找一个接口测试一下：")]),t._v(" "),a("p",[t._v("比如我们随便找个网站-如猫眼，然后我们找个接口请求一下")]),t._v(" "),a("p",[a("img",{attrs:{src:p(2722),alt:"1637592064719"}})]),t._v(" "),a("p",[t._v("然后测试发起请求：")]),t._v(" "),a("p",[a("img",{attrs:{src:p(2723),alt:"1637592129914"}})]),t._v(" "),a("p",[t._v("然后我们在页面查看一下：报错--意思是你违反了浏览器的CORS策略，Access-Control-Allow-Origin不存在，其实这就是跨域了。")]),t._v(" "),a("p",[t._v("​\t\t对于跨域问题：一旦遇到了之后，解决方案无非是要求  后端帮我们加上一些响应字段，或者让后端为我们写好Json 接口，（前2种方案对于猫眼这种接口是不可以实现的），如果后端啥也不做的情况下，我们前端做好反向代理，这种是最好的解决方案")]),t._v(" "),a("p",[t._v("​\t\t我们可以使用我们脚手架中集成的一个模块叫 http-proxy-middleware --他是nodejs的一个中间件，他可以非常轻松的帮你实现跨域的请求问题，因为他自己启动了一台反向代理服务帮你去做跨域的事情")]),t._v(" "),a("p",[a("img",{attrs:{src:p(2724),alt:"1637592215500"}})]),t._v(" "),a("p",[t._v("怎么去配置这个 http-proxy-middleware中间件呢，我们打开这个create-app这个脚手架的地址可以查看文档")]),t._v(" "),a("p",[a("img",{attrs:{src:p(2725),alt:"1637592908814"}})]),t._v(" "),a("p",[t._v("需要在src下创建一个setupProxy.js文件")]),t._v(" "),a("p",[a("img",{attrs:{src:p(2726),alt:"1637592980907"}})]),t._v(" "),a("p",[t._v("然后需要在这个setupProxy.js文件下配置代理")]),t._v(" "),a("p",[a("img",{attrs:{src:p(2727),alt:"1637593026318"}})]),t._v(" "),a("p",[t._v("安装中间件http-proxy-middleware模块")]),t._v(" "),a("p",[a("img",{attrs:{src:p(2728),alt:"1637593230051"}})]),t._v(" "),a("p",[t._v("我们代码测试一下：")]),t._v(" "),a("p",[t._v("​\t\ttarget：就是你访问/api的时候都会帮你代理到 这个地址去取数据")]),t._v(" "),a("p",[a("img",{attrs:{src:p(2729),alt:"1637593140894"}})]),t._v(" "),a("p",[t._v("然后我们查看一下之前的请求猫眼的地址：")]),t._v(" "),a("p",[t._v("​\t\t我们分析一下如果使用这个地址肯定是行不通的，我们需要把他的域名去掉")]),t._v(" "),a("p",[a("img",{attrs:{src:p(2730),alt:"1637593336813"}})]),t._v(" "),a("p",[a("img",{attrs:{src:p(2731),alt:"1637593406324"}})]),t._v(" "),a("p",[t._v("然后我们配置代理：将/ajax的请求拦截 然后 代理到猫眼的服务地址去获取数据")]),t._v(" "),a("p",[a("img",{attrs:{src:p(2732),alt:"1637593495798"}})]),t._v(" "),a("p",[t._v("如果有多个跨域的请求就可以设置多个代理：")]),t._v(" "),a("p",[a("img",{attrs:{src:p(2733),alt:"1637593591701"}})]),t._v(" "),a("p",[t._v("然后我们现在代理配置好了，刷新页面查看一下：")]),t._v(" "),a("p",[t._v("​\t\t\t结果发现还是报错，如果改动了这个反向代理的服务配置，必须要重新启动项目才可以加载到我们配置的反向代理。")]),t._v(" "),a("p",[a("img",{attrs:{src:p(2734),alt:"1637593653840"}})]),t._v(" "),a("p",[t._v("重新启动服务查看：")]),t._v(" "),a("p",[t._v("​\t\t可以看到--我们已经获取到数据了--证明反向代理成功")]),t._v(" "),a("p",[a("img",{attrs:{src:p(2735),alt:"1637593767547"}})])])}),[],!1,null,null,null);s.default=r.exports}}]);