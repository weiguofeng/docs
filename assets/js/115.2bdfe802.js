(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{5182:function(t,s,p){t.exports=p.p+"assets/img/1648309935350.db2fa423.png"},5183:function(t,s,p){t.exports=p.p+"assets/img/1648309947830.7b5d2792.png"},5184:function(t,s,p){t.exports=p.p+"assets/img/1648309973063.05917b4e.png"},5185:function(t,s,p){t.exports=p.p+"assets/img/1648310056548.014c582b.png"},5186:function(t,s,p){t.exports=p.p+"assets/img/1648310185366.6fd35ac7.png"},5187:function(t,s,p){t.exports=p.p+"assets/img/1648310336825.50790178.png"},5188:function(t,s,p){t.exports=p.p+"assets/img/1648310737157.c5f3099b.png"},5189:function(t,s,p){t.exports=p.p+"assets/img/1648310837846.86a3520a.png"},5190:function(t,s,p){t.exports=p.p+"assets/img/1648310911417.fded5692.png"},5191:function(t,s,p){t.exports=p.p+"assets/img/1648311202434.2319f600.png"},5192:function(t,s,p){t.exports=p.p+"assets/img/1648311571026.e5cf3b28.png"},5193:function(t,s,p){t.exports=p.p+"assets/img/1648311636939.e00f9c4f.png"},5194:function(t,s,p){t.exports=p.p+"assets/img/1648311736384.e376fec2.png"},5195:function(t,s,p){t.exports=p.p+"assets/img/1648311782690.069a6770.png"},5196:function(t,s,p){t.exports=p.p+"assets/img/1648311997452.d1c76b57.png"},5197:function(t,s,p){t.exports=p.p+"assets/img/1648312244840.51b48e00.png"},5198:function(t,s,p){t.exports=p.p+"assets/img/1648312276872.c2d86b28.png"},5199:function(t,s,p){t.exports=p.p+"assets/img/1648312386220.11d623fb.png"},5200:function(t,s,p){t.exports=p.p+"assets/img/1648312668622.e3c4b322.png"},5201:function(t,s,p){t.exports=p.p+"assets/img/1648312893275.822bddd3.png"},8688:function(t,s,p){"use strict";p.r(s);var v=p(5),_=Object(v.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"_6-mosh-算术表达式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-mosh-算术表达式"}},[t._v("#")]),t._v(" 6.mosh-算术表达式")]),t._v(" "),v("p",[t._v("​\t在Java中我们有与数学相同的运算符，我们有加减、乘除、模数（余数）")]),t._v(" "),v("p",[t._v("​")]),t._v(" "),v("p",[t._v("​\t\t我们来看几个例子：")]),t._v(" "),v("p",[v("img",{attrs:{src:p(5182),alt:"1648309935350"}})]),t._v(" "),v("p",[v("img",{attrs:{src:p(5183),alt:"1648309947830"}})]),t._v(" "),v("p",[t._v("我们使用++X 结果也是2")]),t._v(" "),v("p",[v("img",{attrs:{src:p(5184),alt:"1648309973063"}})]),t._v(" "),v("p",[t._v("我们看一下这种情况")]),t._v(" "),v("p",[t._v("​\t这样的情况会是x先去赋值给y 那么y=1 然后 x++ 那么x =2")]),t._v(" "),v("p",[v("img",{attrs:{src:p(5185),alt:"1648310056548"}})]),t._v(" "),v("p",[t._v("如果是++在前，那么先进行++x 运算 x = 2，然后赋值给y y=2")]),t._v(" "),v("p",[v("img",{attrs:{src:p(5186),alt:"1648310185366"}})]),t._v(" "),v("p",[t._v("这样的情况是先 进行x+2运算的，然后赋值给x 结果是3")]),t._v(" "),v("p",[v("img",{attrs:{src:p(5187),alt:"1648310336825"}})]),t._v(" "),v("p",[t._v("x=x+2这种情况是可以简写的 简写为 x += 2 意思是 x先加2")]),t._v(" "),v("p",[t._v("x -= 2，代表 x-2   还有 x /= 2等等")]),t._v(" "),v("p",[t._v("表达式的优先级----（）最高")]),t._v(" "),v("p",[v("img",{attrs:{src:p(5188),alt:"1648310737157"}})]),t._v(" "),v("h4",{attrs:{id:"类型转换"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),v("p",[t._v("​\t将short的值 x和 int类型的值2 运算 赋值给y")]),t._v(" "),v("p",[v("img",{attrs:{src:p(5189),alt:"1648310837846"}})]),t._v(" "),v("p",[t._v("打印的结果是3")]),t._v(" "),v("p",[v("img",{attrs:{src:p(5190),alt:"1648310911417"}})]),t._v(" "),v("p",[t._v("这个是我们所期望的结果--但是我们理解一下背后的执行情况，因为正在处理2种不同的数据类型")]),t._v(" "),v("p",[t._v("​\tshort 和 int")]),t._v(" "),v("p",[t._v("参与运算的x会被变为一个匿名的变量，变量将是一个int 的类型 与运算的值类型相同，java会将这个x的值拷贝走然后转为运算的类型，这就是我们所说的"),v("strong",[t._v("隐式转换")]),t._v("也是自动转换")]),t._v(" "),v("p",[t._v("​\t\t只要我们有一个值，我们就不必担心他，并且值可以转换为更大的数据类型")]),t._v(" "),v("p",[v("img",{attrs:{src:p(5191),alt:"1648311202434"}})]),t._v(" "),v("p",[t._v("从byte 到 long")]),t._v(" "),v("p",[v("img",{attrs:{src:p(5192),alt:"1648311571026"}})]),t._v(" "),v("p",[t._v("那么如果是浮点类型呢--这里我们有一个编译错误")]),t._v(" "),v("p",[t._v("​\t因为我们需要使用俩种类型中大的一种")]),t._v(" "),v("p",[v("img",{attrs:{src:p(5193),alt:"1648311636939"}})]),t._v(" "),v("p",[t._v("隐式转换会转为double")]),t._v(" "),v("p",[v("img",{attrs:{src:p(5194),alt:"1648311736384"}})]),t._v(" "),v("p",[t._v("打印的结果是3.1")]),t._v(" "),v("p",[v("img",{attrs:{src:p(5195),alt:"1648311782690"}})]),t._v(" "),v("p",[t._v("最终的隐式转换 最大将转为double")]),t._v(" "),v("p",[v("img",{attrs:{src:p(5196),alt:"1648311997452"}})]),t._v(" "),v("p",[v("strong",[t._v("隐式转换")]),t._v("：如果数据丢失怎么办？也就是我们说的精度丢失")]),t._v(" "),v("p",[t._v("​\t比如 你希望Y是一个整数")]),t._v(" "),v("p",[t._v("​\t这样我们就需要做"),v("strong",[t._v("显式转换")])]),t._v(" "),v("p",[t._v("​\t\t我们将x转为int类型")]),t._v(" "),v("p",[v("img",{attrs:{src:p(5197),alt:"1648312244840"}})]),t._v(" "),v("p",[t._v("结果是3，这样就需要注意了，可能会造成精度的丢失")]),t._v(" "),v("p",[v("img",{attrs:{src:p(5198),alt:"1648312276872"}})]),t._v(" "),v("p",[t._v("还有就是显式转换 不能将String转为数据类型")]),t._v(" "),v("p",[t._v("​\t\t相当于我们不能把鸡蛋转化为整数，因为他们不兼容")]),t._v(" "),v("p",[v("img",{attrs:{src:p(5199),alt:"1648312386220"}})]),t._v(" "),v("p",[t._v("那么我们如何为这种String类型转换为数值类型呢，就需要使用到包装类了")]),t._v(" "),v("p",[t._v("​\t\t使用包装类型的主要作用就是可以兼容String类型")]),t._v(" "),v("p",[v("img",{attrs:{src:p(5200),alt:"1648312668622"}})]),t._v(" "),v("p",[t._v("如果String是想转化为浮点类型的话，使用包装类Double")]),t._v(" "),v("p",[v("img",{attrs:{src:p(5201),alt:"1648312893275"}})])])}),[],!1,null,null,null);s.default=_.exports}}]);