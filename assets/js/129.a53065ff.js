(window.webpackJsonp=window.webpackJsonp||[]).push([[129],{6790:function(s,t,a){s.exports=a.p+"assets/img/image-20220428232704654.aeece48d.png"},6791:function(s,t,a){s.exports=a.p+"assets/img/image-20220428232933151.44f12568.png"},6792:function(s,t,a){s.exports=a.p+"assets/img/image-20220428233545951.c64fa163.png"},6793:function(s,t,a){s.exports=a.p+"assets/img/image-20220428233951981.7861dcff.png"},6794:function(s,t,a){s.exports=a.p+"assets/img/image-20220429000050485.251108c4.png"},6795:function(s,t,a){s.exports=a.p+"assets/img/image-20220429000647034.8f2aa398.png"},6796:function(s,t,a){s.exports=a.p+"assets/img/image-20220429002029353.d7c7d9cb.png"},6797:function(s,t,a){s.exports=a.p+"assets/img/image-20220429002832272.dfc0bb0e.png"},6798:function(s,t,a){s.exports=a.p+"assets/img/image-20220429003008432.dd7a8da8.png"},6799:function(s,t,a){s.exports=a.p+"assets/img/image-20220429003459909.efa16f70.png"},6800:function(s,t,a){s.exports=a.p+"assets/img/image-20220429003725117.70cd6719.png"},6801:function(s,t,a){s.exports=a.p+"assets/img/image-20220429004238474.d96c10dd.png"},6802:function(s,t,a){s.exports=a.p+"assets/img/image-20220429004401767.1425b1a6.png"},6803:function(s,t,a){s.exports=a.p+"assets/img/image-20220429004533954.911426c8.png"},6804:function(s,t,a){s.exports=a.p+"assets/img/image-20220429011803537.5b8aec6e.png"},6805:function(s,t,a){s.exports=a.p+"assets/img/image-20220429012001242.49888c37.png"},6806:function(s,t,a){s.exports=a.p+"assets/img/image-20220429012126224.c48398f1.png"},6807:function(s,t,a){s.exports=a.p+"assets/img/image-20220429012252355.64e06a0f.png"},6808:function(s,t,a){s.exports=a.p+"assets/img/image-20220429012342159.3c6d963f.png"},8881:function(s,t,a){"use strict";a.r(t);var e=a(5),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"_38-k8s核心实战-存储抽象-基本概念与nfs环境搭建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_38-k8s核心实战-存储抽象-基本概念与nfs环境搭建"}},[s._v("#")]),s._v(" 38.k8s核心实战-存储抽象-基本概念与NFS环境搭建")]),s._v(" "),e("p",[s._v("​")]),s._v(" "),e("h2",{attrs:{id:"存储抽象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#存储抽象"}},[s._v("#")]),s._v(" 存储抽象")]),s._v(" "),e("p",[s._v("​\t\t下面我们聊一下k8s的存储抽象")]),s._v(" "),e("p",[s._v("​\t首先我们参考一下这么个场景，还是3台机器，这些机器运行了各种各样的Pod，而Pod往往有些数据想要挂载到外面我们来方便修改，比如我们以前学docker的时候，把nginx的html 目录挂载到外面，这样我们在外面放一个nginx的页面我们的内部就相当于改变了。")]),s._v(" "),e("p",[s._v("​\t\t所以呢我们未来可能每个Pod都会有这样的需求，比如我们现在的Pod想把他的容器内的/data 挂载到我们主机的/a位置，我们在/a位置修改就相当于修改/data目录的内容。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6790),alt:"image-20220428232704654"}})]),s._v(" "),e("p",[s._v("​\t其他的Pod也一样，比如想把/logs挂载等等每个Pod可能都需要进行挂载，这是我们以前，先不聊k8s，如果按docker启动容器的话，我们就可以这么来做，这样我们启动的容器越多我们挂载在外边的内容也就越多。")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6791),alt:"image-20220428232933151"}})]),s._v(" "),e("p",[s._v("​\t但是如果使用k8s后，我们还是使用这种方式挂载的话，就会面临很严重的问题，例如，我们现在的Pod都这样来挂载，但是有一个Pod突然发生了故障宕机，宕机后k8s感知到这个Pod线下了，按照k8s故障转移他会在5分钟后在其他机器再启动一份，但是我们宕机的Pod是在3号机器的，他挂载的目录也是在3号机器的，假如k8s重新启动了一份是在2号机器那么对应的挂载就映射到了2号机器，而3号机器的内容在2号机器并没有")]),s._v(" "),e("p",[s._v("​\t这就导致虽然这个Pod重新拉起一份，但是里面没有数据，如果这个Pod是mySql那就完蛋了")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6792),alt:"image-20220428233545951"}})]),s._v(" "),e("p",[s._v("​\t\t我们现在就希望如果Pod宕机转移到其他机器，这个挂载的数据能够还在，所以我们现在把整个数据挂载层整理一下，k8s就可以把我们这个挂载的内容统一管理起来叫存储层")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6793),alt:"image-20220428233951981"}})]),s._v(" "),e("p",[s._v("​\t以后我们每个Pod想挂载什么就告诉k8s就可以了，k8s会自动为我们分配空间然后挂载，包括就算这个Pod宕机，在别的机器重新拉起一份k8s还会让这个Pod去找之前挂载的那个空间，所以我们就希望有这样的一个能力，k8s就将存储层抽象出来。")]),s._v(" "),e("p",[s._v("​\t\t这个存储层使用的技术可以有很多，比如Glusterfs、NFS、CephFS等等框架，但k8s又不是专业负责存储的，我们可以对这些文件存储框架可以挑选一种，也就是说k8s对于存储层是开放的，我们用什么技术都行。")]),s._v(" "),e("p",[s._v("​\t\t比如我们使用的是NFS（网络文件系统）为例，解决上面的问题就需要这么来做，比如我们在1号机器我开了一个目录叫/nfs/data有50G空间，未来大家的Pod挂数据都可以往这个目录挂，NFS的效果就是我们在1号机器开一个目录，为了防止1号机器宕机，我们在其他机器也都备份一个目录/bak/data，里面内容是一样的")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6794),alt:"image-20220429000050485"}})]),s._v(" "),e("p",[s._v("​\t\t假设我们的某个Pod是将内容写在这个备份的挂载目录下的，NFS会自动进行同步将数据都发送给其他的机器，就算是宕机在其他机器拉起一份Pod，那么在其他机器上挂载的内容和之前的是同步的，数据还在这就是我们说的NFS文件系统。")]),s._v(" "),e("p",[s._v("​\t我们使用NFS系统将来把我们的存储空间都抽象下来，我们NFS系统的这些文件夹它可能存在各个机器中比如node1，node2，node3")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6795),alt:"image-20220429000647034"}})]),s._v(" "),e("p",[s._v("​\t这样就算某个node2节点宕机了，我们的故障转移，node2的Pod在node3中又启动一份，而这个node3中Pod数据怎么办呢，node3中的Pod会在node3中的挂载数据中去找，因为集群中的存储层都使用NFS系统每个节点的数据都是会同步的，这就是我们所说的k8s存储抽象。")]),s._v(" "),e("h2",{attrs:{id:"_2、搭建nfs网络文件环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、搭建nfs网络文件环境"}},[s._v("#")]),s._v(" 2、搭建NFS网络文件环境")]),s._v(" "),e("p",[s._v("​\t接下来我们要体验k8s存储抽象的完整内容，我们先要搭建一个NFS网络文件系统，这个网络文件系统我们可以随便指定一台机器作为NFS-Server就是NFS的主节点，然后其他的机器我们可以称为NFS的客户端")]),s._v(" "),e("p",[s._v("​\tNFS的客户端去同步NFS-Server的数据，只要Server发生变化Client客户端就会发生变化")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6796),alt:"image-20220429002029353"}})]),s._v(" "),e("h4",{attrs:{id:"_2-1安装nfs文件系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1安装nfs文件系统"}},[s._v("#")]),s._v(" 2.1安装NFS文件系统")]),s._v(" "),e("p",[s._v("​\t所有的节点都需要安装nfs--如我们现在测试3个节点，那么3个节点都需要安装一下")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("yum install -y nfs-utils\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"_2-2主节点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2主节点"}},[s._v("#")]),s._v(" 2.2主节点")]),s._v(" "),e("p",[s._v("​\t我们选择一个节点作为主节点--然后执行脚本")]),s._v(" "),e("p",[s._v("​\t这个脚本的意思是：我们在主节点，准备暴露/nfs/data/这个目录 *就是所有客户端都可以同步我的这个目录，而且以insecure非安全的方式，rw读写的方式来进行同步")]),s._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#nfs主节点")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/nfs/data/ *(insecure,rw,sync,no_root_squash)"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/exports\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("​\t执行")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6797),alt:"image-20220429002832272"}})]),s._v(" "),e("p",[s._v("​\t然后我们必须要有这个文件夹，如果没有就创建一下mkdir -p /nfs/data/")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6798),alt:"image-20220429003008432"}})]),s._v(" "),e("p",[s._v("​\t接下来只需要2个命令")]),s._v(" "),e("p",[s._v("​\t我们启动RPC远程绑定，开机就启动")]),s._v(" "),e("p",[s._v("​\tsystemctl enable rpcbind --now")]),s._v(" "),e("p",[s._v("​\t再来启动NFS服务器，开机启动而且现在就启动")]),s._v(" "),e("p",[s._v("​\tsystemctl enable nfs-server --now")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6799),alt:"image-20220429003459909"}})]),s._v(" "),e("p",[s._v("然后我们让配置生效")]),s._v(" "),e("p",[s._v("​\texportfs -r")]),s._v(" "),e("p",[s._v("​\t这样我们的NFS系统就搞定了服务端了--都是在主节点执行的命令")]),s._v(" "),e("p",[s._v("​\t我们也可以检查一下exportfs，确认NFS的目录是/nfs/data/这个目录")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6800),alt:"image-20220429003725117"}})]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('#nfs主节点\necho "/nfs/data/ *(insecure,rw,sync,no_root_squash)" > /etc/exports\n\nmkdir -p /nfs/data\nsystemctl enable rpcbind --now\nsystemctl enable nfs-server --now\n#配置生效\nexportfs -r\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h4",{attrs:{id:"_2-3从节点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3从节点"}},[s._v("#")]),s._v(" 2.3从节点")]),s._v(" "),e("p",[s._v("​\t接下来我们想让其他节点来同步主节点的NFS文件系统的内容，我们需要先查看一下NFS服务器有哪些内容可以让我们同步挂载")]),s._v(" "),e("p",[s._v("​\tshowmount -e 主节点的IP")]),s._v(" "),e("p",[s._v("​\tip a我们在主节点查看一下IP")]),s._v(" "),e("p",[s._v("​\t"),e("img",{attrs:{src:a(6801),alt:"image-20220429004238474"}})]),s._v(" "),e("p",[s._v("​\t我们看到远程机器有nfs/data这个路径可以挂载")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6802),alt:"image-20220429004401767"}})]),s._v(" "),e("p",[s._v("​\t我们需要给每个客户端也就是从节点也都创建一个挂载的目录，这个从节点的目录名字与主节点不一致也是可以的")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6803),alt:"image-20220429004533954"}})]),s._v(" "),e("p",[s._v("​")]),s._v(" "),e("p",[s._v("​\t我们创建好文件夹后就需要进行同步操作了")]),s._v(" "),e("p",[s._v("​\tmount 挂载 使用nfs系统进行挂载，远程NFS的server地址，远程服务器暴露的文件夹，然后是将远程文件夹挂载到本地同步的文件夹")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mount -t nfs IP 远程文件夹 本地文件夹\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("img",{attrs:{src:a(6804),alt:"image-20220429011803537"}})]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('showmount -e 172.31.0.4\n\n#执行以下命令挂载 nfs 服务器上的共享目录到本机路径 /root/nfsmount\nmkdir -p /nfs/data\n\nmount -t nfs 172.31.0.4:/nfs/data /nfs/data\n# 写入一个测试文件\necho "hello nfs server" > /nfs/data/test.txt\n\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("​\t我们验证一下：进入主节点，然后进入暴露的文件夹内，我们输出一个1111到a文件下，a文件是在暴露的文件夹内")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6805),alt:"image-20220429012001242"}})]),s._v(" "),e("p",[s._v("​\t我们现在来到客户端节点，然后看一下有没有同步到这个文件")]),s._v(" "),e("p",[s._v("​\t\t我们发现是存在的，同步过来了")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6806),alt:"image-20220429012126224"}})]),s._v(" "),e("p",[s._v("​")]),s._v(" "),e("p",[s._v("​\t我们在客户端修改一下这个a文件的内容")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6807),alt:"image-20220429012252355"}})]),s._v(" "),e("p",[s._v("​\t我们回到主节点看一下有没有变化--也发生改变了，从节点变化也会同步到主节点")]),s._v(" "),e("p",[e("img",{attrs:{src:a(6808),alt:"image-20220429012342159"}})]),s._v(" "),e("p",[s._v("​\t这就是一个典型的网络文件系统")]),s._v(" "),e("p",[s._v("https://www.bilibili.com/video/BV13Q4y1C7hS?p=62")])])}),[],!1,null,null,null);t.default=n.exports}}]);