(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{4864:function(t,s,p){t.exports=p.p+"assets/img/1684508893311.d67f5ed4.png"},4865:function(t,s,p){t.exports=p.p+"assets/img/1684509184139.8f0ff5c3.png"},4866:function(t,s,p){t.exports=p.p+"assets/img/1684509306890.c94ceea4.png"},4867:function(t,s,p){t.exports=p.p+"assets/img/1684509398483.d907e051.png"},4868:function(t,s,p){t.exports=p.p+"assets/img/1684509465525.530620b6.png"},4869:function(t,s,p){t.exports=p.p+"assets/img/1684509498476.90579dcc.png"},4870:function(t,s,p){t.exports=p.p+"assets/img/1684509625174.c961ddb5.png"},4871:function(t,s,p){t.exports=p.p+"assets/img/1684509743142.083d5258.png"},4872:function(t,s,p){t.exports=p.p+"assets/img/1684509840046.965ea629.png"},4873:function(t,s,p){t.exports=p.p+"assets/img/1684510056268.0b794cba.png"},4874:function(t,s,p){t.exports=p.p+"assets/img/1684510273121.55f34d94.png"},4875:function(t,s,p){t.exports=p.p+"assets/img/1684510366682.0f7ab81d.png"},4876:function(t,s,p){t.exports=p.p+"assets/img/1684510754346.ccde0476.png"},4877:function(t,s,p){t.exports=p.p+"assets/img/1684510915723.72b49955.png"},4878:function(t,s,p){t.exports=p.p+"assets/img/1684511057945.10256c8c.png"},4879:function(t,s,p){t.exports=p.p+"assets/img/1684511147915.5d909045.png"},4880:function(t,s,p){t.exports=p.p+"assets/img/1684511273657.4cd24025.png"},4881:function(t,s,p){t.exports=p.p+"assets/img/1684511343204.4aa27df1.png"},4882:function(t,s,p){t.exports=p.p+"assets/img/1684511404455.897966ee.png"},4883:function(t,s,p){t.exports=p.p+"assets/img/1684511540211.071145dc.png"},4884:function(t,s,p){t.exports=p.p+"assets/img/1684511631608.3c1f7537.png"},4885:function(t,s,p){t.exports=p.p+"assets/img/1684511711856.29fba842.png"},9384:function(t,s,p){"use strict";p.r(s);var v=p(5),_=Object(v.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"_5、idea-单元测试-覆盖率"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5、idea-单元测试-覆盖率"}},[t._v("#")]),t._v(" 5、idea-单元测试-覆盖率")]),t._v(" "),v("h4",{attrs:{id:"_1、基本测试"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、基本测试"}},[t._v("#")]),t._v(" 1、基本测试")]),t._v(" "),v("p",[t._v("​\t首先--我们看一下测试类的注解")]),t._v(" "),v("p",[t._v("​\t使用@SpringbootTest，classes = 启动类")]),t._v(" "),v("p",[t._v("​\t\t为什么这么写，因为我们基于Springboot的测试，我们就必须要告诉我们是使用哪个容器启动类启动的项目进行测试")]),t._v(" "),v("p",[t._v("​\t\t\t而且会加载下面的资源和依赖--比如Autowired注解，如果我们没有这个主程序这些依赖ioc是无法注入的")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4864),alt:"1684508893311"}})]),t._v(" "),v("p",[t._v("​\t点击运行--进行测试")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4865),alt:"1684509184139"}})]),t._v(" "),v("h4",{attrs:{id:"_2、包中的所有测试类-测试"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、包中的所有测试类-测试"}},[t._v("#")]),t._v(" 2、包中的所有测试类-测试")]),t._v(" "),v("p",[t._v("​\t\t\t全部跑一次--测试包中的所有测试类")]),t._v(" "),v("p",[t._v("​\t\t\t右键--测试包，点击 run test in 。。。。")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4866),alt:"1684509306890"}})]),t._v(" "),v("p",[t._v("​\t比如在运行的过程中某个测试发生异常--我们可以进行单独的测试")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4867),alt:"1684509398483"}})]),t._v(" "),v("p",[t._v("​\t我们也可以直接跳到这个测试类的代码处---右键 jump to source 跳到源码处")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4868),alt:"1684509465525"}})]),t._v(" "),v("p",[t._v("​\t显示红色--失败的测试")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4869),alt:"1684509498476"}})]),t._v(" "),v("p",[t._v("​\t\t我们断点看一下--发现 数据是null，而我们的断言是 不为null所以就报错了")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4870),alt:"1684509625174"}})]),t._v(" "),v("h4",{attrs:{id:"_3、如何在test中测试controller"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、如何在test中测试controller"}},[t._v("#")]),t._v(" 3、如何在test中测试controller")]),t._v(" "),v("p",[t._v("​\t\t在方法上按 ctrl +shift +T 就是创建测试")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4871),alt:"1684509743142"}})]),t._v(" "),v("p",[t._v("​\t\t我们生成测试的时候--可以选择测试类库，测试类名，是否有父类，选择测试包")]),t._v(" "),v("p",[t._v("​\t\t\t\t是否有执行前后的方法，然后选择需要测试的方法")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4872),alt:"1684509840046"}})]),t._v(" "),v("p",[t._v("​\t\t然后是把springboot的测试搞进来，还有一些依赖 测试Controller需要webApplicationContext上下文")]),t._v(" "),v("p",[t._v("​\t\t\t还有mvc，还有请求头")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4873),alt:"1684510056268"}})]),t._v(" "),v("p",[t._v("​\t然后是前置环境--需要mock模拟构建一个mvc的容器环境，然后设置一些请求头")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4874),alt:"1684510273121"}})]),t._v(" "),v("p",[t._v("​\t然后写测试用例")]),t._v(" "),v("p",[t._v("​\t\tMockMvcRequestBuilders构建请求--如post 然后立马加入路径")]),t._v(" "),v("p",[t._v("​\t\t设置请求头，设置请求内容类型")]),t._v(" "),v("p",[t._v("​\t\tandExpect -- 这个是我们期望他的结果--这个意思是返回200")]),t._v(" "),v("p",[t._v("​\t\t然后获取结果返回--getResponse")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4875),alt:"1684510366682"}})]),t._v(" "),v("p",[t._v("​\t\t\t\t注意注解@SyeakyThrows是处理异常的一个语法糖注解")]),t._v(" "),v("p",[t._v("​")]),t._v(" "),v("p",[t._v("​\t测试中提示该接口不支持post，我们修改成get进行测试成功")]),t._v(" "),v("p",[t._v("​\t数据也返回")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4876),alt:"1684510754346"}})]),t._v(" "),v("p",[t._v("​\t\t使用post请求的话--传参--使用context")]),t._v(" "),v("p",[t._v("​\t\t可以直接是json串，也可以是一个对象，然后使用JSON.toString的方式也是可以的")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4877),alt:"1684510915723"}})]),t._v(" "),v("p",[t._v("​\t这种方式也是可以很大程度上的模拟postman的请求的")]),t._v(" "),v("h4",{attrs:{id:"_4、coverage-覆盖率-指标"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4、coverage-覆盖率-指标"}},[t._v("#")]),t._v(" 4、coverage--覆盖率 指标")]),t._v(" "),v("p",[t._v("​\t\t我们点击运行一下看看")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4878),alt:"1684511057945"}})]),t._v(" "),v("p",[t._v("运行完之后--我们发现覆盖率的内容什么都没有")]),t._v(" "),v("p",[t._v("​\t\t其实是需要我们去编辑一下的")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4879),alt:"1684511147915"}})]),t._v(" "),v("p",[t._v("​\t\t这个编辑其实就是我们要对那些内容进行 覆盖率coverage的统计")]),t._v(" "),v("p",[t._v("​\t\t\t我们现在选中了一下包，那么这个意思就是这些包下的类都会进行覆盖率的统计")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4880),alt:"1684511273657"}})]),t._v(" "),v("p",[t._v("​\t然后我们重新运行一下")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4881),alt:"1684511343204"}})]),t._v(" "),v("p",[t._v("​\t运行完之后--我们可以看到覆盖率已经有内容了")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4882),alt:"1684511404455"}})]),t._v(" "),v("p",[t._v("​\t我们可以键入apitest这个包下")]),t._v(" "),v("p",[t._v("​\t\t类是都cover覆盖了，方法覆盖了88，代码行是覆盖了92")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4883),alt:"1684511540211"}})]),t._v(" "),v("p",[t._v("​\t然后可以双击看一下这个类")]),t._v(" "),v("p",[t._v("​\t\t我们可以看到--这个类的左侧有一些绿色的")]),t._v(" "),v("p",[t._v("​\t\t\t这些绿色的就代表cover覆盖住了")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4884),alt:"1684511631608"}})]),t._v(" "),v("p",[t._v("​\t点击这个绿色的可以看到，cover覆盖命中了几次")]),t._v(" "),v("p",[v("img",{attrs:{src:p(4885),alt:"1684511711856"}})]),t._v(" "),v("p",[t._v("​\t\t这个就是 传言的 覆盖率的测试")]),t._v(" "),v("p",[t._v("https://www.bilibili.com/video/BV1SR4y1H77G/?spm_id_from=pageDriver&vd_source=243ad3a9b323313aa1441e5dd414a4ef")])])}),[],!1,null,null,null);s.default=_.exports}}]);