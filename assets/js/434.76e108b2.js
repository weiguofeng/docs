(window.webpackJsonp=window.webpackJsonp||[]).push([[434],{5700:function(t,e,s){t.exports=s.p+"assets/img/image-20220413213002373.1203823f.png"},5701:function(t,e,s){t.exports=s.p+"assets/img/image-20220413213212290.67250006.png"},5702:function(t,e,s){t.exports=s.p+"assets/img/image-20220413213655096.3e8ef906.png"},5703:function(t,e,s){t.exports=s.p+"assets/img/image-20220413213810878.a6e7f9c5.png"},5704:function(t,e,s){t.exports=s.p+"assets/img/image-20220413213938708.282a6878.png"},5705:function(t,e,s){t.exports=s.p+"assets/img/image-20220413214020103.c75d934b.png"},8972:function(t,e,s){"use strict";s.r(e);var a=s(5),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_35-setter注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_35-setter注入"}},[t._v("#")]),t._v(" 35.Setter注入")]),t._v(" "),a("p",[t._v("​")]),t._v(" "),a("p",[t._v("​\t\t我们讨论一下另一种称为setters的依赖注入")]),t._v(" "),a("p",[t._v("​\t\t这里有一个私有字段，我们可以声明一个setter，并初始化它")]),t._v(" "),a("p",[a("img",{attrs:{src:s(5700),alt:"image-20220413213002373"}})]),t._v(" "),a("p",[t._v("​\t现在我们不喜欢setter位于这个类的顶部，我们一般放在底部，所以我们选择代码块，然后按shift + alt + down，这样就移动到最下面了")]),t._v(" "),a("p",[a("img",{attrs:{src:s(5701),alt:"image-20220413213212290"}})]),t._v(" "),a("p",[t._v("​\t现在除了这个构造器可以注入，我们还可以使用这个setter进行注入这个类的依赖关系，好处是什么？好处是我们可以在我们程序的整个生命周期中更改这些依赖关系，我们下面展示一下：")]),t._v(" "),a("p",[t._v("​\t我们新建一个实现类：")]),t._v(" "),a("p",[a("img",{attrs:{src:s(5702),alt:"image-20220413213655096"}})]),t._v(" "),a("p",[t._v("然后实现我们的接口")]),t._v(" "),a("p",[a("img",{attrs:{src:s(5703),alt:"image-20220413213810878"}})]),t._v(" "),a("p",[t._v("然后我们来到主类Main，将实现类注入进去")]),t._v(" "),a("p",[a("img",{attrs:{src:s(5704),alt:"image-20220413213938708"}})]),t._v(" "),a("p",[t._v("我们执行一下代码：可以看到，2018年的是3000,2019年的是0")]),t._v(" "),a("p",[a("img",{attrs:{src:s(5705),alt:"image-20220413214020103"}})]),t._v(" "),a("p",[t._v("​\t使用setter注入的好处是我们可以在应用程序的整个生命周期中更改类的依赖关系。")]),t._v(" "),a("p",[t._v("​\t如果这样是我们需要的方式，那么就可以使用setter的方式进行注入，否则就使用构造函数。构造函数注入是更常见的方式。")])])}),[],!1,null,null,null);e.default=r.exports}}]);