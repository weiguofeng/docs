(window.webpackJsonp=window.webpackJsonp||[]).push([[802],{9237:function(t,e,s){"use strict";s.r(e);var r=s(5),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"分布式缓存相关面试题的回答技巧总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分布式缓存相关面试题的回答技巧总结"}},[t._v("#")]),t._v(" 分布式缓存相关面试题的回答技巧总结")]),t._v(" "),s("p",[t._v("说实话，这一套东西基本构成了缓存这块你必须知道的基础性的知识，如果你不知道，那么说明你有点失职，确实平时没好好积累。")]),t._v(" "),s("p",[t._v("因为这些问题确实不难，如果我往深了问，可以问的很细，结合项目扣的很细，比如你们公司线上系统高峰QPS 3000？那请求主要访问哪些接口？redis抗了多少请求？mysql抗了多少请求？你到底是怎么实现高并发的？咱们聊聊redis的内核吧，看看你对底层了解的多么？如果要缓存几百GB的数据会有什么坑该这么弄？如果缓存出现热点现象该这么处理？某个value特别大把网卡给打死了怎么办？等等等等，可以深挖的东西其实有很多。。。。。")]),t._v(" "),s("p",[t._v("但是如果你掌握好了这套东西的回答，那么你在面试的时候，如果面试官没有全都问到，你可以自己主动合盘脱出。比如你可以说，我们线上的缓存，做了啥啥机制，防止雪崩、防止穿透、保证双写时的数据一致性、保证并发竞争时的数据一致性，我们线上咋部署的，啥架构，怎么玩儿的。这套东西你可以自己说出来，展示一下你对缓存这块的掌握。")])])}),[],!1,null,null,null);e.default=a.exports}}]);