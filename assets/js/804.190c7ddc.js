(window.webpackJsonp=window.webpackJsonp||[]).push([[804],{8965:function(e,a,n){"use strict";n.r(a);var s=n(5),t=Object(s.a)({},(function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"_1、如何使用maven构建springboot多模块项目-各模块之间的关系是如何关联的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、如何使用maven构建springboot多模块项目-各模块之间的关系是如何关联的"}},[e._v("#")]),e._v(" 1、如何使用maven构建springboot多模块项目？各模块之间的关系是如何关联的")]),e._v(" "),n("p",[e._v("使用 Maven 构建 Spring Boot 多模块项目，需要按照以下步骤进行操作：")]),e._v(" "),n("ol",[n("li",[e._v("创建一个 Maven 项目，选择 Maven 的父项目模板，并设置好 GroupId、ArtifactId 和 Version 等信息。")]),e._v(" "),n("li",[e._v("在父项目中，创建子模块的 Maven 模块。可以通过以下命令创建：")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("mvn archetype:generate -DgroupId=com.example -DartifactId=my-module -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("其中，"),n("code",[e._v("com.example")]),e._v(" 是项目的 GroupId，"),n("code",[e._v("my-module")]),e._v(" 是模块的 ArtifactId，"),n("code",[e._v("maven-archetype-quickstart")]),e._v(" 是 Maven 的模板。")]),e._v(" "),n("ol",[n("li",[e._v("在每个子模块的 "),n("code",[e._v("pom.xml")]),e._v(" 文件中，添加以下依赖：")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("phpCopy code<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter</artifactId>\n</dependency>\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br")])]),n("p",[e._v("这样就可以使用 Spring Boot 来开发应用程序了。")]),e._v(" "),n("ol",[n("li",[e._v("在父项目的 "),n("code",[e._v("pom.xml")]),e._v(" 文件中，添加以下内容：")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("phpCopy code<modules>\n  <module>my-module</module>\n</modules>\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("这样 Maven 就会将这个模块作为父项目的子模块来处理。")]),e._v(" "),n("ol",[n("li",[e._v("配置子模块之间的依赖关系。如果一个子模块需要依赖另一个子模块，可以在 "),n("code",[e._v("pom.xml")]),e._v(" 文件中添加以下内容：")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("phpCopy code<dependencies>\n  <dependency>\n    <groupId>com.example</groupId>\n    <artifactId>my-other-module</artifactId>\n    <version>1.0-SNAPSHOT</version>\n  </dependency>\n</dependencies>\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br")])]),n("p",[e._v("其中，"),n("code",[e._v("com.example")]),e._v(" 是项目的 GroupId，"),n("code",[e._v("my-other-module")]),e._v(" 是依赖的子模块的 ArtifactId，"),n("code",[e._v("1.0-SNAPSHOT")]),e._v(" 是子模块的版本号。")]),e._v(" "),n("ol",[n("li",[e._v("在每个子模块的 "),n("code",[e._v("src/main/java")]),e._v(" 目录下，创建 Spring Boot 应用程序。在应用程序类上添加 "),n("code",[e._v("@SpringBootApplication")]),e._v(" 注解，这样 Spring Boot 就会自动配置应用程序。")]),e._v(" "),n("li",[e._v("构建项目。在父项目的根目录下运行以下命令：")])]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("mvn clean install\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("​\t\t这样 Maven 就会自动构建整个项目，并将所有的子模块打包成 jar 文件。你可以在每个子模块的 "),n("code",[e._v("target")]),e._v(" 目录下找到对应的 jar 文件。")]),e._v(" "),n("p",[e._v("这样，你就成功地使用 Maven 构建了一个 Spring Boot 多模块项目，并且完成了各个模块之间的依赖关系。")])])}),[],!1,null,null,null);a.default=t.exports}}]);