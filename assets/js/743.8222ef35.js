(window.webpackJsonp=window.webpackJsonp||[]).push([[743],{8497:function(s,n,t){"use strict";t.r(n);var a=t(5),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"redis的过期策略能介绍一下吗-要不你在手写个lru算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis的过期策略能介绍一下吗-要不你在手写个lru算法"}},[s._v("#")]),s._v(" redis的过期策略能介绍一下吗？要不你在手写个LRU算法？")]),s._v(" "),t("h4",{attrs:{id:"_1-面试题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-面试题"}},[s._v("#")]),s._v(" 1.面试题")]),s._v(" "),t("p",[s._v("​\t"),t("strong",[s._v("redis的过期策略能介绍一下吗？内存淘汰机制都有哪些？手写一下LRU代码实现？")])]),s._v(" "),t("h4",{attrs:{id:"_2-面试官心里分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-面试官心里分析"}},[s._v("#")]),s._v(" 2.面试官心里分析")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("\t1.我往redis里写的数据怎么没了？\n\t\t说我们生产环境的redis怎么经常会丢掉一些数据？写进去了，过一会儿可能就没了，我的天，同学，你问这个问题就说明你redis就没用对啊。redis是缓存，你给当存储了是吧？\n\t\t\n\t\t啥叫缓存，用内存当缓存。内存是无限的吗？内存是很宝贵而且是有限的，磁盘是廉价而且是大量的。可能一台物理机器就几十个G的内存，但是可以有几个T的硬盘空间，redis主要是基于内存来进行高性能、高并发的读写操作的。\n\t\t\n\t\t那既然内存是有限的，比如redis就只能用10个G，你要是往里面写20个G的数据，会咋办？当然会干掉10个G的数据，然后就保留10个G的数据了。那干掉哪些数据？保留哪些数据？当然是干掉不常用的数据，保留常用的数据了\n\t\t\n\t\t所以说，这是缓存的一个最基本的概念，数据是会过期的，要么是你自己设置个过期时间，要么是redis自己给干掉。\n\t\tset key value 过期时间（1小时）\n\t\t\n\t\tset进去的key，1小时之后就没了，就失效了\n\t\t\n\t2.我的数据明明都过期了，怎么还占用着内存啊？\n\t\t还有一种就是如果你设置好了一个过期时间，你知道redis是怎么给你弄成过期的吗？什么时候删除掉？如果你不知道，之前就有个学员就问了，为啥好多数据明明应该过期了，结果发现redis内存占用还是很高？ 那是因为你不知道redis是怎么删除那些过期key的。\n\t\t\n\t\tredis 内存一共是10g，你现在往里面写了5g的数据，结果这些数据明明你都设置了过期时间，要求这些数据1小时之后都会过期，结果1小时之后，你回来一看，redis机器，怎么内存占用还是50%呢？5g数据过期了，我从redis里查，是查不到了，结果过期的数据还占用着redis的内存。\n\n\t\t如果你连这个问题都不知道，上来就懵了，回答不出来，那线上你写代码的时候，想当然的认为写进redis的数据就一定会存在，后面导致系统各种漏洞和bug，谁来负责？\n\t\t\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("h1",{attrs:{id:"_3-面试题剖析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-面试题剖析"}},[s._v("#")]),s._v(" 3.面试题剖析")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("\t1.设置过期时间\n\t\t我们set key的时候，可以给一个expire time，就是过期时间，指定这个key比如只能存活1个小时？或者10分钟，这个很有用 我们自己可以指定缓存到期就失效。\n\t\t\n\t\t如果你设置了一批key的过期时间为1个小时，那么1个小时后，redis是怎么对这些key进行删除的？\n\t\n\t答案是：定期删除+惰性删除\n\t\n\t\t所谓定期删除，指的是redis默认是每隔100ms就随机抽取一些设置了过期时间的key，检查其是否过期，如果过期就删除。 假设redis里放了10万个key都设置了过期时间，你每隔100ms就检查10万个key，那redis基本上就死了，cpu负载会很高的，消耗在你的检查过期key上了。注意，这里可不是每隔100ms就遍历所有设置过期时间的key，那样就是一场性能上的灾难。实际上redis是每隔100ms随机抽取一些key来检查和删除的。\n\t\t\n\t\t\n\t\t但是问题是，定期删除可能会导致很多过期key到了时间，并没有被删除掉，那咋整呢？所以就是惰性删除了。这就是说你在获取某个key的时候，redis会检查一下，这个key如果设置了过期时间那么是否过期了呢？如果过期了此时就会删除，不会给你返回任何东西。\n\t\t\n\t\t并不是key到了时间就会被删除掉，而是在你查询这个key的时候，redis再懒惰的检查一下。\n\t\t\n\t\t通过上述俩种手段结合起来，保证过期的key一定会被干掉。\n\t\t\n\t\t很简单，就是说，你的过期key，靠定期删除没有被删除掉，还停留在内存里，占用着你的内存呢，除非你的系统去查一下那个key，才会被redis给删除掉。\n\n\t\t但是实际上这还是有问题的，如果定期删除漏掉了很多过期key，然后你也没及时去查，也就没走惰性删除，此时会怎么样？如果大量过期key堆积在内存里，导致redis内存块耗尽了，咋整？\n\n\t答案是：走内存淘汰机制。\n\t\n\t2.内存淘汰：\n\t\t如果redis的内存占用过多的时候，此时会进行内存淘汰，有如下一些策略：\n\t\t1）noeviction：当内存不足以容纳新写入数据时，新写入操作会报错，这个一般没人用吧，实在是太恶心了\n\t\t\n\t\t2）allkeys-lru：当内存不足以容纳新写入数据时，在键空间中，移除最近最少使用的key（这个是最常用的）\n\t\t3）allkeys-random：当内存不足以容纳新写入数据时，在键空间中，随机移除某个key，这个一般没人用吧，为啥要随机，肯定是把最近最少使用的key给干掉啊\n\t\t\n\t\t4）volatile-lru：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，移除最近最少使用的key（这个一般不太合适）\n\t\t\n\t\t5）volatile-random：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，随机移除某个key\n\t\t\n\t\t6）volatile-ttl：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，有更早过期时间的key优先移除\n\t\t你写的数据太多，内存满了，或者触发了什么条件，redis lru，自动给你清理掉了一些最近很少使用的数据。 \n\t\t自己百度一下，如何设置redis内存淘汰。\n\t\t\n\t\t\n\t3.要不你手写一个LRU算法？\n\t\n\t\t我确实有时会问这个，因为有些候选人如果确实过五关斩六将，前面的问题都答的很好，那么其实让他写一下LRU算法，可以考察一下编码功底\n\n你可以现场手写最原始的LRU算法，那个代码量太大了，我觉得不太现实\n\npublic class LRUCache<K, V> extends LinkedHashMap<K, V> {\n    \nprivate final int CACHE_SIZE;\n\n    // 这里就是传递进来最多能缓存多少数据\n    public LRUCache(int cacheSize) {\n        super((int) Math.ceil(cacheSize / 0.75) + 1, 0.75f, true); // 这块就是设置一个hashmap的初始大小，同时最后一个true指的是让linkedhashmap按照访问顺序来进行排序，最近访问的放在头，最老访问的就在尾\n        CACHE_SIZE = cacheSize;\n    }\n\n    @Override\n    protected boolean removeEldestEntry(Map.Entry eldest) {\n        return size() > CACHE_SIZE; // 这个意思就是说当map中的数据量大于指定的缓存个数的时候，就自动删除最老的数据\n    }\n\n}\n\n我给你看上面的代码，是告诉你最起码你也得写出来上面那种代码，不求自己纯手工从底层开始打造出自己的LRU，但是起码知道如何利用已有的jdk数据结构实现一个java版的LRU\n\t\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);