(window.webpackJsonp=window.webpackJsonp||[]).push([[671],{1158:function(t,n,s){t.exports=s.p+"assets/img/1608649211163.18b4c0c8.png"},1159:function(t,n,s){t.exports=s.p+"assets/img/1608649261641.a6214027.png"},9169:function(t,n,s){"use strict";s.r(n);var a=s(5),r=Object(a.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_2018校招编程题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2018校招编程题"}},[t._v("#")]),t._v(" 2018校招编程题")]),t._v(" "),a("h4",{attrs:{id:"下面三道编程题来自网易2018校招编程题-这三道应该来说是非常简单的编程题了-这些题目大家稍微有点编程和数学基础的话应该没什么问题。看答案之前一定要自己先想一下如果是自己做的话会怎么去做-然后再对照这我的答案看看-和你自己想的有什么区别-那一种方法更好"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下面三道编程题来自网易2018校招编程题-这三道应该来说是非常简单的编程题了-这些题目大家稍微有点编程和数学基础的话应该没什么问题。看答案之前一定要自己先想一下如果是自己做的话会怎么去做-然后再对照这我的答案看看-和你自己想的有什么区别-那一种方法更好"}},[t._v("#")]),t._v(" 下面三道编程题来自网易2018校招编程题，这三道应该来说是非常简单的编程题了，这些题目大家稍微有点编程和数学基础的话应该没什么问题。看答案之前一定要自己先想一下如果是自己做的话会怎么去做，然后再对照这我的答案看看，和你自己想的有什么区别？那一种方法更好？")]),t._v(" "),a("p",[a("img",{attrs:{src:s(1158),alt:"1608649211163"}})]),t._v(" "),a("blockquote",[a("h1",{attrs:{id:"问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")])]),t._v(" "),a("h2",{attrs:{id:"一-获得特定数量硬币问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-获得特定数量硬币问题"}},[t._v("#")]),t._v(" 一 获得特定数量硬币问题")]),t._v(" "),a("p",[t._v("小易准备去魔法王国采购魔法神器,购买魔法神器需要使用魔法币,但是小易现在一枚魔法币都没有,但是小易有两台魔法机器可以通过投入x(x可以为0)个魔法币产生更多的魔法币。")]),t._v(" "),a("p",[t._v("魔法机器1:如果投入x个魔法币,魔法机器会将其变为2x+1个魔法币")]),t._v(" "),a("p",[t._v("魔法机器2:如果投入x个魔法币,魔法机器会将其变为2x+2个魔法币")]),t._v(" "),a("p",[t._v("小易采购魔法神器总共需要n个魔法币,所以小易只能通过两台魔法机器产生恰好n个魔法币,小易需要你帮他设计一个投入方案使他最后恰好拥有n个魔法币。")]),t._v(" "),a("p",[a("strong",[t._v("输入描述:")]),t._v(" 输入包括一行,包括一个正整数n(1 ≤ n ≤ 10^9),表示小易需要的魔法币数量。")]),t._v(" "),a("p",[a("strong",[t._v("输出描述:")]),t._v(" 输出一个字符串,每个字符表示该次小易选取投入的魔法机器。其中只包含字符'1'和'2'。")]),t._v(" "),a("p",[a("strong",[t._v("输入例子1:")]),t._v(" 10")]),t._v(" "),a("p",[a("strong",[t._v("输出例子1:")]),t._v(" 122")]),t._v(" "),a("h2",{attrs:{id:"二-求-相反数-问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-求-相反数-问题"}},[t._v("#")]),t._v(" 二 求“相反数”问题")]),t._v(" "),a("p",[t._v('为了得到一个数的"相反数",我们将这个数的数字顺序颠倒,然后再加上原先的数得到"相反数"。例如,为了得到1325的"相反数",首先我们将该数的数字顺序颠倒,我们得到5231,之后再加上原先的数,我们得到5231+1325=6556.如果颠倒之后的数字有前缀零,前缀零将会被忽略。例如n = 100, 颠倒之后是1.')]),t._v(" "),a("p",[a("strong",[t._v("输入描述:")]),t._v(" 输入包括一个整数n,(1 ≤ n ≤ 10^5)")]),t._v(" "),a("p",[a("strong",[t._v("输出描述:")]),t._v(" 输出一个整数,表示n的相反数")]),t._v(" "),a("p",[a("strong",[t._v("输入例子1:")]),t._v(" 1325")]),t._v(" "),a("p",[a("strong",[t._v("输出例子1:")]),t._v(" 6556")]),t._v(" "),a("h2",{attrs:{id:"三-字符串碎片的平均长度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-字符串碎片的平均长度"}},[t._v("#")]),t._v(" 三 字符串碎片的平均长度")]),t._v(" "),a("p",[t._v("一个由小写字母组成的字符串可以看成一些同一字母的最大碎片组成的。例如,\"aaabbaaac\"是由下面碎片组成的:'aaa','bb','c'。牛牛现在给定一个字符串,请你帮助计算这个字符串的所有碎片的平均长度是多少。")]),t._v(" "),a("p",[a("strong",[t._v("输入描述:")]),t._v(" 输入包括一个字符串s,字符串s的长度length(1 ≤ length ≤ 50),s只含小写字母('a'-'z')")]),t._v(" "),a("p",[a("strong",[t._v("输出描述:")]),t._v(" 输出一个整数,表示所有碎片的平均长度,四舍五入保留两位小数。")]),t._v(" "),a("p",[a("strong",[t._v("如样例所示:")]),t._v(' s = "aaabbaaac"\n所有碎片的平均长度 = (3 + 2 + 3 + 1) / 4 = 2.25')]),t._v(" "),a("p",[a("strong",[t._v("输入例子1:")]),t._v(" aaabbaaac")]),t._v(" "),a("p",[a("strong",[t._v("输出例子1:")]),t._v(" 2.25")]),t._v(" "),a("p",[a("img",{attrs:{src:s(1159),alt:"1608649261641"}})]),t._v(" "),a("blockquote",[a("h1",{attrs:{id:"答案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#答案"}},[t._v("#")]),t._v(" 答案")])]),t._v(" "),a("h2",{attrs:{id:"一-获得特定数量硬币问题-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-获得特定数量硬币问题-2"}},[t._v("#")]),t._v(" 一 获得特定数量硬币问题")]),t._v(" "),a("h3",{attrs:{id:"分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析"}},[t._v("#")]),t._v(" 分析：")]),t._v(" "),a("p",[t._v("作为该试卷的第一题，这道题应该只要思路正确就很简单了。")]),t._v(" "),a("p",[t._v("解题关键：明确魔法机器1只能产生奇数，魔法机器2只能产生偶数即可。我们从后往前一步一步推回去即可。")]),t._v(" "),a("h3",{attrs:{id:"示例代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例代码"}},[t._v("#")]),t._v(" 示例代码")]),t._v(" "),a("p",[t._v("注意：由于用户的输入不确定性，一般是为了程序高可用性使需要将捕获用户输入异常然后友好提示用户输入类型错误并重新输入的。所以下面我给了两个版本，这两个版本都是正确的。这里只是给大家演示如何捕获输入类型异常，后面的题目中我给的代码没有异常处理的部分，参照下面两个示例代码，应该很容易添加。（PS：企业面试中没有明确就不用添加异常处理，当然你有的话也更好）")]),t._v(" "),a("p",[a("strong",[t._v("不带输入异常处理判断的版本：")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('import java.util.Scanner;\n\npublic class Main2 {\n\t// 解题关键：明确魔法机器1只能产生奇数，魔法机器2只能产生偶数即可。我们从后往前一步一步推回去即可。\n\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println("请输入要获得的硬币数量：");\n\t\tScanner scanner = new Scanner(System.in);\n\t\tint coincount = scanner.nextInt();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile (coincount >= 1) {\n\t\t\t// 偶数的情况\n\t\t\tif (coincount % 2 == 0) {\n\t\t\t\tcoincount = (coincount - 2) / 2;\n\t\t\t\tsb.append("2");\n\t\t\t\t// 奇数的情况\n\t\t\t} else {\n\t\t\t\tcoincount = (coincount - 1) / 2;\n\t\t\t\tsb.append("1");\n\t\t\t}\n\t\t}\n\t\t// 输出反转后的字符串\n\t\tSystem.out.println(sb.reverse());\n\n\t}\n}\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br")])]),a("p",[a("strong",[t._v("带输入异常处理判断的版本（当输入的不是整数的时候会提示重新输入）：")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('import java.util.InputMismatchException;\nimport java.util.Scanner;\n\n\npublic class Main {\n\t// 解题关键：明确魔法机器1只能产生奇数，魔法机器2只能产生偶数即可。我们从后往前一步一步推回去即可。\n\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println("请输入要获得的硬币数量：");\n\t\tScanner scanner = new Scanner(System.in);\n\t\tboolean flag = true;\n\t\twhile (flag) {\n\t\t\ttry {\n\t\t\t\tint coincount = scanner.nextInt();\n\t\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\t\twhile (coincount >= 1) {\n\t\t\t\t\t// 偶数的情况\n\t\t\t\t\tif (coincount % 2 == 0) {\n\t\t\t\t\t\tcoincount = (coincount - 2) / 2;\n\t\t\t\t\t\tsb.append("2");\n\t\t\t\t\t\t// 奇数的情况\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcoincount = (coincount - 1) / 2;\n\t\t\t\t\t\tsb.append("1");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// 输出反转后的字符串\n\t\t\t\tSystem.out.println(sb.reverse());\n\t\t\t\tflag=false;//程序结束\n\t\t\t} catch (InputMismatchException e) {\n\t\t\t\tSystem.out.println("输入数据类型不匹配，请您重新输入:");\n\t\t\t\tscanner.nextLine();\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t}\n}\n\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br")])]),a("h2",{attrs:{id:"二-求-相反数-问题-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-求-相反数-问题-2"}},[t._v("#")]),t._v(" 二 求“相反数”问题")]),t._v(" "),a("h3",{attrs:{id:"分析-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析-2"}},[t._v("#")]),t._v(" 分析：")]),t._v(" "),a("p",[t._v("解决本道题有几种不同的方法，但是最快速的方法就是利用reverse()方法反转字符串然后再将字符串转换成int类型的整数，这个方法是快速解决本题关键。我们先来回顾一下下面两个知识点：")]),t._v(" "),a("p",[a("strong",[t._v("1)String转int；")])]),t._v(" "),a("p",[t._v("在 Java 中要将 String 类型转化为 int 类型时,需要使用 Integer 类中的 parseInt() 方法或者 valueOf() 方法进行转换.")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(' String str = "123";\n int a = Integer.parseInt(str);\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("或")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(' String str = "123";\n int a = Integer.valueOf(str).intValue()；\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("strong",[t._v("2)next()和nextLine()的区别")])]),t._v(" "),a("p",[t._v("在Java中输入字符串有两种方法，就是next()和nextLine().两者的区别就是：nextLine()的输入是碰到回车就终止输入，而next()方法是碰到空格，回车，Tab键都会被视为终止符。所以next()不会得到带空格的字符串，而nextLine()可以得到带空格的字符串。")]),t._v(" "),a("h3",{attrs:{id:"示例代码-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例代码-2"}},[t._v("#")]),t._v(" 示例代码：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('import java.util.Scanner;\n\n/**\n * 本题关键：①String转int；②next()和nextLine()的区别\n */\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t\tSystem.out.println("请输入一个整数：");\n\t\tScanner scanner = new Scanner(System.in);\n\t\tString s=scanner.next(); \n\t\t//将字符串转换成数字\n\t\tint number1=Integer.parseInt(s);\n\t\t//将字符串倒序后转换成数字\n\t\t//因为Integer.parseInt()的参数类型必须是字符串所以必须加上toString()\n\t\tint number2=Integer.parseInt(new StringBuilder(s).reverse().toString());\n\t\tSystem.out.println(number1+number2);\n\n\t}\n}\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br")])]),a("h2",{attrs:{id:"三-字符串碎片的平均长度-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-字符串碎片的平均长度-2"}},[t._v("#")]),t._v(" 三 字符串碎片的平均长度")]),t._v(" "),a("h3",{attrs:{id:"分析-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析-3"}},[t._v("#")]),t._v(" 分析：")]),t._v(" "),a("p",[t._v("这道题的意思也就是要求：(字符串的总长度)/(相同字母团构成的字符串的个数)。")]),t._v(" "),a("p",[t._v("这样就很简单了，就变成了字符串的字符之间的比较。如果需要比较字符串的字符的话，我们可以利用charAt(i)方法：取出特定位置的字符与后一个字符比较，或者利用toCharArray()方法将字符串转换成字符数组采用同样的方法做比较。")]),t._v(" "),a("h3",{attrs:{id:"示例代码-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例代码-3"}},[t._v("#")]),t._v(" 示例代码")]),t._v(" "),a("p",[a("strong",[t._v("利用charAt(i)方法：")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\n\t    Scanner sc = new Scanner(System.in);\n\t    while (sc.hasNext()) {\n\t        String s = sc.next();\n\t        //个数至少为一个\n\t        float count = 1;\n\t        for (int i = 0; i < s.length() - 1; i++) {\n\t            if (s.charAt(i) != s.charAt(i + 1)) {\n\t                count++;\n\t            }\n\t        }\n\t        System.out.println(s.length() / count);\n\t    }\n\t}\n\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br")])]),a("p",[a("strong",[t._v("利用toCharArray()方法：")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import java.util.Scanner;\n\npublic class Main2 {\n\n\tpublic static void main(String[] args) {\n\n\t    Scanner sc = new Scanner(System.in);\n\t    while (sc.hasNext()) {\n\t        String s = sc.next();\n\t        //个数至少为一个\n\t        float count = 1;\n\t        char [] stringArr = s.toCharArray();\n\t        for (int i = 0; i < stringArr.length - 1; i++) {\n\t            if (stringArr[i] != stringArr[i + 1]) {\n\t                count++;\n\t            }\n\t        }\n\t        System.out.println(s.length() / count);\n\t    }\n\t}\n\n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br")])])])}),[],!1,null,null,null);n.default=r.exports}}]);