(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{7288:function(t,s,a){t.exports=a.p+"assets/img/image-20220624004241092.3e18f958.png"},7289:function(t,s,a){t.exports=a.p+"assets/img/image-20220624004915815.d52e0e1c.png"},7290:function(t,s,a){t.exports=a.p+"assets/img/image-20220624005016040.61485890.png"},7291:function(t,s,a){t.exports=a.p+"assets/img/image-20220624005325312.6b4462bb.png"},7292:function(t,s,a){t.exports=a.p+"assets/img/image-20220624005438563.5a3bb32e.png"},7293:function(t,s,a){t.exports=a.p+"assets/img/image-20220624005624239.cd6e16bb.png"},7294:function(t,s,a){t.exports=a.p+"assets/img/image-20220624005903394.9ebd6409.png"},7295:function(t,s,a){t.exports=a.p+"assets/img/image-20220624010105518.a0cfd16a.png"},7296:function(t,s,a){t.exports=a.p+"assets/img/image-20220624010151774.bac29d8f.png"},7297:function(t,s,a){t.exports=a.p+"assets/img/image-20220624010530098.d2211cb2.png"},7298:function(t,s,a){t.exports=a.p+"assets/img/image-20220624010820134.1ef83390.png"},7299:function(t,s,a){t.exports=a.p+"assets/img/image-20220624010915796.4b224077.png"},7300:function(t,s,a){t.exports=a.p+"assets/img/image-20220624011017783.ef381304.png"},7301:function(t,s,a){t.exports=a.p+"assets/img/image-20220624011234490.e77d719e.png"},7302:function(t,s,a){t.exports=a.p+"assets/img/image-20220624011405765.67716b6a.png"},7303:function(t,s,a){t.exports=a.p+"assets/img/image-20220624011523173.dfc41429.png"},7304:function(t,s,a){t.exports=a.p+"assets/img/image-20220624011655464.99d6652a.png"},7305:function(t,s,a){t.exports=a.p+"assets/img/image-20220624011814344.a4f05e43.png"},7306:function(t,s,a){t.exports=a.p+"assets/img/image-20220624011941249.071525ff.png"},7307:function(t,s,a){t.exports=a.p+"assets/img/image-20220624012015494.90a0827a.png"},7308:function(t,s,a){t.exports=a.p+"assets/img/image-20220624012154688.c2f381b6.png"},7309:function(t,s,a){t.exports=a.p+"assets/img/image-20220624012236778.c616cef8.png"},7310:function(t,s,a){t.exports=a.p+"assets/img/image-20220624012307222.a821959e.png"},7311:function(t,s,a){t.exports=a.p+"assets/img/image-20220624012402288.e2983ce0.png"},7312:function(t,s,a){t.exports=a.p+"assets/img/image-20220624012504448.a6f452c5.png"},7313:function(t,s,a){t.exports=a.p+"assets/img/image-20220624012622439.412da91e.png"},7314:function(t,s,a){t.exports=a.p+"assets/img/image-20220624012816332.dfcac298.png"},7315:function(t,s,a){t.exports=a.p+"assets/img/image-20220624012903178.94dbaec0.png"},7316:function(t,s,a){t.exports=a.p+"assets/img/image-20220624013248288.6f8099fa.png"},7317:function(t,s,a){t.exports=a.p+"assets/img/image-20220624013857591.4a997af1.png"},8923:function(t,s,a){"use strict";a.r(s);var i=a(5),e=Object(i.a)({},(function(){var t=this,s=t.$createElement,i=t._self._c||s;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"_36-kubernetes应用部署实战-java微服务上云-前端上云-测试"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_36-kubernetes应用部署实战-java微服务上云-前端上云-测试"}},[t._v("#")]),t._v(" 36.kubernetes应用部署实战-Java微服务上云-前端上云&测试")]),t._v(" "),i("p",[t._v("​\t我们前面把所有的微服务和网关都部署好了，现在就差前端UI的部署了")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7288),alt:"image-20220624004241092"}})]),t._v(" "),i("p",[t._v("​\t首先ruoyi-ui是使用vue写的，他的打包方式和我们java的不一样")]),t._v(" "),i("p",[t._v("​\t其实无论是什么语言写的对于我们上云无非就是这么几步")]),t._v(" "),i("p",[t._v("​\t\t1.把写的代码打成制品包，无论是jar包还是什么")]),t._v(" "),i("p",[t._v("​\t\t2.然后制作成镜像")]),t._v(" "),i("p",[t._v("​\t\t3.然后在云上部署")]),t._v(" "),i("p",[t._v("​\t所以我们前端语言呢，打成的包其实是一些页面，css，js等文件程序，然后制作成镜像，这个镜像其实就是nginx镜像--我们做好页面交给nginx运行就可以了，然后最终上云部署")]),t._v(" "),i("p",[t._v("我们使用这个发布命令")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7289),alt:"image-20220624004915815"}})]),t._v(" "),i("p",[t._v("其实运行的就是这个命令")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7290),alt:"image-20220624005016040"}})]),t._v(" "),i("p",[t._v("​\t打包前我们需要在vue.config配置一下devServer，里面配置的代理--使用线上的环境网关地址")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7291),alt:"image-20220624005325312"}})]),t._v(" "),i("p",[t._v("打包：")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7292),alt:"image-20220624005438563"}})]),t._v(" "),i("p",[t._v("打完之后会提示包在dist中，这个dist就是打包好的文件")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7293),alt:"image-20220624005624239"}})]),t._v(" "),i("p",[t._v("​\t我们将这个dist文件单独拿出来--dist就是我们前端项目真正的内容，而把这些内容交给我们的nginx就行了，nginx能展示所有的页面")]),t._v(" "),i("p",[t._v("​\t在ruoyi的项目中有一个nginx的打包模板")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7294),alt:"image-20220624005903394"}})]),t._v(" "),i("p",[t._v("我们查看这个dockerfile发现 是将这个打包好的dist文件放到html路径下")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7295),alt:"image-20220624010105518"}})]),t._v(" "),i("p",[t._v("路径是这样的")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7296),alt:"image-20220624010151774"}})]),t._v(" "),i("p",[t._v("我们还需要修改一下nginx.conf配置文件")]),t._v(" "),i("p",[t._v("​\tnginx我们的server_name，配置为_这个意思就是无论你的请求来自哪里我的nginx都来处理，所有的80端口请求到这个nginx都会给处理")]),t._v(" "),i("p",[t._v("​\t这个处理的请求就会给打到/prod-api/那么最终请求的就是 ruoyi项目的网关地址，所以网关地址是哪个我们就改为哪个地址，使用生产环境的网关地址")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7297),alt:"image-20220624010530098"}})]),t._v(" "),i("p",[t._v("配置好网关地址：")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7298),alt:"image-20220624010820134"}})]),t._v(" "),i("p",[t._v("我们现在做成压缩包传给服务器")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7299),alt:"image-20220624010915796"}})]),t._v(" "),i("p",[t._v("我们使用sftp直接拖上来")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7300),alt:"image-20220624011017783"}})]),t._v(" "),i("p",[t._v("解压缩包--然后cd到nginx文件夹下")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7301),alt:"image-20220624011234490"}})]),t._v(" "),i("p",[t._v("我们现在就规划好镜像名称是阿里云的名称")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7302),alt:"image-20220624011405765"}})]),t._v(" "),i("p",[t._v("​\t后面还得加-f 指定dockerfile 然后还有个点，点代表在当前目录进行工作")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7303),alt:"image-20220624011523173"}})]),t._v(" "),i("p",[t._v("​\t推送镜像到阿里云镜像仓库")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7304),alt:"image-20220624011655464"}})]),t._v(" "),i("h4",{attrs:{id:"开始部署ui前端服务"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#开始部署ui前端服务"}},[t._v("#")]),t._v(" 开始部署UI前端服务")]),t._v(" "),i("p",[t._v("​\t服务-无状态服务")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7305),alt:"image-20220624011814344"}})]),t._v(" "),i("p",[t._v("获取镜像--其实这个镜像就是nginx拖的前端页面")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7306),alt:"image-20220624011941249"}})]),t._v(" "),i("p",[t._v("使用80端口--然后同步主机时区")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7307),alt:"image-20220624012015494"}})]),t._v(" "),i("p",[t._v("​\t一直下一步，这里注意下，我们需要外网访问--外网暴露")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7308),alt:"image-20220624012154688"}})]),t._v(" "),i("p",[t._v("服务创建好了")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7309),alt:"image-20220624012236778"}})]),t._v(" "),i("p",[t._v("我们查看日志--也算启动成功")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7310),alt:"image-20220624012307222"}})]),t._v(" "),i("p",[t._v("我们可以看到对外暴露的30842端口")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7311),alt:"image-20220624012402288"}})]),t._v(" "),i("p",[t._v("我们访问一下--没有问题")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7312),alt:"image-20220624012504448"}})]),t._v(" "),i("p",[t._v("登录--首先验证码可以切换那就没什么大问题-因为每个切换都需要给后台发请求")]),t._v(" "),i("p",[t._v("​\t登录成功没有问题")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7313),alt:"image-20220624012622439"}})]),t._v(" "),i("p",[t._v("​\t比如我们创建一个用户试试，创建用户会在线上的数据库保存数据")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7314),alt:"image-20220624012816332"}})]),t._v(" "),i("p",[t._v("我们连接线上数据库查看一下，没有问题")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7315),alt:"image-20220624012903178"}})]),t._v(" "),i("p",[t._v("​\t我们捋一下思路：首先ruoyi的前端是一个nginx项目，我们把这个nginx部署上之后呢，在nginx里面配置了nginx.conf中的server_name为_接收所有的访问此nginx的请求，然后配置了只要到生产环境的请求我们就代理到网关服务")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7316),alt:"image-20220624013248288"}})]),t._v(" "),i("p",[t._v("​\t而且我们网关在vue.config.js中也配置了一次")]),t._v(" "),i("p",[t._v("​\t请求进来，会随便的打到我们集群暴露的端口的节点上，然后进入UI前端，前端界面再交给网关，网关再负载均衡到其他微服务，每个微服务再操作数据库")]),t._v(" "),i("p",[i("img",{attrs:{src:a(7317),alt:"image-20220624013857591"}})]),t._v(" "),i("p",[t._v("​\t而且整个过程只有前端对外暴露了ip及端口，剩下都是集群内的地址")]),t._v(" "),i("p",[t._v("​\t\t集群内访问地址的优势是：1、访问速度快，2、免流量")]),t._v(" "),i("p",[t._v("我们现在只是部署了一个ruoyi的大框架，但是一些真正的项目上云还需要解决更多的问题，我们现在手工的这么操作也是容错率比较低，迭代起来也比较慢，所以我们未来就期望有没有一个自动化的工程，能够帮助我们把这些所有的部署工作都自动化的做了")]),t._v(" "),i("p",[t._v("​\t未来我们希望只要我们有发布版本，我们给github提交发布版本，这些机器就会自动化的把代码拉取过来，给我们自动的打包，制作镜像，然后给我们部署")]),t._v(" "),i("p",[t._v("​\t虽然我们现在使用这个kubesphere感觉点点点也很快，但是如果一旦面对大量应用，我们的微服务有成千上百个这样手工部署就太慢了")]),t._v(" "),i("p",[t._v("https://www.bilibili.com/video/BV13Q4y1C7hS?p=104&spm_id_from=pageDriver&vd_source=243ad3a9b323313aa1441e5dd414a4ef")])])}),[],!1,null,null,null);s.default=e.exports}}]);