(window.webpackJsonp=window.webpackJsonp||[]).push([[284],{7212:function(t,s,a){t.exports=a.p+"assets/img/1655342599106.3f264af2.png"},7213:function(t,s,a){t.exports=a.p+"assets/img/1655342697171.70b0e63e.png"},7214:function(t,s,a){t.exports=a.p+"assets/img/1655342836190.f23219b6.png"},7215:function(t,s,a){t.exports=a.p+"assets/img/1655342917827.dd9dd517.png"},7216:function(t,s,a){t.exports=a.p+"assets/img/1655343130070.49a3dd42.png"},7217:function(t,s,a){t.exports=a.p+"assets/img/1655343291697.e0b7e158.png"},7218:function(t,s,a){t.exports=a.p+"assets/img/1655343455413.fea3d56d.png"},7219:function(t,s,a){t.exports=a.p+"assets/img/1655343924882.892ae921.png"},7220:function(t,s,a){t.exports=a.p+"assets/img/1655343902082.0982cf5a.png"},7221:function(t,s,a){t.exports=a.p+"assets/img/1655344188431.f015a5c8.png"},7222:function(t,s,a){t.exports=a.p+"assets/img/1655344375355.90bb93af.png"},8938:function(t,s,a){"use strict";a.r(s);var e=a(5),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_27-kubernetes应用部署实战-java微服务上云-微服务上云流程分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_27-kubernetes应用部署实战-java微服务上云-微服务上云流程分析"}},[t._v("#")]),t._v(" 27.kubernetes应用部署实战-Java微服务上云-微服务上云流程分析")]),t._v(" "),e("p",[t._v("整个微服务上云的过程我们梳理一下，java微服务上云。")]),t._v(" "),e("p",[t._v("​\t\t1.打包：maven打成可执行的jar包，上传给服务器(指k8s服务节点)，让服务器帮我们打成docker镜像")]),t._v(" "),e("p",[t._v("​\t\t2.制作镜像：docker根据Dockerfile把包打成指定的镜像")]),t._v(" "),e("p",[t._v("​\t\t3.推送镜像：将镜像推送给docker hub--由于docker hub是外网访问地址比较慢，我们可以使用阿里云的镜像仓库---公司里面也可以搭建私有的镜像仓库如huber")]),t._v(" "),e("p",[t._v("​\t\t3.应用部署：给k8s部署应用，比如在node1节点部署，那么node1就需要下载镜像，而镜像一般都是从应用仓库下载的，如果上传jar包到master节点制作好镜像，node1从仓库里下载不到镜像--所以需要加入一个中间环节就是 推送镜像到镜像仓库")]),t._v(" "),e("p",[e("img",{attrs:{src:a(7212),alt:"1655342599106"}})]),t._v(" "),e("h4",{attrs:{id:"_1、打包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、打包"}},[t._v("#")]),t._v(" 1、打包")]),t._v(" "),e("p",[t._v("​\t\t我们在ruoyi的根路径下，maven选中clean和package，注意勾上闪电标志是跳过测试，然后点击运行--会先clean然后package")]),t._v(" "),e("p",[e("img",{attrs:{src:a(7213),alt:"1655342697171"}})]),t._v(" "),e("p",[t._v("​\t对了我们打包前也最好确认一下，我们的项目编码是utf-8的")]),t._v(" "),e("p",[e("img",{attrs:{src:a(7214),alt:"1655342836190"}})]),t._v(" "),e("p",[t._v("​\t我们的包打好了")]),t._v(" "),e("p",[e("img",{attrs:{src:a(7215),alt:"1655342917827"}})]),t._v(" "),e("p",[t._v("​\t我们打好的包推荐一定要实验一下能不能启动运行，要不然辛辛苦苦打了一堆包结果不能运行就比较麻烦了")]),t._v(" "),e("p",[e("img",{attrs:{src:a(7216),alt:"1655343130070"}})]),t._v(" "),e("p",[t._v("​\t\t如果有发生关于java.nio.charset解析Nacos中的yml配置文件出现字符集的问题的话，那么就添加启动参数设置为utf8，启动就没有问题了")]),t._v(" "),e("p",[e("img",{attrs:{src:a(7217),alt:"1655343291697"}})]),t._v(" "),e("p",[t._v("​\t我们在Dockerfile文件中也加入这个参数")]),t._v(" "),e("p",[e("img",{attrs:{src:a(7218),alt:"1655343455413"}})]),t._v(" "),e("p",[t._v("​\t我们在桌面新建各个微服务我文件名，然后放入Dockerfile文件，再创建target文件夹，因为我们的dockerfile文件里是需要copy  target路径下的jar包的")]),t._v(" "),e("p",[e("img",{attrs:{src:a(7219),alt:"1655343924882"}})]),t._v(" "),e("p",[e("img",{attrs:{src:a(7220),alt:"1655343902082"}})]),t._v(" "),e("p",[t._v("​\t将项目的所有微服务都按以上操作，这就是我们需要上传的jar包及dockerfile")]),t._v(" "),e("p",[e("img",{attrs:{src:a(7221),alt:"1655344188431"}})]),t._v(" "),e("p",[t._v("​\t我们连接我们的k8s节点----然后使用sftp把这个文件夹上传到服务器上路径自己选择，目前是放在root/docker文件夹下")]),t._v(" "),e("p",[e("img",{attrs:{src:a(7222),alt:"1655344375355"}})]),t._v(" "),e("p",[t._v("https://www.bilibili.com/video/BV13Q4y1C7hS?p=95&vd_source=243ad3a9b323313aa1441e5dd414a4ef")])])}),[],!1,null,null,null);s.default=r.exports}}]);