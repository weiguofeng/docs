(window.webpackJsonp=window.webpackJsonp||[]).push([[681],{5191:function(s,n,a){s.exports=a.p+"assets/img/1625420431621.fd236952.png"},9209:function(s,n,a){"use strict";a.r(n);var t=a(5),r=Object(t.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"dubbo的工作原理是啥-注册中心挂了可以继续通信吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dubbo的工作原理是啥-注册中心挂了可以继续通信吗"}},[s._v("#")]),s._v(" dubbo的工作原理是啥？注册中心挂了可以继续通信吗？")]),s._v(" "),t("h4",{attrs:{id:"_1-面试题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-面试题"}},[s._v("#")]),s._v(" 1.面试题")]),s._v(" "),t("p",[s._v("​\t"),t("strong",[s._v("dubbo的工作原理是啥？注册中心挂了可以继续通信吗？说说一次rpc请求的流程？")])]),s._v(" "),t("h4",{attrs:{id:"_2-面试官心里分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-面试官心里分析"}},[s._v("#")]),s._v(" 2.面试官心里分析")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("\tMQ,ES,Redis,Dubbo,都是上来先问你一些思考的问题，原理(如kafka高可用架构原理，es分布式架构原理，redis线程模型原理，Dubbo工作原理)，生产环境里可能会碰到一些问题（每种技术引入之后生产环境都可能会碰到一些问题），系统设计（设计MQ，设计搜索引擎，设计缓存，设计rpc框架）\n\t\n\t当然比如说，hard的面试官，死扣，会结合项目死扣细节，百度（深入底层，基础性），阿里（结合项目死扣细节，扣很深的技术底层），小米（数据结构和算法）\n\t\n\t那既然开始聊分布式系统了，自然先聊聊dubbo了，毕竟dubbo是目前事实大部分公司的分布式系统的rpc框架标准，基于dubbo也可以构建一整套的微服务架构。但是需要自己大量的开发。\n\t\n\t当然现在开始SpringCloud非常火，现在大量公司开始转向SpringCloud了，SpringCloud人家毕竟是微服务架构的全家桶式的这么一个东西，但是因为很多公司还在用dubbo，所以dubbo肯定会是目前面试的重点，何况人家dubbo现在重启开源社区维护了，未来应该也还是有一定市场和地位的。\n\t\n\t既然聊dubbo，那肯定是先从dubbo的原理开始聊了，你先说说dubbo支撑rpc分布式调用的架构是啥？然后说说一次rpc请求dubbo是怎么给你完成的，对吧。\n\t\n\t\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h4",{attrs:{id:"_3-面试题剖析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-面试题剖析"}},[s._v("#")]),s._v(" 3.面试题剖析")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("\t1.dubbo工作原理\n\t\t第一层：service层，接口层，给服务提供者和消费者来实现的\n        第二层：config层，配置层，主要是对dubbo进行各种配置的\n        第三层：proxy层，服务代理层，透明生成客户端的stub和服务单的skeleton\n        第四层：registry层，服务注册层，负责服务的注册与发现\n        第五层：cluster层，集群层，封装多个服务提供者的路由以及负载均衡，将多个实例组合成一个服务\n        第六层：monitor层，监控层，对rpc接口的调用次数和调用时间进行监控\n        第七层：protocol层，远程调用层，封装rpc调用\n        第八层：exchange层，信息交换层，封装请求响应模式，同步转异步\n        第九层：transport层，网络传输层，抽象mina和netty为统一接口\n        第十层：serialize层，数据序列化层\n        \n        \n    2.工作流程：\n    \t1）第一步，provider向注册中心去注册\n        2）第二步，consumer从注册中心订阅服务，注册中心会通知consumer注册好的服务\n        3）第三步，consumer调用provider\n        4）第四步，consumer和provider都异步的通知监控中心\n        \n    3.注册中心挂了可以继续通信吗？\n    \t可以，因为刚开始初始化的时候，消费者会将提供者的地址等信息拉取到本地缓存，所以注册中心挂了可以继续通信\n    \t\n\n    \n    \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br")])]),t("p",[t("strong",[s._v("dubbo的工作原理")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(5191),alt:"1625420431621"}})])])}),[],!1,null,null,null);n.default=r.exports}}]);