(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{7110:function(s,t,e){s.exports=e.p+"assets/img/1655106429374.c9aaf117.png"},7111:function(s,t,e){s.exports=e.p+"assets/img/1655106795152.e2245842.png"},7112:function(s,t,e){s.exports=e.p+"assets/img/1655106839262.5284f416.png"},7113:function(s,t,e){s.exports=e.p+"assets/img/1655107491215.1504ed8d.png"},7114:function(s,t,e){s.exports=e.p+"assets/img/1655107534718.277ecd7f.png"},7115:function(s,t,e){s.exports=e.p+"assets/img/1655107635895.0bdb43cf.png"},7116:function(s,t,e){s.exports=e.p+"assets/img/1655107735174.5fdce9ee.png"},7117:function(s,t,e){s.exports=e.p+"assets/img/1655107812158.6db177e1.png"},7118:function(s,t,e){s.exports=e.p+"assets/img/1655107854725.426164c0.png"},7119:function(s,t,e){s.exports=e.p+"assets/img/1655108003554.628594cf.png"},7120:function(s,t,e){s.exports=e.p+"assets/img/1655108096976.e1beef60.png"},7121:function(s,t,e){s.exports=e.p+"assets/img/1655108184090.77a5a96a.png"},7122:function(s,t,e){s.exports=e.p+"assets/img/1655108300739.12539ed0.png"},7123:function(s,t,e){s.exports=e.p+"assets/img/1655108334238.61a32e6d.png"},7124:function(s,t,e){s.exports=e.p+"assets/img/1655108453047.9eeddeac.png"},7125:function(s,t,e){s.exports=e.p+"assets/img/1655108522011.ff90909e.png"},7126:function(s,t,e){s.exports=e.p+"assets/img/1655108661114.1f79b83a.png"},7127:function(s,t,e){s.exports=e.p+"assets/img/1655108748950.ac03a3b1.png"},7128:function(s,t,e){s.exports=e.p+"assets/img/1655108795467.d47e0545.png"},7129:function(s,t,e){s.exports=e.p+"assets/img/1655108867254.8f5bb9b2.png"},7130:function(s,t,e){s.exports=e.p+"assets/img/1655108881739.ceb05834.png"},7131:function(s,t,e){s.exports=e.p+"assets/img/1655108946022.8387233c.png"},7132:function(s,t,e){s.exports=e.p+"assets/img/1655109030358.22e19523.png"},7133:function(s,t,e){s.exports=e.p+"assets/img/1655109092790.80c88880.png"},7134:function(s,t,e){s.exports=e.p+"assets/img/1655109133565.fddc9c02.png"},7135:function(s,t,e){s.exports=e.p+"assets/img/1655109225941.a528c775.png"},7136:function(s,t,e){s.exports=e.p+"assets/img/1655109347886.7ef38b16.png"},7137:function(s,t,e){s.exports=e.p+"assets/img/1655109448661.2f15ede2.png"},7138:function(s,t,e){s.exports=e.p+"assets/img/1655109488166.ef9e013f.png"},7139:function(s,t,e){s.exports=e.p+"assets/img/1655109725041.99d8105f.png"},7140:function(s,t,e){s.exports=e.p+"assets/img/1655109923936.fffe73c8.png"},7141:function(s,t,e){s.exports=e.p+"assets/img/1655109987294.8a6c1377.png"},9146:function(s,t,e){"use strict";e.r(t);var r=e(5),a=Object(r.a)({},(function(){var s=this,t=s.$createElement,r=s._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[r("h1",{attrs:{id:"_15-kubesphere给kubernetes上部署中间件-部署redis-设置网络"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-kubesphere给kubernetes上部署中间件-部署redis-设置网络"}},[s._v("#")]),s._v(" 15.kubesphere给kubernetes上部署中间件-部署Redis&设置网络")]),s._v(" "),r("p",[s._v("​\t\t这个Redis的部署思路和MySQL部署思路是一样的。")]),s._v(" "),r("p",[s._v("​\t\t先找到redis的官方镜像")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7110),alt:"1655106429374"}})]),s._v(" "),r("p",[s._v("​\t在Redis官方镜像中我们可以看到redis的启动命令和一些参数，我们还会抽取redis的配置文件，而且redis的数据目录是在/data下，redis如果要持久化存储默认数据是在/data下的")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7111),alt:"1655106795152"}})]),s._v(" "),r("h2",{attrs:{id:"_1、redis部署分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1、redis部署分析"}},[s._v("#")]),s._v(" 1、Redis部署分析")]),s._v(" "),r("p",[s._v("​\t\t\tredis的docker启动命令")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("#创建配置文件\n## 1、准备redis配置文件内容\nmkdir -p /mydata/redis/conf && vim /mydata/redis/conf/redis.conf\n\n\n##配置示例\nappendonly yes\nport 6379\nbind 0.0.0.0\n\n\n#docker启动redis\ndocker run -d -p 6379:6379 --restart=always \\\n-v /mydata/redis/conf/redis.conf:/etc/redis/redis.conf \\\n-v  /mydata/redis-01/data:/data \\\n --name redis-01 redis:6.2.5 \\\n redis-server /etc/redis/redis.conf\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br"),r("span",{staticClass:"line-number"},[s._v("5")]),r("br"),r("span",{staticClass:"line-number"},[s._v("6")]),r("br"),r("span",{staticClass:"line-number"},[s._v("7")]),r("br"),r("span",{staticClass:"line-number"},[s._v("8")]),r("br"),r("span",{staticClass:"line-number"},[s._v("9")]),r("br"),r("span",{staticClass:"line-number"},[s._v("10")]),r("br"),r("span",{staticClass:"line-number"},[s._v("11")]),r("br"),r("span",{staticClass:"line-number"},[s._v("12")]),r("br"),r("span",{staticClass:"line-number"},[s._v("13")]),r("br"),r("span",{staticClass:"line-number"},[s._v("14")]),r("br"),r("span",{staticClass:"line-number"},[s._v("15")]),r("br"),r("span",{staticClass:"line-number"},[s._v("16")]),r("br"),r("span",{staticClass:"line-number"},[s._v("17")]),r("br")])]),r("p",[s._v("​")]),s._v(" "),r("p",[s._v("​\t\t\t我们和部署MySQL一样，1、先准备redis的存储卷，2.添加redis的配置，3部署redis")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7112),alt:"1655106839262"}})]),s._v(" "),r("p",[s._v("​\t我们也可以先不准备redis存储卷，让自己创建，我们先创建配置")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7113),alt:"1655107491215"}})]),s._v(" "),r("p",[s._v("​\t创建redis配置")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7114),alt:"1655107534718"}})]),s._v(" "),r("p",[s._v("​\t额外需要说的是，redis有一个自定义的启动命令--自定义加载配置文件")]),s._v(" "),r("p",[s._v("​\t\t\tredis-server /etc/redis/redis.conf")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7115),alt:"1655107635895"}})]),s._v(" "),r("h4",{attrs:{id:"部署redis"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#部署redis"}},[s._v("#")]),s._v(" 部署redis")]),s._v(" "),r("p",[s._v("​\t创建 有状态副本集")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7116),alt:"1655107735174"}})]),s._v(" "),r("p",[s._v("​\t选择镜像--设置默认端口")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7117),alt:"1655107812158"}})]),s._v(" "),r("p",[s._v("​\t\t\t设置资源限制")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7118),alt:"1655107854725"}})]),s._v(" "),r("p",[s._v("​\tredis没有什么环境变量，但是需要启动命令--然后再勾选上与主机同步时区")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7119),alt:"1655108003554"}})]),s._v(" "),r("p",[s._v("​\t\t因为我们没有创建存储卷--点击添加存储卷创建一个")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7120),alt:"1655108096976"}})]),s._v(" "),r("p",[s._v("​\t\t设置存储容量及挂载路径")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7121),alt:"1655108184090"}})]),s._v(" "),r("p",[s._v("​\t然后选择挂载配置文件")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7122),alt:"1655108300739"}})]),s._v(" "),r("p",[s._v("​\t\t然后点击创建：")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7123),alt:"1655108334238"}})]),s._v(" "),r("p",[s._v("​")]),s._v(" "),r("p",[s._v("​\t\t现在我们看到我们的redis应用创建出来了")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7124),alt:"1655108453047"}})]),s._v(" "),r("p",[s._v("​\t我们进入到配置路径查看一下配置文件看看是否是我们自己的配置")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7125),alt:"1655108522011"}})]),s._v(" "),r("p",[s._v("​")]),s._v(" "),r("p",[s._v("​\tredis启动后会默认的给我们创建一个redis的服务，但这个服务只能在集群内部访问")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7126),alt:"1655108661114"}})]),s._v(" "),r("p",[s._v("​\t我们感觉这个带后缀的名字不好，我们删除掉自己创建一个集群内的服务")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7127),alt:"1655108748950"}})]),s._v(" "),r("p",[s._v("​\t"),r("img",{attrs:{src:e(7128),alt:"1655108795467"}})]),s._v(" "),r("p",[s._v("​\t集群内访问的话使用 集群内不生成访问IP的方式")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7129),alt:"1655108867254"}})]),s._v(" "),r("p",[r("img",{attrs:{src:e(7130),alt:"1655108881739"}})]),s._v(" "),r("p",[s._v("​\t我们再加一个集群外的服务")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7131),alt:"1655108946022"}})]),s._v(" "),r("p",[s._v("​\t注意这里为通过集群内部IP的访问方式")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7132),alt:"1655109030358"}})]),s._v(" "),r("p",[s._v("​\t点击外网访问")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7133),alt:"1655109092790"}})]),s._v(" "),r("p",[s._v("​\t我们可以看到外网有一个端口31968，可以通过这个端口连接redis")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7134),alt:"1655109133565"}})]),s._v(" "),r("p",[s._v("​\t测试连接--没有问题")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7135),alt:"1655109225941"}})]),s._v(" "),r("p",[s._v("没有问题可以使用")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7136),alt:"1655109347886"}})]),s._v(" "),r("p",[s._v("​\t我们把redis删除掉，重新部署数据还是在的不会丢失")]),s._v(" "),r("p",[s._v("​\t我们把副本数量降为0，再调回1，相当于重新部署")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7137),alt:"1655109448661"}})]),s._v(" "),r("p",[s._v("​\t重新连接redis数据还在没有问题")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7138),alt:"1655109488166"}})]),s._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[s._v("#### 注意的问题\n")])])]),r("p",[s._v("​\t如果我们自己创建的存储卷，假设是mysql使用的存储卷，如果我们再启动一个mysql的话，第二个MySQL还是使用的这个PVC存储卷，但实际上应该是每一个MySQL都有自己的存储PVC的地方")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7139),alt:"1655109725041"}})]),s._v(" "),r("p",[s._v("​\t如果像redis我们部署的时候没有创建存储卷，会自动创建的，这样的话也是有优点的，如果我们给redis添加3个副本")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7140),alt:"1655109923936"}})]),s._v(" "),r("p",[s._v("​\t然后我们看一下存储卷--会自动创建出每一个redis都有自己的存储")]),s._v(" "),r("p",[r("img",{attrs:{src:e(7141),alt:"1655109987294"}})]),s._v(" "),r("p",[s._v("​\t"),r("strong",[s._v("那么就需要注意：我们在部署有状态应用的时候，一定要在创建的时候指定存储卷，这样就保证了存储挂载的数据独立性。")])]),s._v(" "),r("p",[s._v("https://www.bilibili.com/video/BV13Q4y1C7hS?p=82&spm_id_from=pageDriver")])])}),[],!1,null,null,null);t.default=a.exports}}]);