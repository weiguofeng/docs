(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{1362:function(t,s,p){t.exports=p.p+"assets/img/1629540257032.34717a40.png"},1363:function(t,s,p){t.exports=p.p+"assets/img/1629540316150.fed85c9c.png"},1364:function(t,s,p){t.exports=p.p+"assets/img/1629540497771.9b160b83.png"},1365:function(t,s,p){t.exports=p.p+"assets/img/1629540831997.5fee6d2f.png"},1366:function(t,s,p){t.exports=p.p+"assets/img/1629541182229.0ad2bb25.png"},1367:function(t,s,p){t.exports=p.p+"assets/img/1629541509865.fc0ec123.png"},1368:function(t,s,p){t.exports=p.p+"assets/img/1629541678579.f74d8752.png"},1369:function(t,s,p){t.exports=p.p+"assets/img/1629541830155.ea5b1e6c.png"},1370:function(t,s,p){t.exports=p.p+"assets/img/1629541918072.42660157.png"},1371:function(t,s,p){t.exports=p.p+"assets/img/1629542155961.82eaf713.png"},1372:function(t,s,p){t.exports=p.p+"assets/img/1629542188869.da8beb52.png"},1373:function(t,s,p){t.exports=p.p+"assets/img/1629542460328.34d85a8c.png"},1374:function(t,s,p){t.exports=p.p+"assets/img/1629542498802.dfd5503d.png"},1375:function(t,s,p){t.exports=p.p+"assets/img/1629542722098.7f585a01.png"},1376:function(t,s,p){t.exports=p.p+"assets/img/1629543482889.fab0279c.png"},1377:function(t,s,p){t.exports=p.p+"assets/img/1629543528040.9271ffdd.png"},1378:function(t,s,p){t.exports=p.p+"assets/img/1629543848228.e7b70156.png"},1379:function(t,s,p){t.exports=p.p+"assets/img/1629543989624.d46ebb5e.png"},1380:function(t,s,p){t.exports=p.p+"assets/img/1629544261728.a4ebf6ae.png"},1381:function(t,s,p){t.exports=p.p+"assets/img/1629544388388.092216d7.png"},1382:function(t,s,p){t.exports=p.p+"assets/img/1629544411440.ba1d0626.png"},1383:function(t,s,p){t.exports=p.p+"assets/img/1629544522459.330c903f.png"},1384:function(t,s,p){t.exports=p.p+"assets/img/1629544577693.de672809.png"},1385:function(t,s,p){t.exports=p.p+"assets/img/1629544589493.575800e6.png"},1386:function(t,s,p){t.exports=p.p+"assets/img/1629544689037.14efcfa5.png"},1387:function(t,s,p){t.exports=p.p+"assets/img/1629544771115.cb3fd82e.png"},1388:function(t,s,p){t.exports=p.p+"assets/img/1629544837410.f98e4a2e.png"},1389:function(t,s,p){t.exports=p.p+"assets/img/1629545140121.3201d597.png"},1390:function(t,s,p){t.exports=p.p+"assets/img/1629545343667.bd51bdeb.png"},1391:function(t,s,p){t.exports=p.p+"assets/img/1629545466723.bc8fa5ac.png"},1392:function(t,s,p){t.exports=p.p+"assets/img/1629545589556.1d139f63.png"},1393:function(t,s,p){t.exports=p.p+"assets/img/1629545918949.c541d717.png"},1394:function(t,s,p){t.exports=p.p+"assets/img/1629546177337.88736d5c.png"},1395:function(t,s,p){t.exports=p.p+"assets/img/1629546258085.840b26a1.png"},1396:function(t,s,p){t.exports=p.p+"assets/img/1629546463719.c3f4a112.png"},1397:function(t,s,p){t.exports=p.p+"assets/img/1629546579290.4b286f36.png"},1398:function(t,s,p){t.exports=p.p+"assets/img/1629546679277.e06c52e6.png"},1399:function(t,s,p){t.exports=p.p+"assets/img/1629546728879.b6fb21cd.png"},1400:function(t,s,p){t.exports=p.p+"assets/img/1629546829903.b209e79a.png"},1401:function(t,s,p){t.exports=p.p+"assets/img/1629546942523.77c4372c.png"},1402:function(t,s,p){t.exports=p.p+"assets/img/1629547004421.3a616984.png"},1403:function(t,s,p){t.exports=p.p+"assets/img/1629547035853.ab3161f9.png"},8548:function(t,s,p){"use strict";p.r(s);var a=p(5),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"springdata-jpa第三节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springdata-jpa第三节"}},[t._v("#")]),t._v(" SpringData-JPA第三节")]),t._v(" "),a("p",[t._v("https://www.bilibili.com/video/BV1hW411g7jy?p=6&spm_id_from=pageDriver")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1362),alt:"1629540257032"}})]),t._v(" "),a("p",[t._v("自定义查询的方法")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1363),alt:"1629540316150"}})]),t._v(" "),a("p",[t._v("注意：如果需要使用原生的SQL查询的话，需要参数nativeQuery设置为true")]),t._v(" "),a("p",[a("strong",[t._v("根据ID更新email")])]),t._v(" "),a("p",[a("img",{attrs:{src:p(1364),alt:"1629540497771"}})]),t._v(" "),a("p",[t._v("注意需要加上@modifying注解，还需要有事务")]),t._v(" "),a("p",[t._v("在@query注解中编写JPQL语句，但必须使用@Modifying注解进行修饰，以通知SpringData，这是一个Update 或 Delete操作")]),t._v(" "),a("p",[t._v("Update 或 Delete操作需要事务，此时需要定义service层，在Service层的方法上添加事务操作")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1365),alt:"1629540831997"}})]),t._v(" "),a("p",[t._v("默认情况下，SpringData的每个方法上有事务，但都是一个只读事务，他们不能完成修改操作")]),t._v(" "),a("h4",{attrs:{id:"crudrepository接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#crudrepository接口"}},[t._v("#")]),t._v(" CrudRepository接口")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1366),alt:"1629541182229"}})]),t._v(" "),a("p",[t._v("实现CrudRepository接口，并测试它的批量添加方法")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1367),alt:"1629541509865"}})]),t._v(" "),a("p",[t._v("成功，他给我们提供了简单的增删改查的方法提供")]),t._v(" "),a("h4",{attrs:{id:"pagingandsortingrepository接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pagingandsortingrepository接口"}},[t._v("#")]),t._v(" PagingAndSortingRepository接口")]),t._v(" "),a("p",[t._v("他是属于crudRepository的子接口")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1368),alt:"1629541678579"}})]),t._v(" "),a("p",[t._v("他有俩个方法一个是跟排序相关的方法sort参数，一个是跟分页相关的方法参数是Pageable---其实传Pageable可以包含sort")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1369),alt:"1629541830155"}})]),t._v(" "),a("p",[a("img",{attrs:{src:p(1370),alt:"1629541918072"}})]),t._v(" "),a("p",[t._v("开始测试分页方法--需要传入参数Pageable而他是一个接口，他的实现是PageRequest")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1371),alt:"1629542155961"}})]),t._v(" "),a("p",[a("img",{attrs:{src:p(1372),alt:"1629542188869"}})]),t._v(" "),a("p",[t._v("测试分页：")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1373),alt:"1629542460328"}})]),t._v(" "),a("p",[a("img",{attrs:{src:p(1374),alt:"1629542498802"}})]),t._v(" "),a("p",[t._v("注意：PageNo是从0开始，页码数应该-1，那么当前的页码就应该+1了")]),t._v(" "),a("p",[t._v("如果想显示第6页呢？")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1375),alt:"1629542722098"}})]),t._v(" "),a("p",[a("strong",[t._v("排序相关的")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("- 我们在创建Request的时候可以传入Sort，他不是接口就是一个类里面封装了排序的信息\n- 创建Sort的时候需要传入Order或者多个Order，可变参数new Sort（order...）\n- 创建Order注意使用SpringData的Order，需要2个参数Direction和property（Direction是升序还是降序，property是用哪个进行排序）\n- ![1629543334653](../../../.vuepress/public/images/1629543334653.png)\n- 现在是按id进行降序，然后我们需要另一个需求，按email进行升序\n- ![1629543428011](../../../.vuepress/public/images/1629543428011.png)\n")])])]),a("p",[t._v("测试查看：")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1376),alt:"1629543482889"}})]),t._v(" "),a("p",[t._v("可以看到是达到排序效果了sql")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1377),alt:"1629543528040"}})]),t._v(" "),a("p",[t._v("​\t"),a("strong",[t._v("注意")]),t._v("：Order是具体针对某一个属性进行升序还是降序。")]),t._v(" "),a("p",[t._v("​\t"),a("strong",[t._v("PagingAndSortingRepository接口它现在满足不了，通用的带查询条件的分页功能")])]),t._v(" "),a("h4",{attrs:{id:"jparepository接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jparepository接口"}},[t._v("#")]),t._v(" JpaRepository接口")]),t._v(" "),a("p",[t._v("JpaRepository接口是PagingAndSortingRepository接口的子接口")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1378),alt:"1629543848228"}})]),t._v(" "),a("p",[t._v("他里面又多了几个方法：")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1379),alt:"1629543989624"}})]),t._v(" "),a("p",[t._v("findAll：获取全部")]),t._v(" "),a("p",[t._v("findAllSort：获取全部并排序")]),t._v(" "),a("p",[t._v("findAllIterable：根据id集合查询")]),t._v(" "),a("p",[t._v("save:批量保存")]),t._v(" "),a("p",[t._v("flush：刷新")]),t._v(" "),a("p",[t._v("saveAndFlush：")]),t._v(" "),a("p",[t._v("deleteInBatch：批量删除")]),t._v(" "),a("p",[t._v("deleteAllInBatch：删除全部")]),t._v(" "),a("p",[a("strong",[t._v("我们来测试一下saveAndFlush方法")])]),t._v(" "),a("p",[t._v("​\t继承接口")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1380),alt:"1629544261728"}})]),t._v(" "),a("p",[a("img",{attrs:{src:p(1381),alt:"1629544388388"}})]),t._v(" "),a("p",[t._v("打印SQL语句：")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1382),alt:"1629544411440"}})]),t._v(" "),a("p",[t._v("设置id后执行方法：")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1383),alt:"1629544522459"}})]),t._v(" "),a("p",[t._v("先执行了select发现有id，在执行update")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1384),alt:"1629544577693"}})]),t._v(" "),a("p",[a("img",{attrs:{src:p(1385),alt:"1629544589493"}})]),t._v(" "),a("h4",{attrs:{id:"jpaspecificationexecutor接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jpaspecificationexecutor接口"}},[t._v("#")]),t._v(" JpaSpecificationExecutor接口")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1386),alt:"1629544689037"}})]),t._v(" "),a("p",[t._v("**注意：**这个接口有些特殊和另类，因为他根本就不属于Repository接口体系的接口")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1387),alt:"1629544771115"}})]),t._v(" "),a("p",[t._v("在repository接口下没有它")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1388),alt:"1629544837410"}})]),t._v(" "),a("p",[a("strong",[t._v("JpaSpecificationExecutor接口可以实现带条件的分页查询")])]),t._v(" "),a("p",[t._v("他有5个方法：")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1389),alt:"1629545140121"}})]),t._v(" "),a("p",[t._v("这些方法都需要传入一个Specification对象，里面封装的查询条件")]),t._v(" "),a("p",[t._v("我们继承JpaSpecificationExecutor接口进行测试：")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1390),alt:"1629545343667"}})]),t._v(" "),a("p",[a("img",{attrs:{src:p(1391),alt:"1629545466723"}})]),t._v(" "),a("p",[a("strong",[t._v("第一步代码")])]),t._v(" "),a("p",[a("img",{attrs:{src:p(1392),alt:"1629545589556"}})]),t._v(" "),a("p",[t._v("现在主要是Specification的问题，通常使用Specification 的匿名内部类")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1393),alt:"1629545918949"}})]),t._v(" "),a("p",[t._v("查询id大于5的数据：")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1394),alt:"1629546177337"}})]),t._v(" "),a("p",[t._v("查询结果：")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1395),alt:"1629546258085"}})]),t._v(" "),a("p",[t._v("https://www.bilibili.com/video/BV1hW411g7jy?p=10&spm_id_from=pageDriver")]),t._v(" "),a("h4",{attrs:{id:"自定义repository方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义repository方法"}},[t._v("#")]),t._v(" 自定义Repository方法")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1396),alt:"1629546463719"}})]),t._v(" "),a("p",[a("img",{attrs:{src:p(1397),alt:"1629546579290"}})]),t._v(" "),a("p",[a("img",{attrs:{src:p(1398),alt:"1629546679277"}})]),t._v(" "),a("p",[t._v("1定义一个接口：")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1399),alt:"1629546728879"}})]),t._v(" "),a("p",[t._v("2提供一个实现：")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1400),alt:"1629546829903"}})]),t._v(" "),a("p",[t._v("关于EntityManager可以查看")]),t._v(" "),a("p",[t._v("3.我们之前的PersonRepository继承PersonDao接口")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1401),alt:"1629546942523"}})]),t._v(" "),a("p",[t._v("4.进行测试")]),t._v(" "),a("p",[a("img",{attrs:{src:p(1402),alt:"1629547004421"}})]),t._v(" "),a("p",[a("img",{attrs:{src:p(1403),alt:"1629547035853"}})])])}),[],!1,null,null,null);s.default=r.exports}}]);