(window.webpackJsonp=window.webpackJsonp||[]).push([[577],{7598:function(t,e,s){t.exports=s.p+"assets/img/1645152451907.e12453ca.png"},7599:function(t,e,s){t.exports=s.p+"assets/img/1645153395865.808cb5dc.png"},7600:function(t,e,s){t.exports=s.p+"assets/img/1645153588646.f32e8b8d.png"},7601:function(t,e,s){t.exports=s.p+"assets/img/1645153821897.d1c2bb62.png"},9733:function(t,e,s){"use strict";s.r(e);var r=s(5),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"_5-kubermetes基础-集群安装逻辑"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-kubermetes基础-集群安装逻辑"}},[t._v("#")]),t._v(" 5.kubermetes基础-集群安装逻辑")]),t._v(" "),r("p",[r("img",{attrs:{src:s(7598),alt:"1645152451907"}})]),t._v(" "),r("p",[t._v("比如我们现在有3台服务器，使用这3台服务器做一个k8s的集群")]),t._v(" "),r("p",[t._v("​\t1.首先每个机器都需要安装docker，因为k8s是建立在容器之上的")]),t._v(" "),r("p",[t._v("​\t2.每个机器都需要安装kubelet 也就是厂长")]),t._v(" "),r("p",[t._v("​\t3.还需要安装kubectl-（kuberController）和kubeadm-（kuberAdmin）这些东西其实是协助我们程序员操作的，甚至在集群搞完之后都可以删除掉这俩个东西，kubectl---是我们程序员用的命令行，我们经常会给k8s发号施令就用的这个命令行，实际上这个kubectl装在master总部就可以了，因为只有master总部才有权利发号施令")]),t._v(" "),r("p",[t._v("​\t\t第二个kubeadm--就是帮我们程序员管理集群的，安装了他之后接下来我们安装k8s集群就快多了，k8s的安装集群有很多方式，最快最简单的方式就是使用kubeadm还有就是二进制的安装方式。----帮程序员快速搭建k8s集群的用途")]),t._v(" "),r("p",[t._v("​\t4.然后需要挑选一台机器，做为主节点master，然后使用kuberadm这个工具 调用一个kubeadm init 命令，就可以初始化一个主节点master，接下来kubeadm就可以帮你 把这个节点变为主节点")]),t._v(" "),r("p",[r("img",{attrs:{src:s(7599),alt:"1645153395865"}})]),t._v(" "),r("p",[t._v("​\t5.然后主节点需要安装很多组件，这些组件都由厂长kubelet来安装，厂长kubelet自己来下镜像，厂长负责把这些组件应用都启动起来--然后我们的总部master就完善弄好了")]),t._v(" "),r("p",[r("img",{attrs:{src:s(7600),alt:"1645153588646"}})]),t._v(" "),r("p",[t._v("​\t6.其他的机器只需要一个命令 kubeadm join 就可以加入到这个集群")]),t._v(" "),r("p",[t._v("​\t7.只要加入集群 厂长kubelet就会在节点中安插一个门卫 kube-proxy")]),t._v(" "),r("p",[r("img",{attrs:{src:s(7601),alt:"1645153821897"}})]),t._v(" "),r("p",[t._v("​\t\t以上就是整个集群安装的逻辑思路")])])}),[],!1,null,null,null);e.default=a.exports}}]);