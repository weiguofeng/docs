(window.webpackJsonp=window.webpackJsonp||[]).push([[168],{6133:function(t,s,a){t.exports=a.p+"assets/img/1663755298707.34fe3c67.png"},6134:function(t,s,a){t.exports=a.p+"assets/img/1664182714521.8f83f8e7.png"},6135:function(t,s,a){t.exports=a.p+"assets/img/1664184256079.6d380507.png"},6136:function(t,s,a){t.exports=a.p+"assets/img/1664185024214.cf769a49.png"},6137:function(t,s,a){t.exports=a.p+"assets/img/1664185139578.79593d58.png"},6138:function(t,s,a){t.exports=a.p+"assets/img/1664185622327.122f096e.png"},6139:function(t,s,a){t.exports=a.p+"assets/img/1664186324155.f1a93008.png"},6140:function(t,s,a){t.exports=a.p+"assets/img/1664186501024.1512841c.png"},6141:function(t,s,a){t.exports=a.p+"assets/img/1664186627594.506d4c7c.png"},6142:function(t,s,a){t.exports=a.p+"assets/img/1664186861524.15db72cf.png"},6143:function(t,s,a){t.exports=a.p+"assets/img/1664187030462.e9043380.png"},6144:function(t,s,a){t.exports=a.p+"assets/img/1664187543773.c3881db6.png"},6145:function(t,s,a){t.exports=a.p+"assets/img/1664198241863.6259b528.png"},6146:function(t,s,a){t.exports=a.p+"assets/img/1664198617106.eb913cb7.png"},6147:function(t,s,a){t.exports=a.p+"assets/img/1664199058425.4725afa4.png"},6148:function(t,s,a){t.exports=a.p+"assets/img/1664199395898.c4f7fb94.png"},8818:function(t,s,a){"use strict";a.r(s);var e=a(5),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_1-源码阅读思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-源码阅读思路"}},[t._v("#")]),t._v(" 1.源码阅读思路")]),t._v(" "),e("h4",{attrs:{id:"_1、源码类图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、源码类图"}},[t._v("#")]),t._v(" 1、源码类图")]),t._v(" "),e("p",[t._v("​\t看法：在源码类图中，有实线和虚线，其中实线代表的是继承的关系，虚线代表的是实现的关系")]),t._v(" "),e("p",[t._v("​\t\t类图中标有I的都是接口，标有C的都是class类")]),t._v(" "),e("p",[t._v("​\t我们阅读的时候是从类图的最顶层往下看，按照顶层设计逐步实现方式来阅读这个源代码。")]),t._v(" "),e("p",[t._v("​\t我们看到有类图中有很多接口其中大部分是声明类的接口及具备声明功能，以及告诉框架我需要什么")]),t._v(" "),e("p",[t._v("​\t如果从第一层看，核心的就是realm接口，其实一般有源码阅读经验的都知道，一般一个框架的顶层都是一些接口，这就跟我们平时做一些大型项目的时候一样，各个域之间首先第一件事情是先确定好资源API，这个也称为协议，协议一般定好之后一般架构师会review一下，看这个API定的是否的合理，入参和出参是否通俗易懂，个域之间交互是否清晰，以及参数其他域是否认可。人家需要什么借口我们就设计什么接口，这样的话代码的符合程度会极快，良好的协议API设计永远是第一步。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(6133),alt:"1663755298707"}})]),t._v(" "),e("p",[t._v("​\t\t那阅读一个类的源码，如果是第一次接触，完全不了解的同学可以针对这些注释看一遍，这些注释就是给想看源码的同学说明的。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(6134),alt:"1664182714521"}})]),t._v(" "),e("p",[t._v("​\t第一段注释--说明Realm是一个安全组件，能够访问特点数据实体，如用户，角色和权限等等")]),t._v(" "),e("p",[t._v("​\t第二段说明--Realm一般是于一个数据源数据是一对一的，例如，关系型数据库，文件系统 or。。。后面的我们就不阅读了，")]),t._v(" "),e("p",[t._v("​")]),t._v(" "),e("p",[t._v("​\t\t通过这种阅读源代码的方式，可以告诉大家当我们接触到一个陌生的类的时候，不妨先去看看注释说明")]),t._v(" "),e("p",[t._v("​\t看完注释之后，我们看看这个接口定义了哪些方法")]),t._v(" "),e("h4",{attrs:{id:"_2、查看接口定义的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、查看接口定义的方法"}},[t._v("#")]),t._v(" 2、查看接口定义的方法")]),t._v(" "),e("p",[t._v("​\t\tString getName(); 从注释中可以看出，这个是获取 我这个Realm的名称的")]),t._v(" "),e("p",[t._v("​\t\tboolean supports(AuthenticationToken token);")]),t._v(" "),e("p",[t._v("​\t\t\t\t入参是Token，这个方法其实就是先判断身份是否合法，然后再去认证是否有权限")]),t._v(" "),e("p",[t._v("​")]),t._v(" "),e("p",[t._v("​\t\tAuthenticationInfo getAuthenticationInfo(AuthenticationToken token) throws AuthenticationException;")]),t._v(" "),e("p",[t._v("​\t\t这个方法是通过token的信息，来获取对应账户的信息，这一步还没有验证成功，只是先拿到系统内的账户信息，然后再和你提交的信息做一个比较")]),t._v(" "),e("p",[t._v("​\t\t我们看一下AuthenticationToken 这个类")]),t._v(" "),e("p",[t._v("​\t\t他也是一个接口，我们看一下他的注释说明")]),t._v(" "),e("p",[e("img",{attrs:{src:a(6135),alt:"1664184256079"}})]),t._v(" "),e("p",[t._v("​\tAuthenticationToken是用户在身份验证期间提交用于尝试认证账户的密码集合")]),t._v(" "),e("p",[t._v("​\t这个接口定义了2个方法：")]),t._v(" "),e("p",[t._v("​\tObject getPrincipal(); 返回用户提交的账户名")]),t._v(" "),e("p",[t._v("​\tObject getCredentials(); 返回用户提交的密码")]),t._v(" "),e("p",[t._v("我们查看一下这个接口的层级关系F4呼出层级关系")]),t._v(" "),e("p",[e("img",{attrs:{src:a(6136),alt:"1664185024214"}})]),t._v(" "),e("p",[t._v("​\t然后我们展开，查看一下实现的类")]),t._v(" "),e("p",[e("img",{attrs:{src:a(6137),alt:"1664185139578"}})]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("HostAuthenticationToken接口中有一个host方法，是返回客户端的一个地址\n\nRememberMeAuthenticationToken接口有isRememberMe方法，这个是用户在登录的时候是否选择了记住我\n\n\t他们的共同实现是UsernamePasswordToken这个类\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("h4",{attrs:{id:"_3、我们看一下实现类usernamepasswordtoken"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、我们看一下实现类usernamepasswordtoken"}},[t._v("#")]),t._v(" 3、我们看一下实现类UsernamePasswordToken")]),t._v(" "),e("p",[t._v("​\t我们主要看一下这个类的实现")]),t._v(" "),e("p",[e("img",{attrs:{src:a(6138),alt:"1664185622327"}})]),t._v(" "),e("p",[t._v("​\t\t他是返回了一个用户名")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("getCredentials 返回的是密码\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("img",{attrs:{src:a(6139),alt:"1664186324155"}})]),t._v(" "),e("p",[t._v("PPT总结")]),t._v(" "),e("p",[e("img",{attrs:{src:a(6140),alt:"1664186501024"}})]),t._v(" "),e("p",[e("img",{attrs:{src:a(6141),alt:"1664186627594"}})]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("#### 3、我们来看类图的第二层\n")])])]),e("p",[t._v("​\t\tCachingRealm")]),t._v(" "),e("p",[e("img",{attrs:{src:a(6142),alt:"1664186861524"}})]),t._v(" "),e("p",[t._v("​")]),t._v(" "),e("p",[t._v("​\t我们来看一下这个类，通过这个类的名称我们可以看出应该是做缓存功能的")]),t._v(" "),e("p",[t._v("​\t我们看一下第一段话的描述")]),t._v(" "),e("p",[e("img",{attrs:{src:a(6143),alt:"1664187030462"}})]),t._v(" "),e("p",[t._v("​\t这个描述可以看出他是在接口之上提供了缓存的支撑，既然提供了缓存的功能这里面就会出现一个CacheManager属性，这个属性是对缓存进行管理的")]),t._v(" "),e("p",[e("img",{attrs:{src:a(6144),alt:"1664187543773"}})]),t._v(" "),e("p",[t._v("​\t\tcachingEnable是缓存的开关")]),t._v(" "),e("p",[t._v("后续我们对缓存进行分析讲解的时候再来分析这个类")]),t._v(" "),e("p",[t._v("CachingRealm添加了缓存功能，防止频繁的访问数据源")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("getAvailablePrincipal：关键的方法--这个方法比较重要，获取有效凭证账户\n\n首先获取该Realm对应的账户凭证没有的话默认取第一个\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("img",{attrs:{src:a(6145),alt:"1664198241863"}})]),t._v(" "),e("p",[t._v("​\t我们继续往下看第三层AuthenticatingRealm")]),t._v(" "),e("p",[e("img",{attrs:{src:a(6146),alt:"1664198617106"}})]),t._v(" "),e("p",[t._v("​\t看注释我们了解到这个类 支持身份认证的操作")]),t._v(" "),e("p",[e("img",{attrs:{src:a(6147),alt:"1664199058425"}})]),t._v(" "),e("p",[e("img",{attrs:{src:a(6148),alt:"1664199395898"}})]),t._v(" "),e("p",[t._v("​")])])}),[],!1,null,null,null);s.default=n.exports}}]);