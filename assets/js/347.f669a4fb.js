(window.webpackJsonp=window.webpackJsonp||[]).push([[347],{2393:function(t,s,a){t.exports=a.p+"assets/img/1640765846601.2394d4ab.png"},2394:function(t,s,a){t.exports=a.p+"assets/img/1640766070863.eae25000.png"},2395:function(t,s,a){t.exports=a.p+"assets/img/1640766554776.1ef22d5b.png"},2396:function(t,s,a){t.exports=a.p+"assets/img/1640766864007.60a2dd64.png"},2397:function(t,s,a){t.exports=a.p+"assets/img/1640766971257.3aec39df.png"},2398:function(t,s,a){t.exports=a.p+"assets/img/1640768902010.ab486161.png"},2399:function(t,s,a){t.exports=a.p+"assets/img/1640768822472.3cc438d9.png"},2400:function(t,s,a){t.exports=a.p+"assets/img/1640769058843.bdc89e9d.png"},8429:function(t,s,a){"use strict";a.r(s);var p=a(5),_=Object(p.a)({},(function(){var t=this,s=t.$createElement,p=t._self._c||s;return p("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[p("h1",{attrs:{id:"_2-发布管理-组件封装"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#_2-发布管理-组件封装"}},[t._v("#")]),t._v(" 2.发布管理-组件封装")]),t._v(" "),p("h4",{attrs:{id:"_1、基本功能介绍"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#_1、基本功能介绍"}},[t._v("#")]),t._v(" 1、基本功能介绍")]),t._v(" "),p("p",[t._v("​\t\t之前在我们的审核列表中，如果是已经审核通过的 我们修改状态然后设置成待发布的状态")]),t._v(" "),p("p",[t._v("已经通过的都会显示在待发布的列表中")]),t._v(" "),p("p",[t._v("在我们点击发布后--就会跳转到发布管理中的--已发布")]),t._v(" "),p("p",[p("img",{attrs:{src:a(2393),alt:"1640765846601"}})]),t._v(" "),p("p",[t._v("点击发布后的--在已发布中就可以查询的到了，先看一下实现后的效果")]),t._v(" "),p("p",[p("img",{attrs:{src:a(2394),alt:"1640766070863"}})]),t._v(" "),p("p",[t._v("其实待发布和 已发布 ，已下线 这三个功能的基本布局结构都是一样的")]),t._v(" "),p("p",[t._v("​\t待发布是 publish =1 已发布是publish = 2 已下线是publish = 3")]),t._v(" "),p("p",[t._v("我们可以把这三个组件--共同调用一个组件来实现就可以了")]),t._v(" "),p("h4",{attrs:{id:"_2、组件封装"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#_2、组件封装"}},[t._v("#")]),t._v(" 2、组件封装")]),t._v(" "),p("p",[t._v("​\t\t创建Unpublished组件")]),t._v(" "),p("p",[t._v("​\t\t请求获取--作者是当前用户的，并且publishState是1的--查询出的是待发布的数据")]),t._v(" "),p("p",[p("img",{attrs:{src:a(2395),alt:"1640766554776"}})]),t._v(" "),p("p",[t._v("我们每次使用一个Table组件--写的比较麻烦，但是如果我们自己封装一个自己的组件，然后将我们的数据放入然后再渲染设置Table组件")]),t._v(" "),p("p",[p("img",{attrs:{src:a(2396),alt:"1640766864007"}})]),t._v(" "),p("p",[t._v("然后将获取到的dataSource设置值，然后传入到我们封装的组件中")]),t._v(" "),p("p",[t._v("​\t\t这个属性是我们自定义的")]),t._v(" "),p("p",[p("img",{attrs:{src:a(2397),alt:"1640766971257"}})]),t._v(" "),p("p",[t._v("然后我们创建子组件--并且让 props给子组件传入数据")]),t._v(" "),p("p",[t._v("​\t设置Table列")]),t._v(" "),p("p",[p("img",{attrs:{src:a(2398),alt:"1640768902010"}})]),t._v(" "),p("p",[t._v("​")]),t._v(" "),p("p",[t._v("​\t并且设置table组件内容")]),t._v(" "),p("p",[p("img",{attrs:{src:a(2399),alt:"1640768822472"}})]),t._v(" "),p("p",[t._v("我们运行查看一下效果：")]),t._v(" "),p("p",[p("img",{attrs:{src:a(2400),alt:"1640769058843"}})])])}),[],!1,null,null,null);s.default=_.exports}}]);