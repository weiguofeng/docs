(window.webpackJsonp=window.webpackJsonp||[]).push([[334],{6836:function(s,e,t){s.exports=t.p+"assets/img/1654175199659.2c17501f.png"},6837:function(s,e,t){s.exports=t.p+"assets/img/1654175234566.3353cbf6.png"},6838:function(s,e,t){s.exports=t.p+"assets/img/1654175367691.de1d5ec1.png"},6839:function(s,e,t){s.exports=t.p+"assets/img/1654175465552.af9099c6.png"},6840:function(s,e,t){s.exports=t.p+"assets/img/1654175489089.c21a62c5.png"},6841:function(s,e,t){s.exports=t.p+"assets/img/1654175602099.1d3896f3.png"},6842:function(s,e,t){s.exports=t.p+"assets/img/1654175699179.fcf328d1.png"},6843:function(s,e,t){s.exports=t.p+"assets/img/1654175811114.f819bdcb.png"},6844:function(s,e,t){s.exports=t.p+"assets/img/1654176101180.b2a89ec9.png"},8885:function(s,e,t){"use strict";t.r(e);var n=t(5),a=Object(n.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"_42-k8s核心实战-存储抽象-secret场景示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_42-k8s核心实战-存储抽象-secret场景示例"}},[s._v("#")]),s._v(" 42.k8s核心实战-存储抽象-Secret场景示例")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("#### Secret\n")])])]),n("p",[s._v("​\tSecret 对象类型用来保存敏感信息，例如密码、OAuth 令牌和 SSH 密钥。 将这些信息放在 secret 中比放在 "),n("a",{attrs:{href:"https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Pod"),n("OutboundLink")],1),s._v(" 的定义或者 "),n("a",{attrs:{href:"https://kubernetes.io/zh/docs/reference/glossary/?all=true#term-image",target:"_blank",rel:"noopener noreferrer"}},[s._v("容器镜像"),n("OutboundLink")],1),s._v(" 中来说更加安全和灵活。")]),s._v(" "),n("p",[s._v("​\t其实他是区别于ConfigMap和ConfigMap的工作原理基本一样，只不过ConfigMap他是用来保存我们配置文件等等这些明文信息")]),s._v(" "),n("p",[s._v("​")]),s._v(" "),n("p",[s._v("​\t\t比如-我们现在要启动一个Pod，这个Pod启动期间肯定要下载一个镜像，但这个镜像我们以前都是从docker hub拉的公有镜像如redis，nginx等等公有镜像，但我们有的时候公司会创建一个自己的私有镜像仓库，比如把我们写好的微服务镜像都放到这个仓库，所以如果我们需要这个私有仓库的镜像的时候我们就需要登录了----那么就需要登录的用户名和密码了，如果我们把这个登录的账号信息写在这个Pod的配置文件里面的话，这样就会有些不安全容易泄露------所以我们现在可以使用k8s的 Secret的方式，先把我docker这些登录的信息保存起来，以后我在下载镜像的时候直接就可以使用了，我们就不需要输入我们docker仓库的用户名和密码了。")]),s._v(" "),n("p",[s._v("​\t如，我们现在把这个公共的仓库先变为私有仓库")]),s._v(" "),n("p",[n("img",{attrs:{src:t(6836),alt:"1654175199659"}})]),s._v(" "),n("p",[s._v("我们现在可以看到是私有的了")]),s._v(" "),n("p",[n("img",{attrs:{src:t(6837),alt:"1654175234566"}})]),s._v(" "),n("p",[s._v("​\t如果我们现在想下载这个私有仓库的镜像的话")]),s._v(" "),n("p",[s._v("​\t提示我们访问拒绝，需要登录")]),s._v(" "),n("p",[n("img",{attrs:{src:t(6838),alt:"1654175367691"}})]),s._v(" "),n("p",[s._v("​\t如果我们现在要启动一个私有仓库的v1.0的话")]),s._v(" "),n("p",[n("img",{attrs:{src:t(6839),alt:"1654175465552"}})]),s._v(" "),n("p",[n("img",{attrs:{src:t(6840),alt:"1654175489089"}})]),s._v(" "),n("p",[s._v("​\t现在我们在k8s的web界面可以看到，镜像是下载失败的---不存在这个镜像或者是需要登录")]),s._v(" "),n("p",[n("img",{attrs:{src:t(6841),alt:"1654175602099"}})]),s._v(" "),n("p",[s._v("​\t然后我们把这个创建Pod的yaml删除掉")]),s._v(" "),n("p",[n("img",{attrs:{src:t(6842),alt:"1654175699179"}})]),s._v(" "),n("p",[s._v("​\t现在我们创建一下Secret，里面加入用户名和密码的信息")]),s._v(" "),n("p",[n("img",{attrs:{src:t(6843),alt:"1654175811114"}})]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("我们现在载一下这个私有仓库的镜像试试，因为上面配置Secret的场景，这个K8s因为会携带用户名和密码然后登陆成功，下载成功这个私有仓库中的镜像了\n")])])]),n("p",[n("img",{attrs:{src:t(6844),alt:"1654176101180"}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("kubectl create secret docker-registry leifengyang-docker \\\n--docker-username=leifengyang \\\n--docker-password=Lfy123456 \\\n--docker-email=534096094@qq.com\n\n##命令格式\nkubectl create secret docker-registry regcred \\\n --docker-server=<你的镜像仓库服务器> \\\n --docker-username=<你的用户名> \\\n --docker-password=<你的密码> \\\n --docker-email=<你的邮箱地址>\n \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("创建Pod的yaml")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("apiVersion: v1\nkind: Pod\nmetadata:\n  name: private-nginx\nspec:\n  containers:\n  - name: private-nginx\n    image: leifengyang/guignginx:v1.0\n  imagePullSecrets:\n  - name: leifengyang-docker\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])])])}),[],!1,null,null,null);e.default=a.exports}}]);