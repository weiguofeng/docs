(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{4934:function(t,s,a){t.exports=a.p+"assets/img/1637418399363.1516395e.png"},4935:function(t,s,a){t.exports=a.p+"assets/img/1637418508465.4bf7eb8c.png"},4936:function(t,s,a){t.exports=a.p+"assets/img/1637418561360.6314bdc5.png"},4937:function(t,s,a){t.exports=a.p+"assets/img/1637418623825.1963cd4a.png"},4938:function(t,s,a){t.exports=a.p+"assets/img/1637418795463.8ac3e5e1.png"},4939:function(t,s,a){t.exports=a.p+"assets/img/1637419089274.c8079a45.png"},4940:function(t,s,a){t.exports=a.p+"assets/img/1637419156797.20db209c.png"},4941:function(t,s,a){t.exports=a.p+"assets/img/1637419294056.a6809178.png"},4942:function(t,s,a){t.exports=a.p+"assets/img/1637419413362.6a98611d.png"},4943:function(t,s,a){t.exports=a.p+"assets/img/1637419507593.3db97c05.png"},4944:function(t,s,a){t.exports=a.p+"assets/img/1637419564681.6ada9020.png"},4945:function(t,s,a){t.exports=a.p+"assets/img/1637419967960.3d9811c3.png"},4946:function(t,s,a){t.exports=a.p+"assets/img/1637420040949.5953427f.png"},4947:function(t,s,a){t.exports=a.p+"assets/img/1637420174857.9b9289a7.png"},4948:function(t,s,a){t.exports=a.p+"assets/img/1637419719831.d8f82792.png"},4949:function(t,s,a){t.exports=a.p+"assets/img/1637420252890.5952dc78.png"},4950:function(t,s,a){t.exports=a.p+"assets/img/1637420296326.74a94957.png"},4951:function(t,s,a){t.exports=a.p+"assets/img/1637420417429.be3386ca.png"},4952:function(t,s,a){t.exports=a.p+"assets/img/1637420521965.23f51402.png"},4953:function(t,s,a){t.exports=a.p+"assets/img/1637420671900.b824dffc.png"},4954:function(t,s,a){t.exports=a.p+"assets/img/1637420825398.eeefd92b.png"},4955:function(t,s,a){t.exports=a.p+"assets/img/1637420993971.990ba5b3.png"},4956:function(t,s,a){t.exports=a.p+"assets/img/1637421027254.bc3058d8.png"},4957:function(t,s,a){t.exports=a.p+"assets/img/1637421173894.e563e648.png"},4958:function(t,s,a){t.exports=a.p+"assets/img/1637421594884.9980bd86.png"},4959:function(t,s,a){t.exports=a.p+"assets/img/1637421432227.cefef438.png"},4960:function(t,s,a){t.exports=a.p+"assets/img/1637421528466.9ca5ac42.png"},4961:function(t,s,a){t.exports=a.p+"assets/img/1637421640289.a29c0ffa.png"},4962:function(t,s,a){t.exports=a.p+"assets/img/1637421777388.7c9c4bc5.png"},4963:function(t,s,a){t.exports=a.p+"assets/img/1637421860955.a4578252.png"},4964:function(t,s,a){t.exports=a.p+"assets/img/1637422010995.ad2c7321.png"},4965:function(t,s,a){t.exports=a.p+"assets/img/1637422280623.85942d24.png"},4966:function(t,s,a){t.exports=a.p+"assets/img/1637422355357.39e05227.png"},4967:function(t,s,a){t.exports=a.p+"assets/img/1637422498361.f91e3245.png"},4968:function(t,s,a){t.exports=a.p+"assets/img/1637422676378.679bc229.png"},4969:function(t,s,a){t.exports=a.p+"assets/img/1637422878559.c3e29850.png"},4970:function(t,s,a){t.exports=a.p+"assets/img/1637422982770.4da0e394.png"},4971:function(t,s,a){t.exports=a.p+"assets/img/1637423024696.4661108b.png"},4972:function(t,s,a){t.exports=a.p+"assets/img/1637423161834.bd8ebe3f.png"},4973:function(t,s,a){t.exports=a.p+"assets/img/1637423493017.7829dd64.png"},4974:function(t,s,a){t.exports=a.p+"assets/img/1637423714585.973dedab.png"},4975:function(t,s,a){t.exports=a.p+"assets/img/1637423895491.a09438b3.png"},4976:function(t,s,a){t.exports=a.p+"assets/img/1637423929946.a19ac1cb.png"},4977:function(t,s,a){t.exports=a.p+"assets/img/1637424040277.9eebc5cc.png"},4978:function(t,s,a){t.exports=a.p+"assets/img/1637424100348.908c8a86.png"},4979:function(t,s,a){t.exports=a.p+"assets/img/1637424540079.4fae1430.png"},4980:function(t,s,a){t.exports=a.p+"assets/img/1637424795141.da99aff1.png"},8691:function(t,s,a){"use strict";a.r(s);var p=a(5),r=Object(p.a)({},(function(){var t=this,s=t.$createElement,p=t._self._c||s;return p("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[p("h1",{attrs:{id:"_1-脚手架前端代码"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#_1-脚手架前端代码"}},[t._v("#")]),t._v(" 1.脚手架前端代码")]),t._v(" "),p("h4",{attrs:{id:"_1、首先检查项目"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#_1、首先检查项目"}},[t._v("#")]),t._v(" 1、首先检查项目：")]),t._v(" "),p("p",[t._v("​\t\tnode -v           检查node")]),t._v(" "),p("p",[t._v("其次是 yarn -v")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4934),alt:"1637418399363"}})]),t._v(" "),p("p",[t._v("​")]),t._v(" "),p("p",[t._v("检查npm镜像源是否正确：")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4935),alt:"1637418508465"}})]),t._v(" "),p("p",[t._v("npm的镜像源和组件库文档地址")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4936),alt:"1637418561360"}})]),t._v(" "),p("p",[t._v("打开组件库文档地址：")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4937),alt:"1637418623825"}})]),t._v(" "),p("p",[t._v("看一下项目结构：主要看src下的目录结构")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4938),alt:"1637418795463"}})]),t._v(" "),p("p",[t._v("common-- 代码中的配置")]),t._v(" "),p("p",[t._v("components--可以复用的一些组件")]),t._v(" "),p("p",[t._v("layouts--一些布局文件")]),t._v(" "),p("p",[t._v("routes-- 每个页面的路由，路由页面文件")]),t._v(" "),p("p",[t._v("stores--数据存储")]),t._v(" "),p("p",[t._v("utils -- 工具类函数")]),t._v(" "),p("p",[t._v("我们目前的焦点是：common文件夹和 routes文件夹")]),t._v(" "),p("h4",{attrs:{id:"_2、启动项目-npm-start"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#_2、启动项目-npm-start"}},[t._v("#")]),t._v(" 2、启动项目 npm start")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4939),alt:"1637419089274"}})]),t._v(" "),p("p",[t._v("项目刚创建完后页面会有 我的待办和任务管理 2个页面--后续我们开发培训人员")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4940),alt:"1637419156797"}})]),t._v(" "),p("h4",{attrs:{id:"_2-1-菜单配置-在common-menu-js"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-菜单配置-在common-menu-js"}},[t._v("#")]),t._v(" 2.1 菜单配置--在common--menu.js")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4941),alt:"1637419294056"}})]),t._v(" "),p("p",[t._v("我们新增的培训人员--菜单")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4942),alt:"1637419413362"}})]),t._v(" "),p("p",[t._v("path尽量与key保持一致，icon是从组件库中的icon中找到相应的图标名称")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4943),alt:"1637419507593"}})]),t._v(" "),p("p",[t._v("这个配置完以后--菜单中就显示出来了")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4944),alt:"1637419564681"}})]),t._v(" "),p("h4",{attrs:{id:"_2-2-配置路由"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-配置路由"}},[t._v("#")]),t._v(" 2.2 配置路由")]),t._v(" "),p("p",[t._v("先添加user路由：在routes下创建User文件夹--然后创建index.js---这个其实就是显示的页面文件内容")]),t._v(" "),p("p",[t._v("​\t声明一个类class，这个类代表一个组件")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4945),alt:"1637419967960"}})]),t._v(" "),p("p",[t._v("在最后一定要记得导出这个组件：export default User")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4946),alt:"1637420040949"}})]),t._v(" "),p("p",[t._v("注意页面中一定要有render渲染的方法：")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4947),alt:"1637420174857"}})]),t._v(" "),p("p",[t._v("配置user跳转的路由：")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4948),alt:"1637419719831"}})]),t._v(" "),p("h4",{attrs:{id:"_2-3-在页面中使用uyun组件库中的组件"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-在页面中使用uyun组件库中的组件"}},[t._v("#")]),t._v(" 2.3 在页面中使用uyun组件库中的组件")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4949),alt:"1637420252890"}})]),t._v(" "),p("p",[t._v("在组件库中看一下：")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4950),alt:"1637420296326"}})]),t._v(" "),p("p",[t._v("uyun按钮组件的使用")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4951),alt:"1637420417429"}})]),t._v(" "),p("p",[t._v("Table组件的使用：columns--声明表头有哪些，dataSource是数据")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4952),alt:"1637420521965"}})]),t._v(" "),p("p",[t._v("表头--colums怎么写，可以写在类上面，也可以写在类的内部---数组中包括的每个对象都是一个单列")]),t._v(" "),p("p",[t._v("​\t注意时间戳的处理--会用到三方库 moment组件")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4953),alt:"1637420671900"}})]),t._v(" "),p("p",[p("img",{attrs:{src:a(4954),alt:"1637420825398"}})]),t._v(" "),p("p",[t._v("后端的数据不符合我们前端要求显示的，就需要自定义一下比如时间戳")]),t._v(" "),p("p",[t._v("render传入一个函数test -然后将函数test放入moment进行格式化")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4955),alt:"1637420993971"}})]),t._v(" "),p("p",[t._v("页面效果：")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4956),alt:"1637421027254"}})]),t._v(" "),p("h4",{attrs:{id:"_2-4点击按钮弹出模态框"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#_2-4点击按钮弹出模态框"}},[t._v("#")]),t._v(" 2.4点击按钮弹出模态框")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4957),alt:"1637421173894"}})]),t._v(" "),p("p",[t._v("这个时候需要使用到三个组件：对话框组件modal ，表单组件Form，输入框组件Input")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4958),alt:"1637421594884"}})]),t._v(" "),p("p",[t._v("组件的使用：")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4959),alt:"1637421432227"}})]),t._v(" "),p("p",[t._v("FormItemLayout在表单的布局：表单分为24格，比如左边的label暂用几格")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4960),alt:"1637421528466"}})]),t._v(" "),p("p",[t._v("FormItemLayout放在最上面声明一下：这个意思就是左面的label暂用3格---右边的输入框暂用21格")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4961),alt:"1637421640289"}})]),t._v(" "),p("p",[t._v("里面有个getFiledDecorator这么个函数")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4962),alt:"1637421777388"}})]),t._v(" "),p("p",[t._v("首先是在类组件上加@Form.create()加上这个方法后，相当于会交给这个方法托管表单的操作，这样操作表单的话会比较方便。")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4963),alt:"1637421860955"}})]),t._v(" "),p("p",[t._v("写了@Form.create()这个后，我们就可以通过this.props.form获取到form这个对象")]),t._v(" "),p("p",[t._v("从form总又可以拿到getFieldDecorator这个方法")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4964),alt:"1637422010995"}})]),t._v(" "),p("p",[t._v("用getFieldDecorator包裹这个input输入框后，他就可以接管这个输入框了")]),t._v(" "),p("p",[t._v("​\t\t这个方法对应的第一个参数 userName就是对应这个控件的字段名，第二个参数是一个对象，对象里面要包含一定的规则，比如培训人员名称是必填项")]),t._v(" "),p("p",[t._v("​\t\t如果没有填写的时候，需要给提示信息message：")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4965),alt:"1637422280623"}})]),t._v(" "),p("p",[t._v("input中的placeholder属性是灰色占位提示")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4966),alt:"1637422355357"}})]),t._v(" "),p("p",[t._v("注意邮箱和手机号码格式验证： pattern是使用正则表达式 11位数字且由1开头")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4967),alt:"1637422498361"}})]),t._v(" "),p("p",[t._v("需要声明一个状态--比如visible--默认是true，需要给他设置默认为false，visible是用来控制对话框的显示和隐藏的，data是用来组装存放表单内数据的")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4968),alt:"1637422676378"}})]),t._v(" "),p("p",[t._v("在render中，我们从state中拿出visible 和 data，将visible传给对话框")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4969),alt:"1637422878559"}})]),t._v(" "),p("p",[t._v("给按钮添加事件，让这个事件来触发对话框的表单")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4970),alt:"1637422982770"}})]),t._v(" "),p("p",[t._v("点击按钮触发这个函数，函数中将visible设置为true就是打开对话框，下面的hideModal函数就是关闭模态框的函数")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4971),alt:"1637423024696"}})]),t._v(" "),p("p",[t._v("在modal组件中加入关闭属性onCancel 放入关闭函数，就可以关闭了，点击取消或者点击叉号都会触发这个方法")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4972),alt:"1637423161834"}})]),t._v(" "),p("p",[t._v("现在我们的页面基本就写好了")]),t._v(" "),p("h4",{attrs:{id:"_3、导入使用接口文件"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#_3、导入使用接口文件"}},[t._v("#")]),t._v(" 3、导入使用接口文件")]),t._v(" "),p("p",[t._v("页面写好后我们需要在utils--下查看这个swagger-api这个文件夹下内容")]),t._v(" "),p("p",[t._v("swagger-api这个是之前写完接口从yml文件编译而来的---后端编译完成我们才可以使用这个文件里面写好的接口")]),t._v(" "),p("p",[t._v("导入接口文件swagger-api，从这里我们结构出addUser和queryAll这俩个方法")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4973),alt:"1637423493017"}})]),t._v(" "),p("p",[t._v("我们什么时候发送请求呢？我们在一进入页面的时候需要发送一次请求，我们使用钩子函数commontDidmount（），在queryData函数中使用我们从接口中结构出的queryAll方法用于调用接口，接口返回的数据res我们从res.body获取到我们需要的数据--然后获取到的数据setState一下放入组件的state中")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4974),alt:"1637423714585"}})]),t._v(" "),p("p",[t._v("这样我们在render中就可以拿到data数据了")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4975),alt:"1637423895491"}})]),t._v(" "),p("p",[t._v("然后给到Table组件，就可以渲染列表内容了")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4976),alt:"1637423929946"}})]),t._v(" "),p("h4",{attrs:{id:"_4-新增数据"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#_4-新增数据"}},[t._v("#")]),t._v(" 4.新增数据")]),t._v(" "),p("p",[t._v("​\t模态框中添加确认按钮触发事件")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4977),alt:"1637424040277"}})]),t._v(" "),p("p",[t._v("表单提交方法submitForm----")]),t._v(" "),p("p",[t._v("​\t\t提交表单的时候我们需要校验表单，我们从this.props.form执行validatefields校验这个方法")]),t._v(" "),p("p",[t._v("​\t\t他的参数是一个函数，这个函数又有俩个参数err，和value")]),t._v(" "),p("p",[t._v("​\t\t如果你的表单填写错误err是有值的，所以我们取反 !err 没有值的时候 我们进入接口传输请求")]),t._v(" "),p("p",[t._v("​\t\tvalues就是form表单整体的对象")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4978),alt:"1637424100348"}})]),t._v(" "),p("p",[t._v("然后调用我们通过swagger结构出的addUser方法，createUser是具体接口中配置的对象属性，请求成功的回调res和失败的回调err，无论成功和失败都要给一个提示message，这个是使用的Message组件")]),t._v(" "),p("p",[t._v("​\t请求成功后我们调用queryData方法更新数据")]),t._v(" "),p("p",[t._v("​\t最后我们需要关闭弹出的模态框")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4979),alt:"1637424540079"}})]),t._v(" "),p("p",[t._v("message组件：")]),t._v(" "),p("p",[p("img",{attrs:{src:a(4980),alt:"1637424795141"}})])])}),[],!1,null,null,null);s.default=r.exports}}]);