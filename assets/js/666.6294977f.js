(window.webpackJsonp=window.webpackJsonp||[]).push([[666],{5783:function(t,a,s){t.exports=s.p+"assets/img/1635836951329.f3eb342c.png"},8675:function(t,a,s){"use strict";s.r(a);var r=s(5),_=Object(r.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"_20-复习-函数式接口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_20-复习-函数式接口"}},[t._v("#")]),t._v(" 20.复习-函数式接口")]),t._v(" "),r("h4",{attrs:{id:"_1、函数式接口的使用说明"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1、函数式接口的使用说明"}},[t._v("#")]),t._v(" 1、函数式接口的使用说明")]),t._v(" "),r("p",[t._v("​\t\t> 如果一个接口中，只声明了一个抽象方法，则此接口就称为函数式接口。")]),t._v(" "),r("p",[t._v("​\t\t> 我们可以在一个接口上使用@FunctionInterface 注解，这样做可以检查他是否是一个函数式接口。")]),t._v(" "),r("p",[t._v("​\t\t> Lambda表达式的本质：就是作为函数式接口的实例。")]),t._v(" "),r("h4",{attrs:{id:"_2、java8中关于lambda表达式提供的4个基本的函数式接口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2、java8中关于lambda表达式提供的4个基本的函数式接口"}},[t._v("#")]),t._v(" 2、Java8中关于Lambda表达式提供的4个基本的函数式接口")]),t._v(" "),r("p",[r("strong",[t._v("具体使用：")])]),t._v(" "),r("p",[r("img",{attrs:{src:s(5783),alt:"1635836951329"}})]),t._v(" "),r("h4",{attrs:{id:"_3、总结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3、总结"}},[t._v("#")]),t._v(" 3、总结")]),t._v(" "),r("h4",{attrs:{id:"_3-1、何时使用lambda表达式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、何时使用lambda表达式"}},[t._v("#")]),t._v(" 3.1、何时使用Lambda表达式？")]),t._v(" "),r("p",[t._v("​\t\t\t\t当需要对一个函数式接口实例化的时候，可以使用Lambda表达式。")]),t._v(" "),r("h4",{attrs:{id:"_3-2、何时使用给定的函数式接口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、何时使用给定的函数式接口"}},[t._v("#")]),t._v(" 3.2、何时使用给定的函数式接口？")]),t._v(" "),r("p",[t._v("​\t\t\t\t\t如果我们开发中，需要定义一个函数式接口，首先看看在已有的jdk提供的函数式接口是否提供了能满足需求的函数式接口，如果有，则直接调用就可以了，不需要自己在自定义了。")])])}),[],!1,null,null,null);a.default=_.exports}}]);