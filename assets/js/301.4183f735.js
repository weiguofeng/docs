(window.webpackJsonp=window.webpackJsonp||[]).push([[301],{5368:function(t,s,a){t.exports=a.p+"assets/img/image-20220409220329371.fa3731f1.png"},5369:function(t,s,a){t.exports=a.p+"assets/img/image-20220409220433055.5b794557.png"},5370:function(t,s,a){t.exports=a.p+"assets/img/image-20220409221327559.88d59ec3.png"},5371:function(t,s,a){t.exports=a.p+"assets/img/image-20220409221440891.ab525922.png"},5372:function(t,s,a){t.exports=a.p+"assets/img/image-20220409221524005.2dafba3d.png"},5373:function(t,s,a){t.exports=a.p+"assets/img/image-20220409221551836.dffadb88.png"},5374:function(t,s,a){t.exports=a.p+"assets/img/image-20220409221734812.c1006090.png"},5375:function(t,s,a){t.exports=a.p+"assets/img/image-20220409221905848.e1bc112a.png"},5376:function(t,s,a){t.exports=a.p+"assets/img/image-20220409222427764.b2b360dc.png"},5377:function(t,s,a){t.exports=a.p+"assets/img/image-20220409222826966.43ffcf24.png"},8704:function(t,s,a){"use strict";a.r(s);var e=a(5),i=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_20-构造函数和继承"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_20-构造函数和继承"}},[t._v("#")]),t._v(" 20.构造函数和继承")]),t._v(" "),e("p",[t._v("​\tConstructors and inheritance:构造函数和继承")]),t._v(" "),e("p",[t._v("​\t我们已经了解了构造函数，我们明白当我们创建类的实例，")]),t._v(" "),e("p",[t._v("我们可以使用Intellij的快速创建构造函数 Generate")]),t._v(" "),e("p",[e("img",{attrs:{src:a(5368),alt:"image-20220409220329371"}})]),t._v(" "),e("p",[t._v("我们选择一个无惨构造")]),t._v(" "),e("p",[e("img",{attrs:{src:a(5369),alt:"image-20220409220433055"}})]),t._v(" "),e("p",[t._v("现在在这个构造函数中，我们想打印一条信息，如下：")]),t._v(" "),e("p",[e("img",{attrs:{src:a(5370),alt:"image-20220409221327559"}})]),t._v(" "),e("p",[t._v("然后我们想对Text类做同样的事情")]),t._v(" "),e("p",[e("img",{attrs:{src:a(5371),alt:"image-20220409221440891"}})]),t._v(" "),e("p",[t._v("现在我们新建实例，我们看一下发生了什么")]),t._v(" "),e("p",[e("img",{attrs:{src:a(5372),alt:"image-20220409221524005"}})]),t._v(" "),e("p",[t._v("​\t我们发现 父类的构造函数被调用了，然后是子类的构造函数")]),t._v(" "),e("p",[e("img",{attrs:{src:a(5373),alt:"image-20220409221551836"}})]),t._v(" "),e("p",[t._v("那么现在如果父类的构造函数是一个有参数的构造函数呢？")]),t._v(" "),e("p",[e("img",{attrs:{src:a(5374),alt:"image-20220409221734812"}})]),t._v(" "),e("p",[t._v("我们回到TextBox类中，发现有一个编译错误，没有可用的默认构造函数，因为我们Text类中没有父类中的参数，所以文本框类的构造函数，不知道要给此构造函数传递什么值")]),t._v(" "),e("p",[e("img",{attrs:{src:a(5375),alt:"image-20220409221905848"}})]),t._v(" "),e("p",[t._v("​\t所以这里我们需要显式的调用这个构造函数，我们回到TextBox类中")]),t._v(" "),e("p",[t._v("​\t\t使用supper()关键字调用父类的构造函数，可以看到我们需要传递一个布尔值true或者false，这并不重要，重要的是，这份声明应该是这个构造函数中的第一条语句。")]),t._v(" "),e("p",[e("img",{attrs:{src:a(5376),alt:"image-20220409222427764"}})]),t._v(" "),e("p",[t._v("​\t如果我们不是在第一条语句使用显式的父类构造器调用的话，我们会再次看到一个编译错误")]),t._v(" "),e("p",[e("img",{attrs:{src:a(5377),alt:"image-20220409222826966"}})]),t._v(" "),e("p",[t._v("​")])])}),[],!1,null,null,null);s.default=i.exports}}]);