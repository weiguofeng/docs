(window.webpackJsonp=window.webpackJsonp||[]).push([[174],{6907:function(t,s,a){t.exports=a.p+"assets/img/1673177118373.de6fbf34.png"},6908:function(t,s,a){t.exports=a.p+"assets/img/1673177201561.d8343ddb.png"},6909:function(t,s,a){t.exports=a.p+"assets/img/1673177339322.27ec4b72.png"},6910:function(t,s,a){t.exports=a.p+"assets/img/1673178041701.56a4b797.png"},6911:function(t,s,a){t.exports=a.p+"assets/img/1673178515130.019121d0.png"},6912:function(t,s,a){t.exports=a.p+"assets/img/1673178561750.24519670.png"},6913:function(t,s,a){t.exports=a.p+"assets/img/1673178749613.2328940f.png"},6914:function(t,s,a){t.exports=a.p+"assets/img/1673178868911.41a9f2e6.png"},6915:function(t,s,a){t.exports=a.p+"assets/img/1673179016923.7d0b46c2.png"},6916:function(t,s,a){t.exports=a.p+"assets/img/1673179051169.493d3976.png"},6917:function(t,s,a){t.exports=a.p+"assets/img/1673179209259.32d3f46a.png"},6918:function(t,s,a){t.exports=a.p+"assets/img/1673179340146.25086252.png"},6919:function(t,s,a){t.exports=a.p+"assets/img/1673179355551.30785c5f.png"},6920:function(t,s,a){t.exports=a.p+"assets/img/1673179476824.411dc651.png"},6921:function(t,s,a){t.exports=a.p+"assets/img/1673179545743.56878fe7.png"},6922:function(t,s,a){t.exports=a.p+"assets/img/1673179564614.3c34a08e.png"},6923:function(t,s,a){t.exports=a.p+"assets/img/1673179880676.86d16ac2.png"},9788:function(t,s,a){"use strict";a.r(s);var r=a(5),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"_3、stream流的思想"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3、stream流的思想"}},[t._v("#")]),t._v(" 3、Stream流的思想")]),t._v(" "),r("p",[t._v("​\t什么是流？ 我们可以理解为工厂的流水线")]),t._v(" "),r("p",[r("img",{attrs:{src:a(6907),alt:"1673177118373"}})]),t._v(" "),r("p",[t._v("Stream 分为 中间方法--如过滤操作，可以多次过滤， 和 终结方法-如打印输出结果")]),t._v(" "),r("p",[r("img",{attrs:{src:a(6908),alt:"1673177201561"}})]),t._v(" "),r("h4",{attrs:{id:"如何获得一个流水线并把数据放上去呢"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何获得一个流水线并把数据放上去呢"}},[t._v("#")]),t._v(" 如何获得一个流水线并把数据放上去呢？")]),t._v(" "),r("p",[r("img",{attrs:{src:a(6909),alt:"1673177339322"}})]),t._v(" "),r("p",[t._v("​\t单列集合是可以Collection中默认方法直接获取的")]),t._v(" "),r("p",[t._v("​\t双列集合 需要使用keySet()方法或者是entrySet方法 转化为单列集合 就可以使用获取stream流了")]),t._v(" "),r("p",[t._v("​\t数组  可以使用数组的工具类Arrays里面的静态方法")]),t._v(" "),r("p",[t._v("​\t一堆零散的数据：这些数据没有放到集合，或者是没有放到数组当中，是一堆零散的数据，这些数据可以使用Stream接口中的方法 of 来进行处理，但是这些数据是需要同一种数据类型的。")]),t._v(" "),r("h4",{attrs:{id:"_1、案例1-单列集合"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1、案例1-单列集合"}},[t._v("#")]),t._v(" 1、案例1--单列集合")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("1、因为ArrayList是Collections的实现，所以直接可以调用stream")])]),t._v(" "),r("li",[r("p",[t._v("2、使用stream调用forEach循环，参数是一个匿名内部类的参数格式，我们先不使用Lamda表达式来实现")])])]),t._v(" "),r("p",[t._v("​\t\t"),r("img",{attrs:{src:a(6910),alt:"1673178041701"}})]),t._v(" "),r("p",[t._v("​\t\t这不是最终代码，我们一般是这么来写的：而是直接使用链式编程，直接连贯起来")]),t._v(" "),r("p",[r("img",{attrs:{src:a(6911),alt:"1673178515130"}})]),t._v(" "),r("p",[t._v("​\t这个s就表示流水线上的每个数据")]),t._v(" "),r("p",[r("img",{attrs:{src:a(6912),alt:"1673178561750"}})]),t._v(" "),r("p",[t._v("​\t这就是单列集合获取Stream流")]),t._v(" "),r("h4",{attrs:{id:"_2、案例-双列集合"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2、案例-双列集合"}},[t._v("#")]),t._v(" 2、案例-双列集合")]),t._v(" "),r("ul",[r("li",[t._v("1、我们无法通过双列集合直接获取 stream流，但是可以将所有的key放入Set 单列集合中就可以了")]),t._v(" "),r("li",[t._v("2、运行输出-可以得到所有的key值")])]),t._v(" "),r("p",[r("img",{attrs:{src:a(6913),alt:"1673178749613"}})]),t._v(" "),r("p",[r("img",{attrs:{src:a(6914),alt:"1673178868911"}})]),t._v(" "),r("ul",[r("li",[t._v("3、也可以是将双列集合转为 entrySet --就是 键值对 的单列集合--这样key 和 value就都有了")])]),t._v(" "),r("p",[r("img",{attrs:{src:a(6915),alt:"1673179016923"}})]),t._v(" "),r("p",[r("img",{attrs:{src:a(6916),alt:"1673179051169"}})]),t._v(" "),r("p",[t._v("​\t这样我们可以得到每个键值对")]),t._v(" "),r("h4",{attrs:{id:"_3、案例-数组获取stream"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3、案例-数组获取stream"}},[t._v("#")]),t._v(" 3、案例-数组获取Stream")]),t._v(" "),r("p",[r("img",{attrs:{src:a(6917),alt:"1673179209259"}})]),t._v(" "),r("p",[t._v("​\t如果说是引用类型的数组也是可以的")]),t._v(" "),r("p",[r("img",{attrs:{src:a(6918),alt:"1673179340146"}})]),t._v(" "),r("p",[t._v("​\t运行结果--没有问题")]),t._v(" "),r("p",[r("img",{attrs:{src:a(6919),alt:"1673179355551"}})]),t._v(" "),r("h4",{attrs:{id:"_4、案例-一堆零散的数据-获取stream流"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4、案例-一堆零散的数据-获取stream流"}},[t._v("#")]),t._v(" 4、案例-一堆零散的数据-获取stream流")]),t._v(" "),r("p",[t._v("​\t使用Stream的静态方法 of方法是一个可变参数")]),t._v(" "),r("p",[r("img",{attrs:{src:a(6920),alt:"1673179476824"}})]),t._v(" "),r("p",[r("img",{attrs:{src:a(6921),alt:"1673179545743"}})]),t._v(" "),r("p",[r("img",{attrs:{src:a(6922),alt:"1673179564614"}})]),t._v(" "),r("p",[t._v("​\t没有问题")]),t._v(" "),r("p",[t._v("注意：")]),t._v(" "),r("p",[r("img",{attrs:{src:a(6923),alt:"1673179880676"}})]),t._v(" "),r("p",[t._v("​")]),t._v(" "),r("p",[t._v("​")])])}),[],!1,null,null,null);s.default=e.exports}}]);