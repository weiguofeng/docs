(window.webpackJsonp=window.webpackJsonp||[]).push([[306],{6696:function(t,s,e){t.exports=e.p+"assets/img/1650960952129.6de226e1.png"},6697:function(t,s,e){t.exports=e.p+"assets/img/1650961138157.091a64a6.png"},6698:function(t,s,e){t.exports=e.p+"assets/img/1650961249950.c3b3402a.png"},6699:function(t,s,e){t.exports=e.p+"assets/img/1650961865515.85a0b44c.png"},6700:function(t,s,e){t.exports=e.p+"assets/img/1650961921502.3c1f7506.png"},6701:function(t,s,e){t.exports=e.p+"assets/img/1650962007082.6144c813.png"},6702:function(t,s,e){t.exports=e.p+"assets/img/1650962528206.41779efe.png"},6703:function(t,s,e){t.exports=e.p+"assets/img/1650962859752.0cb0cd68.png"},6704:function(t,s,e){t.exports=e.p+"assets/img/1650963123123.185ef5d6.png"},6705:function(t,s,e){t.exports=e.p+"assets/img/1650963339242.83e0b524.png"},8871:function(t,s,e){"use strict";e.r(s);var p=e(5),a=Object(p.a)({},(function(){var t=this,s=t.$createElement,p=t._self._c||s;return p("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[p("h1",{attrs:{id:"_26-k8s核心实战-工作负载-deployment滚动更新能力"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#_26-k8s核心实战-工作负载-deployment滚动更新能力"}},[t._v("#")]),t._v(" 26.k8s核心实战-工作负载-deployment滚动更新能力")]),t._v(" "),p("div",{staticClass:"language- extra-class"},[p("pre",[p("code",[t._v("#### 滚动更新\n")])])]),p("p",[t._v("​\t 什么是滚动更新？")]),t._v(" "),p("p",[t._v("​\t    假设我们k8s集群 deployment部署了一个应用3个副本，这个为应用的v1版本，然后我们这个应用想升级，升级到V2版本，我们如何升级？ 而且升级的过程中不断有流量请求涌入，我们现在想要更新还需要不间断流量的处理过程，那我们需要怎么做呢？")]),t._v(" "),p("p",[t._v("​\t我们想升级V2版本，我们可以先启动一个V2版本的Pod，等我们这个Pod一切运行成功了，我们接下来就把这台机器的v1版本的Pod进行下线")]),t._v(" "),p("p",[p("img",{attrs:{src:e(6696),alt:"1650960952129"}})]),t._v(" "),p("p",[t._v("​\t这个过程是先让deployment将流量转到 新升级的Pod上，再下线旧版的Pod，其实现在是我们deployment部署的应用是有2种版本并存的")]),t._v(" "),p("p",[p("img",{attrs:{src:e(6697),alt:"1650961138157"}})]),t._v(" "),p("p",[t._v("​\t滚动更新就是，我们下一个Pod也是一样，先启动一个新的Pod等待启动完成运行后，再把旧的版本下线，最终将最新版本完全上线")]),t._v(" "),p("p",[p("img",{attrs:{src:e(6698),alt:"1650961249950"}})]),t._v(" "),p("p",[t._v("​\t滚动更新：全程无需停机维护，我们把这个也称为不停机更新，而且是滚动更新一个更新完成才可以进行下一个更新。")]),t._v(" "),p("p",[t._v("​\t如果我们像以前一样将所有的旧版全部下线，将新版全部上线，这样就会导致如果新版有问题那么整个请求过来的都会有问题，而且会发生停机，如果新版本上线有问题，那么新版本将一直尝试自愈，如果不能自愈也不会进行继续副本的创建，我们还是可以使用旧版的正常进行工作")]),t._v(" "),p("h4",{attrs:{id:"滚动更新操作"}},[p("a",{staticClass:"header-anchor",attrs:{href:"#滚动更新操作"}},[t._v("#")]),t._v(" 滚动更新操作")]),t._v(" "),p("p",[t._v("​\t\t更新应用其实在k8s中就相当于更新镜像")]),t._v(" "),p("p",[t._v("​")]),t._v(" "),p("div",{staticClass:"language- line-numbers-mode"},[p("pre",{pre:!0,attrs:{class:"language-text"}},[p("code",[t._v("kubectl set image deployment/my-dep nginx=nginx:1.16.1 --record\nkubectl rollout status deployment/my-dep\n\n")])]),t._v(" "),p("div",{staticClass:"line-numbers-wrapper"},[p("span",{staticClass:"line-number"},[t._v("1")]),p("br"),p("span",{staticClass:"line-number"},[t._v("2")]),p("br"),p("span",{staticClass:"line-number"},[t._v("3")]),p("br")])]),p("p",[t._v("​\t\t我们现在查看一下我们部署的my-dep使用的是那个镜像，我们以-oyaml 参数就是以yaml的方式输出一下")]),t._v(" "),p("p",[p("img",{attrs:{src:e(6699),alt:"1650961865515"}})]),t._v(" "),p("p",[p("img",{attrs:{src:e(6700),alt:"1650961921502"}})]),t._v(" "),p("p",[t._v("​\t如果我们想要给他滚动升级")]),t._v(" "),p("p",[t._v("​\t我们先监视一下之前的pod ，kubectl get pod -w")]),t._v(" "),p("p",[p("img",{attrs:{src:e(6701),alt:"1650962007082"}})]),t._v(" "),p("p",[t._v("​\t我们现在更新一下镜像，set image 设置镜像 name是容器的名称，deploye/my-dep相当于我们要修改部署的my-dep这个部署镜像，然后我们每次更新版本最好加上 --record,record会记录下这次版本的更新")]),t._v(" "),p("p",[p("img",{attrs:{src:e(6702),alt:"1650962528206"}})]),t._v(" "),p("p",[t._v("​\t现在我们看一下监控的pod情况")]),t._v(" "),p("p",[t._v("​\t我们发现给我们新建了一个mmqqf的pod，我们旧的Pod还都存在")]),t._v(" "),p("p",[p("img",{attrs:{src:e(6703),alt:"1650962859752"}})]),t._v(" "),p("p",[t._v("​\t当这个新的Pod，running之后我们看一下变化")]),t._v(" "),p("p",[t._v("​\t我们可以看到等我们新的Pod启动成功后，就会中断掉旧的hz2xf这个Pod，整个过程就是起一个中断下线一个，这么滚动的进行的版本更新")]),t._v(" "),p("p",[p("img",{attrs:{src:e(6704),alt:"1650963123123"}})]),t._v(" "),p("p",[t._v("最后我们发现Pod最终还是3个，但是全是最新的版本Pod，名字都发生了改变，旧的全部下线了")]),t._v(" "),p("p",[p("img",{attrs:{src:e(6705),alt:"1650963339242"}})]),t._v(" "),p("p",[t._v("使用它我们就可以实现不停机更新，我们以后想要升级版本，只需要一个命令就可以搞定了")]),t._v(" "),p("div",{staticClass:"language- line-numbers-mode"},[p("pre",{pre:!0,attrs:{class:"language-text"}},[p("code",[t._v("# 修改 kubectl edit deployment/my-dep\n")])]),t._v(" "),p("div",{staticClass:"line-numbers-wrapper"},[p("span",{staticClass:"line-number"},[t._v("1")]),p("br")])]),p("p",[t._v("https://www.bilibili.com/video/BV13Q4y1C7hS?p=51&spm_id_from=pageDriver")]),t._v(" "),p("p",[t._v("​")])])}),[],!1,null,null,null);s.default=a.exports}}]);