(window.webpackJsonp=window.webpackJsonp||[]).push([[369],{7441:function(t,s,a){t.exports=a.p+"assets/img/1644995344534.8d39a8d2.png"},7442:function(t,s,a){t.exports=a.p+"assets/img/1644995417933.1c9bc4bc.png"},7443:function(t,s,a){t.exports=a.p+"assets/img/1644995700097.7caca0d4.png"},7444:function(t,s,a){t.exports=a.p+"assets/img/1644995904937.8f9f70fb.png"},7445:function(t,s,a){t.exports=a.p+"assets/img/1644996167897.ca5ca6f5.png"},7446:function(t,s,a){t.exports=a.p+"assets/img/1644996183953.3ef2d8a4.png"},7447:function(t,s,a){t.exports=a.p+"assets/img/1644996239310.2ca2d0f3.png"},7448:function(t,s,a){t.exports=a.p+"assets/img/1644996266292.05a8b4a6.png"},8933:function(t,s,a){"use strict";a.r(s);var e=a(5),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_15-容器化-进阶-统计访问人数场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_15-容器化-进阶-统计访问人数场景"}},[t._v("#")]),t._v(" 15.容器化-进阶-统计访问人数场景")]),t._v(" "),e("h2",{attrs:{id:"_1-redis的客户端工具常规操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-redis的客户端工具常规操作"}},[t._v("#")]),t._v(" 1.redis的客户端工具常规操作")]),t._v(" "),e("p",[t._v("​\t我们可以使用客户端工具添加一些redis的值")]),t._v(" "),e("p",[e("img",{attrs:{src:a(7441),alt:"1644995344534"}})]),t._v(" "),e("p",[t._v("还可以命令行操作：如get aaa")]),t._v(" "),e("p",[e("img",{attrs:{src:a(7442),alt:"1644995417933"}})]),t._v(" "),e("p",[t._v("那么redis就可以完成我们的k v数据库的存储功能")]),t._v(" "),e("h2",{attrs:{id:"_2-写一个控制器来模拟访问人数的场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-写一个控制器来模拟访问人数的场景"}},[t._v("#")]),t._v(" 2.写一个控制器来模拟访问人数的场景")]),t._v(" "),e("p",[t._v("​\t这个代码就可以实现了，这样是如果我们使用一个单机的应用是没有问题的，如果我们是集群的方式就不好使了")]),t._v(" "),e("p",[e("img",{attrs:{src:a(7443),alt:"1644995700097"}})]),t._v(" "),e("p",[t._v("​\t我们存放到redis中的操作")]),t._v(" "),e("p",[t._v("​\t先配置一下redis的主机地址和密码")]),t._v(" "),e("p",[e("img",{attrs:{src:a(7444),alt:"1644995904937"}})]),t._v(" "),e("p",[t._v("​\t然后我们就可以使用redisTemplate来进行对redis数据的操作了")]),t._v(" "),e("p",[t._v("​\tredisTemplate的方法opsForValue是可以操作一个KV，然后我们操作那个key就会使用到increment这个方法，在这个方法里放入需要操作的key，这样每次都会对这个key的value进行加1操作")]),t._v(" "),e("p",[e("img",{attrs:{src:a(7445),alt:"1644996167897"}})]),t._v(" "),e("p",[e("img",{attrs:{src:a(7446),alt:"1644996183953"}})]),t._v(" "),e("p",[t._v("然后启动测试一下：")]),t._v(" "),e("p",[e("img",{attrs:{src:a(7447),alt:"1644996239310"}})]),t._v(" "),e("p",[t._v("​")]),t._v(" "),e("p",[t._v("一直刷新会一直累计")]),t._v(" "),e("p",[e("img",{attrs:{src:a(7448),alt:"1644996266292"}})]),t._v(" "),e("p",[t._v("如果我们的这个应用停机了，那么别的从节点启动访问还是正确的数据")])])}),[],!1,null,null,null);s.default=r.exports}}]);