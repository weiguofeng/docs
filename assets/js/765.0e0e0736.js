(window.webpackJsonp=window.webpackJsonp||[]).push([[765],{8587:function(s,e,n){"use strict";n.r(e);var t=n(5),a=Object(t.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"过滤器、拦截器和监听器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#过滤器、拦截器和监听器"}},[s._v("#")]),s._v(" 过滤器、拦截器和监听器")]),s._v(" "),n("p",[n("em",[s._v("原文地址：https://zhuanlan.zhihu.com/p/69060111")])]),s._v(" "),n("h2",{attrs:{id:"过滤器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#过滤器"}},[s._v("#")]),s._v(" 过滤器")]),s._v(" "),n("p",[s._v("Servlet中的过滤器Filter是"),n("strong",[s._v("实现了javax.servlet.Filter接口")]),s._v("的服务器端程序，主要的用途是过滤字符编码、做一些业务逻辑判断等。其工作原理是，只要你在web.xml文件配置好要拦截的客户端请求，它都会帮你拦截到请求，此时你就可以对请求或响应(Request、Response)统一设置编码，简化操作；同时还可以进行逻辑判断，如用户是否已经登录、有没有权限访问该页面等等工作，它是随你的web应用启动而启动的，只初始化一次，以后就可以拦截相关的请求，只有当你的web应用停止或重新部署的时候才能销毁。")]),s._v(" "),n("p",[s._v("在javax.servlet.Filter接口中定义了3个方法：")]),s._v(" "),n("p",[s._v("​\t"),n("strong",[s._v("void init(FilterConfig filterConfig) 用于完成过滤器的初始化")])]),s._v(" "),n("p",[s._v("​\t"),n("strong",[s._v("void destroy() 用于过滤器销毁前，完成某些资源的回收")])]),s._v(" "),n("p",[s._v("​\t"),n("strong",[s._v("void doFilter(ServletRequest request, ServletResponse response,FilterChain chain) 实现过滤功能，该方法对每个请求增加额外的处理")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package com.cn.util;  \n \nimport java.io.IOException;  \n \nimport javax.servlet.Filter;  \nimport javax.servlet.FilterChain;  \nimport javax.servlet.FilterConfig;  \nimport javax.servlet.ServletException;  \nimport javax.servlet.ServletRequest;  \nimport javax.servlet.ServletResponse;  \nimport javax.servlet.http.HttpServletRequest;  \nimport javax.servlet.http.HttpServletResponse;  \n \npublic class FilterUtil implements Filter{  \n \n \t@SuppressWarnings("unused")  \n \tprivate FilterConfig filterConfig;  \n \t\n    @Override \n \tpublic void init(FilterConfig filterConfig) throws ServletException {  \n \t\tthis.filterConfig = filterConfig;  \n        System.out.println("过滤器Filter初始化");  \n    }  \n \n \t@Override \n \tpublic void doFilter(ServletRequest request, ServletResponse response,  \n            FilterChain chain) throws IOException, ServletException {  \n \t\t\n        if (!(request instanceof HttpServletRequest) || !(response instanceof HttpServletResponse)) {  \n \t\t\tthrow new ServletException("FilterUtil just supports HTTP requests");  \n        }  \n        HttpServletRequest httpRequest = (HttpServletRequest) request;  \n        HttpServletResponse httpResponse = (HttpServletResponse) response;  \n        httpRequest.setCharacterEncoding(this.filterConfig.getInitParameter("encoding"));  \n        httpResponse.setCharacterEncoding(this.filterConfig.getInitParameter("encoding"));  \n        chain.doFilter(httpRequest, httpResponse);  \n    }  \n \n \t@Override \n \tpublic void destroy() {  \n        System.out.println("过滤器Filter销毁");  \n    }  \n \n}  \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br")])]),n("p",[s._v("web.xml配置")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<filter> \n  <filter-name>encodingFilter</filter-name> \n  \x3c!-- <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class> --\x3e \n  <filter-class>com.cn.util.FilterUtil</filter-class> \n  <async-supported>true</async-supported> \n  <init-param> \n     <param-name>encoding</param-name> \n     <param-value>UTF-8</param-value> \n  </init-param> \n</filter> \n\n<filter-mapping> \n  <filter-name>encodingFilter</filter-name> \n  <url-pattern>/*</url-pattern> \n</filter-mapping> \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h2",{attrs:{id:"监听器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#监听器"}},[s._v("#")]),s._v(" 监听器")]),s._v(" "),n("p",[s._v("Servlet的监听器Listener，它是实现了javax.servlet.ServletContextListener接口的服务器端程序，它也是随web应用的启动而启动，只初始化一次，随web应用的停止而销毁。主要作用是：做一些初始化的内容添加工作、设置一些基本的内容、比如一些参数或者是一些固定的对象等等。")]),s._v(" "),n("p",[s._v("在javax.servlet.ServletContextListener接口中定义了2种方法：")]),s._v(" "),n("p",[s._v("​\t"),n("strong",[s._v("void contextInitialized(ServletContextEvent sce) 监听器的初始化")])]),s._v(" "),n("p",[s._v("​\t"),n("strong",[s._v("void contextDestroyed(ServletContextEvent sce) 监听器销毁")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package com.cn.util;  \n \nimport javax.servlet.ServletContextEvent;  \nimport javax.servlet.ServletContextListener;  \n \npublic class ServletContextListenerUtil implements ServletContextListener{  \n \n \t//监听器的初始化 \n \t@Override \n \tpublic void contextInitialized(ServletContextEvent sce) {  \n        System.out.println("监听器ServletContextListenerUtil初始化");  \n    }  \n \n \t//监听器销毁 \n \t@Override \n \tpublic void contextDestroyed(ServletContextEvent sce) {  \n        System.out.println("监听器ServletContextListenerUtil销毁");  \n    }  \n}  \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("项目启动时，先启动监听器，再启动过滤器。")]),s._v(" "),n("h2",{attrs:{id:"拦截器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#拦截器"}},[s._v("#")]),s._v(" 拦截器")]),s._v(" "),n("p",[s._v("拦截器是在面向切面编程中应用的，就是在你的service或者一个方法前调用一个方法，或者在方法后调用一个方法比如动态代理就是拦截器的简单实现，在你调用方法前打印出字符串（或者做其它业务逻辑的操作），也可以在你调用方法后打印出字符串，甚至在你抛出异常的时候做业务逻辑的操作。拦截器不是在web.xml配置的，比如struts在struts.xml配置，在springMVC在**"),n("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//lib.csdn.net/base/javaee",target:"_blank",rel:"noopener noreferrer"}},[s._v("spring"),n("OutboundLink")],1),s._v("**与springMVC整合的配置文件中配置。")]),s._v(" "),n("p",[s._v("在springmvc中，定义拦截器要"),n("strong",[s._v("实现HandlerInterceptor接口")]),s._v("，并实现该接口中提供的三个方法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package com.cn.util;  \nimport javax.servlet.http.HttpServletRequest;  \nimport javax.servlet.http.HttpServletResponse;  \nimport org.springframework.web.servlet.HandlerInterceptor;  \nimport org.springframework.web.servlet.ModelAndView;  \n \npublic class InterceptorUtil implements HandlerInterceptor{  \n \n \t//进入Handler方法之前执行 \n \t//可以用于身份认证、身份授权。如果认证没有通过表示用户没有登陆，需要此方法拦截不再往下执行，否则就放行 \n \t@Override \n \tpublic boolean preHandle(HttpServletRequest request,  \n            HttpServletResponse response, Object handler) throws Exception {  \n\n        System.out.println("InterceptorUtil...........preHandle");  \n        String user= (String) request.getSession().getAttribute("user");  \n \t\tif(user != null){  \n \t\t\treturn true;  \n        }  \n        request.getRequestDispatcher("/WEB-INF/jsp/index.jsp").forward(request, response);  \n \t\t//true表示放行，false表示不放行 \n \t\treturn false;  \n    }  \n \n \t@Override \n \tpublic void postHandle(HttpServletRequest request,  \n            HttpServletResponse response, Object handler,  \n            ModelAndView modelAndView) throws Exception {  \n\n        System.out.println("InterceptorUtil...........postHandle");  \n    }  \n \n \t@Override \n \tpublic void afterCompletion(HttpServletRequest request,  \n            HttpServletResponse response, Object handler, Exception ex) throws Exception {  \n\n        System.out.println("InterceptorUtil...........afterCompletion");  \n    }  \n \n}  \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br")])]),n("p",[s._v("​\t"),n("strong",[s._v("preHandle方法")]),s._v("：进入Handler方法之前执行。可以用于身份认证、身份授权。比如如果认证没有通过表示用户没有登陆，需要此方法拦截不再往下执行（return false），否则就放行（return true）。")]),s._v(" "),n("p",[s._v("​\t"),n("strong",[s._v("postHandle方法")]),s._v("：进入Handler方法之后，返回ModelAndView之前执行。可以看到该方法中有个modelAndView的形参。应用场景：从modelAndView出发：将公用的模型数据（比如菜单导航之类的）在这里传到视图，也可以在这里同一指定视图。")]),s._v(" "),n("p",[s._v("​\t"),n("strong",[s._v("afterCompletion方法")]),s._v("：执行Handler完成之后执行。应用场景：统一异常处理，统一日志处理等。")]),s._v(" "),n("p",[s._v("在springmvc中，拦截器是针对具体的HandlerMapping进行配置的，也就是说如果在某个HandlerMapping中配置拦截，经过该 HandlerMapping映射成功的handler最终使用该拦截器。")]),s._v(" "),n("p",[s._v("spring-mvc.xml配置文件中：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(' \x3c!-- 拦截器配置 --\x3e \n <mvc:interceptors> \n     \x3c!--多个拦截器,顺序执行 --\x3e \n     \x3c!-- 登陆认证拦截器 --\x3e \n     <mvc:interceptor> \n         \x3c!-- /** 表示拦截所有url包括子url路径，/*只拦截根下的url --\x3e \n         <mvc:mapping path="/**"/> \n     \t <bean class="com.cn.util.InterceptorUtil"></bean> \n \t </mvc:interceptor> \n </mvc:interceptors> \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("在网上查询的过滤器和拦截器的区别，基本都是以下一模一样的5行话。\n"),n("strong",[s._v("1、拦截器是基于"),n("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//lib.csdn.net/base/java",target:"_blank",rel:"noopener noreferrer"}},[s._v("Java"),n("OutboundLink")],1),s._v("的反射机制的，而过滤器是基于函数回调")]),s._v(" "),n("strong",[s._v("2、过滤器依赖与servlet容器，而拦截器不依赖与servlet容器")]),s._v(" "),n("strong",[s._v("3、拦截器只能对action请求起作用，而过滤器则可以对几乎所有的请求起作用")]),s._v(" "),n("strong",[s._v("4、拦截器可以访问action上下文、值栈里的对象，而过滤器不能")]),s._v(" "),n("strong",[s._v("5、在action的生命周期中，拦截器可以多次被调用，而过滤器只能在容器初始化时被调用一次")])]),s._v(" "),n("p",[s._v("执行顺序："),n("strong",[s._v("过滤前 - 拦截前 - Action处理 - 拦截后 -过滤后")]),s._v("。个人认为过滤是一个横向的过程，首先把客户端提交的内容进行过滤(例如未登录用户不能访问内部页面的处理)；过滤通过后，拦截器将检查用户提交数据的验证，做一些前期的数据处理，接着把处理后的数据发给对应的Action；Action处理完成返回后，拦截器还可以做其他过程，再向上返回到过滤器的后续操作。")]),s._v(" "),n("p",[n("strong",[s._v("过滤器（Filter）：当你有一堆东西的时候，你只希望选择符合你要求的某一些东西。定义这些要求的工具，就是过滤器。")]),s._v(" "),n("strong",[s._v("拦截器（Interceptor）：在一个流程正在进行的时候，你希望干预它的进展，甚至终止它进行，这是拦截器做的事情。")]),s._v(" "),n("strong",[s._v("监听器（Listener）：当一个事件发生的时候，你希望获得这个事件发生的详细信息，而并不想干预这个事件本身的进程，这就要用到监听器。")])]),s._v(" "),n("p",[s._v("context-param：就是一些需要初始化的配置，放入context-param中，从而被监听器（这里特指org.springframework.web.context.ContextLoaderListener）监听，然后加载；")]),s._v(" "),n("p",[s._v("监听器(listener)：就是对项目起到监听的作用，它能感知到包括request(请求域)，session(会话域)和applicaiton(应用程序)的初始化和属性的变化；")]),s._v(" "),n("p",[s._v("过滤器(filter)：就是对请求起到过滤的作用，它在监听器之后，作用在servlet之前，对请求进行过滤；")]),s._v(" "),n("p",[s._v("servlet：就是对request和response进行处理的容器，它在filter之后执行，servlet其中的一部分就是controller层（标记为servlet_2），还包括渲染视图层(标记为servlet_3)和进入controller之前系统的一些处理部分(servlet_1)，另外我们把servlet开始的时刻标记为servlet_0，servlet结束的时刻标记为servlet_4。")]),s._v(" "),n("p",[s._v("拦截器(interceptor)：就是对请求和返回进行拦截，它作用在servlet的内部，具体来说有三个地方：")]),s._v(" "),n("p",[s._v("1）servlet_1和servlet_2之间，即请求还没有到controller层")]),s._v(" "),n("p",[s._v("2）servlet_2和servlet_3之间，即请求走出controller层次，还没有到渲染时图层")]),s._v(" "),n("p",[s._v("3）servlet_3和servlet_4之间，即结束视图渲染，但是还没有到servlet的结束")]),s._v(" "),n("p",[s._v("它们之间的关系，可以用一张图来表示：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://pic3.zhimg.com/80/v2-a342d09e92346ae26614c6a88c48e5b6_720w.jpg",alt:""}})]),s._v(" "),n("h3",{attrs:{id:"_3-使用原则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用原则"}},[s._v("#")]),s._v(" 3.使用原则")]),s._v(" "),n("p",[s._v("对整个流程清楚之后，然后就是各自的使用，在使用之前应该有一个使用规则，为什么这个说，因为有些功能比如判断用户是否登录，既可以用过滤器，也可以用拦截器，用哪一个才是合理的呢？那么如果有一个原则，使用起来就会更加合理。实际上这个原则是有的：")]),s._v(" "),n("p",[s._v("把整个项目的流程比作一条河，那么监听器的作用就是能够听到河流里的所有声音，过滤器就是能够过滤出其中的鱼，而拦截器则是拦截其中的部分鱼，并且作标记。所以当需要监听到项目中的一些信息，并且不需要对流程做更改时，用监听器；当需要过滤掉其中的部分信息，只留一部分时，就用过滤器；当需要对其流程进行更改，做相关的记录时用拦截器。下面是具体的使用案例")]),s._v(" "),n("p",[s._v("本文涉及到的jsp页面：")]),s._v(" "),n("p",[s._v("index.jsp:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<%@ page language="java" import="com.mycompany.mvc.listener.*" contentType="text/html; charset=UTF-8" \n pageEncoding="UTF-8"%> \n<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> \n<html> \n    <head> \n        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> \n        <title>index.jsp</title> \n    </head> \n    <body> \n        this is index jsp  \n        \x3c!-- 这里应该填入用户名和密码 --\x3e \n        <a href="/myWebApp/system/login">login</a> \n        <br></br> \n        测试servletcontext：  \n        <%  \n        application.setAttribute("app","app");  \n        application.getAttribute("app");  \n        application.removeAttribute("app");  \n        %> \n        <br></br> \n        测试httpsession:  \n        <%  \n        session.setAttribute("app3","app3");  \n        session.getAttribute("app3");  \n        session.removeAttribute("app3");  \n        %> \n        <br></br> \n        测试servletrequest:  \n        <%  \n        request.setAttribute("app3","app3");  \n        request.getAttribute("app3");  \n        request.removeAttribute("app3");  \n        %> \n        <br></br> \n        当前在线人数：  \n        <%=session.getAttribute("peopleOnLine")%> \n        <br></br> \n        HttpSessionBindingListener测试：  \n        <%  \n        session.setAttribute("bean",new myHttpSessionBindingListener());  \n        session.removeAttribute("bean");  \n        %> \n    </body> \n</html> \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br")])]),n("p",[s._v("login.jsp")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%> \n<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %> \n<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> \n<html> \n    <head> \n        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> \n        <title>main.jsp</title> \n    </head> \n\n    <c:set var="ctx" \t\t\tvalue="${pageContext.request.scheme}://${pageContext.request.serverName}:${pageContext.request.serverPort}${pageContext.request.contextPath}" /> \n    <script type="text/javascript" src="${ctx}/plugins/jquery-3.0.0/jquery-3.0.0.js"><\/script> \n    <script type="text/javascript"><\/script> \n\n    <body> \n        This is has login jsp  \n        <a href="/myWebApp/system/view">view</a> \n    </body> \n</html> \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("p",[s._v("view.jsp")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<%@ page language="java" contentType="text/html; charset=UTF-8" \n pageEncoding="UTF-8"%> \n<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"> \n<html> \n    <head> \n        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> \n        <title>view jsp</title> \n    </head> \n    <body> \n    \t用户已经登陆，欢迎来到登陆后系统主界面  \n    </body> \n</html> \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h3",{attrs:{id:"_4-监听器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-监听器"}},[s._v("#")]),s._v(" 4.监听器")]),s._v(" "),n("h4",{attrs:{id:"_4-1-listener具体分为八种-能够监听包括request域-session域-application域的产生-销毁和属性的变化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-listener具体分为八种-能够监听包括request域-session域-application域的产生-销毁和属性的变化"}},[s._v("#")]),s._v(" 4.1 listener具体分为八种，能够监听包括request域，session域，application域的产生，销毁和属性的变化；")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://pic4.zhimg.com/80/v2-4eb5c0aad4aefcb7a833dce33ac2664f_720w.jpg",alt:""}})]),s._v(" "),n("p",[s._v('具体使用，可以看之前转载一篇文章（再次感谢"孤傲苍狼"，他的主页'),n("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//www.cnblogs.com/xdp-gacl/",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://www.cnblogs.com/xdp-gacl/"),n("OutboundLink")],1),s._v("）："),n("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//blog.csdn.net/Jintao_Ma/article/details/51464124",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://blog.csdn.net/Jintao_Ma/article/details/51464124"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("在配置完然后我们在web.xml中诸如下面的配置即可：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<listener> \n    <listener-class> \n        com.mycompany.mvc.listener.myServletContextListener  \n \t</listener-class> \n</listener> \n\n<listener> \n \t<listener-class> \n        com.mycompany.mvc.listener.myServletContextAttributeListener  \n \t</listener-class> \n</listener> \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h4",{attrs:{id:"_4-2-listener实际应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-listener实际应用"}},[s._v("#")]),s._v(" 4.2 listener实际应用")]),s._v(" "),n("h5",{attrs:{id:"_4-2-1-获取当前在线人数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-获取当前在线人数"}},[s._v("#")]),s._v(" 4.2.1 获取当前在线人数")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package com.mycompany.mvc.listener;  \n \nimport javax.servlet.http.HttpSessionEvent;  \nimport javax.servlet.http.HttpSessionListener;  \n \npublic class myHttpSessionListener implements HttpSessionListener{  \n \n public static int peopleOnLine = 0;  \n \n \t@Override \n \tpublic void sessionCreated(HttpSessionEvent arg0) {  \n        System.out.println("myHttpSessionListener.sessionCreated():"+arg0);  \n        peopleOnLine++;  \n        arg0.getSession().setAttribute("peopleOnLine",peopleOnLine);  \n    }  \n \n \t@Override \n \tpublic void sessionDestroyed(HttpSessionEvent arg0) {  \n        System.out.println("myHttpSessionListener.sessionDestroyed():"+arg0);  \n        peopleOnLine--;  \n        arg0.getSession().setAttribute("peopleOnLine",peopleOnLine);  \n    }  \n}  \n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("在页面中就可以获取：")]),s._v(" "),n("ol",[n("li",[s._v("当前在线人数：")]),s._v(" "),n("li",[n("strong",[s._v("<")]),s._v('%=session.getAttribute("peopleOnLine")%'),n("strong",[s._v(">")])])]),s._v(" "),n("p",[s._v("其实也可以获得历史所有在线人数，只需要把历史所有在线人数保存在文件中，然后每次项目启动读取这个文件，当前人数增加时，把历史所有人数也相应增加，项目关闭时，再保存起来。")]),s._v(" "),n("h5",{attrs:{id:"_4-2-2-在系统初始化时-获取项目绝对路径"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-在系统初始化时-获取项目绝对路径"}},[s._v("#")]),s._v(" 4.2.2 在系统初始化时，获取项目绝对路径")]),s._v(" "),n("p",[s._v("如下，获得绝对路径后保存到系统变量System中：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Override \npublic void contextInitialized(ServletContextEvent servletContext) {  \n    System.out.println("myServletContextListener.contextInitialized()");  \n    System.setProperty("realPath", servletContext.getServletContext().getRealPath("/"));  \n    System.out.println("myServletContextListener.contextInitialized()");  \n}  \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"_5-过滤器-filter"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-过滤器-filter"}},[s._v("#")]),s._v(" 5.过滤器(filter)")]),s._v(" "),n("h4",{attrs:{id:"_5-1-过滤器只需要继承javax-servlet-filter即可-一般来说我们只要添加tomcat运行时环境就能够包含javax-servlet的jar包-但是eclipse在tomcat8中没有找到-实际上tomcat8中确实没有-只有通过maven来添加了"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-过滤器只需要继承javax-servlet-filter即可-一般来说我们只要添加tomcat运行时环境就能够包含javax-servlet的jar包-但是eclipse在tomcat8中没有找到-实际上tomcat8中确实没有-只有通过maven来添加了"}},[s._v("#")]),s._v(" 5.1  过滤器只需要继承javax.servlet.filter即可，一般来说我们只要添加tomcat运行时环境就能够包含javax.servlet的jar包，但是eclipse在tomcat8中没有找到，实际上tomcat8中确实没有，只有通过maven来添加了：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" \x3c!-- https://mvnrepository.com/artifact/javax.servlet/servlet-api --\x3e \n <dependency> \n \t<groupId>javax.servlet</groupId> \n \t<artifactId>servlet-api</artifactId> \n \t<version>2.5</version> \n </dependency> \n \n \x3c!-- https://mvnrepository.com/artifact/javax.servlet/jsp-api --\x3e \n <dependency> \n \t<groupId>javax.servlet</groupId> \n \t<artifactId>jsp-api</artifactId> \n \t<version>2.0</version> \n </dependency> \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h4",{attrs:{id:"_5-2-filter的实际应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-filter的实际应用"}},[s._v("#")]),s._v(" 5.2 filter的实际应用")]),s._v(" "),n("h5",{attrs:{id:"_5-2-1-请求编码转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1-请求编码转换"}},[s._v("#")]),s._v(" 5.2.1 请求编码转换")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package com.mycompany.mvc.filter;  \n \nimport java.io.IOException;  \nimport java.util.HashMap;  \nimport java.util.Map;  \n \nimport javax.servlet.Filter;  \nimport javax.servlet.FilterChain;  \nimport javax.servlet.FilterConfig;  \nimport javax.servlet.ServletException;  \nimport javax.servlet.ServletRequest;  \nimport javax.servlet.ServletResponse;  \n \nimport org.slf4j.Logger;  \nimport org.slf4j.LoggerFactory;  \n \npublic class urlEncodeFilter implements Filter{  \n \n    Logger logger = LoggerFactory.getLogger(urlEncodeFilter.class);  \n    Map<String,Object> paramMap = new HashMap<String,Object>();   \n \n \t@Override \n \tpublic void destroy() {  \n    }  \n \n \t@Override \n \tpublic void doFilter(ServletRequest arg0, ServletResponse arg1,  \n            FilterChain arg2) throws IOException, ServletException { \n        \n        System.out.println("urlEncodeFilter doFilter..."+paramMap.get("urlEncode").toString());  \n        arg0.setCharacterEncoding(paramMap.get("urlEncode").toString());  \n        arg2.doFilter(arg0, arg1);  \n    }  \n \n \t@Override \n \tpublic void init(FilterConfig arg0) throws ServletException {  \n        \n        String urlEncode = arg0.getInitParameter("urlEncode");  \n        paramMap.put("urlEncode",urlEncode);  \n    }  \n \n}  \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br")])]),n("p",[s._v("web.xml")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(" <filter> \n     <filter-name>urlEncodeFilter</filter-name> \n     <filter-class>com.mycompany.mvc.filter.urlEncodeFilter</filter-class> \n     <init-param> \n         <param-name>urlEncode</param-name> \n         <param-value>UTF-8</param-value> \n \t </init-param> \n </filter>\n\n <filter-mapping> \n \t<filter-name>urlEncodeFilter</filter-name> \n \t<url-pattern>/*</url-pattern> \n </filter-mapping> \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h5",{attrs:{id:"_5-2-2-日志记录-比如记录所有对网站发起请求的地址"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2-日志记录-比如记录所有对网站发起请求的地址"}},[s._v("#")]),s._v(" 5.2.2 日志记录，比如记录所有对网站发起请求的地址")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package com.mycompany.mvc.filter;  \n \nimport java.io.IOException;  \n \nimport javax.servlet.Filter;  \nimport javax.servlet.FilterChain;  \nimport javax.servlet.FilterConfig;  \nimport javax.servlet.ServletException;  \nimport javax.servlet.ServletRequest;  \nimport javax.servlet.ServletResponse;  \nimport javax.servlet.http.HttpServletRequest;  \n \nimport org.slf4j.Logger;  \nimport org.slf4j.LoggerFactory;  \n \npublic class logFilter implements Filter{  \n \n    Logger logger = LoggerFactory.getLogger(logFilter.class);  \n \n \t@Override \n \tpublic void destroy() {  \n \n    }  \n \n \t@Override \n \tpublic void doFilter(ServletRequest arg0, ServletResponse arg1,  \n            FilterChain arg2) throws IOException, ServletException {  \n        \n        HttpServletRequest request = (HttpServletRequest)arg0;  \n        System.out.println("logFilter doFilter servletPath:"+request.getRemoteHost());  \n        arg2.doFilter(arg0, arg1);  \n    }  \n \n \t@Override \n \tpublic void init(FilterConfig arg0) throws ServletException {  \n    }  \n}  \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br")])]),n("p",[s._v("web.xml")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<filter> \n  <filter-name>logFilter</filter-name> \n  <filter-class>com.mycompany.mvc.filter.logFilter</filter-class> \n</filter> \n \n<filter-mapping> \n  <filter-name>logFilter</filter-name> \n  <url-pattern>/*</url-pattern> \n</filter-mapping> \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h5",{attrs:{id:"_5-2-3-对未登陆用户的判断"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-3-对未登陆用户的判断"}},[s._v("#")]),s._v(" 5.2.3 对未登陆用户的判断")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package com.mycompany.mvc.filter;  \n \nimport java.io.IOException;  \n \nimport javax.servlet.Filter;  \nimport javax.servlet.FilterChain;  \nimport javax.servlet.FilterConfig;  \nimport javax.servlet.ServletException;  \nimport javax.servlet.ServletRequest;  \nimport javax.servlet.ServletResponse;  \nimport javax.servlet.http.HttpServletRequest;  \nimport javax.servlet.http.HttpSession;  \n \nimport org.apache.commons.lang.StringUtils;  \n \nimport com.mycompany.mvc.utils.Constant;  \n \npublic class loginFilter implements Filter{  \n \n private String dispatchUrl = "";  \n private String excludeUrl = "";  \n \n     @Override \n     public void destroy() {  \n \n    }  \n \n     @Override \n     public void doFilter(ServletRequest arg0, ServletResponse arg1, FilterChain arg2)  \n throws IOException, ServletException {  \n        \n        HttpServletRequest request = (HttpServletRequest)arg0;  \n        String servletPath = request.getServletPath();  \n \n        HttpSession session = request.getSession();  \n        String sessionKey = (String) session.getAttribute(Constant.SESSIONKEY);  \n \n         /*就是登陆界面不进行过滤*/ \n         if(servletPath.equals(dispatchUrl) || servletPath.equals(excludeUrl)){  \n            arg2.doFilter(arg0, arg1);  \n        }else{  \n \t\t\tif(!StringUtils.isEmpty(sessionKey)){  \n                arg2.doFilter(arg0, arg1);  \n            }else{  \n                request.getRequestDispatcher(dispatchUrl).forward(arg0, arg1);  \n            }  \n        }  \n    }  \n \n \t@Override \n \tpublic void init(FilterConfig arg0) throws ServletException {  \n        dispatchUrl = arg0.getInitParameter("dispatchUrl");  \n        excludeUrl = arg0.getInitParameter("excludeUrl");  \n    }  \n \n}  \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br")])]),n("p",[s._v("web.xml")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<filter> \n   <filter-name>loginFilter</filter-name> \n   <filter-class>com.mycompany.mvc.filter.loginFilter</filter-class> \n   <init-param> \n\t  \x3c!--         不进行过滤的url，因为它就是跳转到登陆界面, --\x3e \n      <param-name>excludeUrl</param-name> \n      <param-value>/main</param-value> \n   </init-param> \n   <init-param> \n      \x3c!--         未登录用户跳转的url --\x3e \n      <param-name>dispatchUrl</param-name> \n      <param-value>/system/login</param-value> \n   </init-param> \n</filter> \n\n<filter-mapping> \n   <filter-name>loginFilter</filter-name> \n   <url-pattern>/*</url-pattern> \n</filter-mapping> \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("之所以上面的/main能够直接跳转到index这个登陆界面，是因为SpringMvc中配置了这个（上篇文章有讲述到）：")]),s._v(" "),n("p",[s._v('<mvc:view-controller path="${adminPath}" view-name="index"/>')]),s._v(" "),n("p",[s._v("它的意思就是不经过controller层，直接把index放入ModelAndView，然后由渲染层进行渲染。 讲到这里，再结合上面说到的拦截器，我们发现，这个时候拦截器还是能够拦截2次的，就是视图渲染前和渲染后，但是进入controller层之前肯定拦截不到了，因为请求根本就没有进入controller。")]),s._v(" "),n("p",[s._v("systemAction:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package com.mycompany.system.controller;  \n \nimport javax.servlet.http.HttpServletRequest;  \nimport javax.servlet.http.HttpSession;  \n \nimport org.springframework.stereotype.Controller;  \nimport org.springframework.web.bind.annotation.RequestMapping;  \nimport org.springframework.web.servlet.ModelAndView;  \n \n@Controller \n@RequestMapping("/system")  \npublic class systemAction {  \n \n \t@RequestMapping("/login")  \n \tpublic ModelAndView login(HttpServletRequest request){  \n        \n        ModelAndView mv = new ModelAndView();  \n        HttpSession session = request.getSession();  \n \t\t/*假设用户输入的用户名密码正确，则放入sessionKey中，对应的value可以 \n         * 是User对象，这里以字符串"test"代替*/ \n        session.setAttribute("sessionKey","test");  \n        mv.setViewName("login");  \n \t\treturn mv;  \n    }  \n \n \t@RequestMapping("/view")  \n \tpublic ModelAndView view(HttpServletRequest request){  \n        \n        ModelAndView mv = new ModelAndView();  \n        mv.setViewName("view");  \n \t\treturn mv;  \n    }  \n \n}  \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("p",[s._v("Constant.java")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package com.mycompany.mvc.utils;  \n \npublic class Constant {  \n \n \tpublic static final String SESSIONKEY = "sessionKey";  \n\n}  \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"_6-拦截器-interceptor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-拦截器-interceptor"}},[s._v("#")]),s._v(" "),n("strong",[s._v("6.拦截器(interceptor)")])]),s._v(" "),n("p",[s._v("6.1  拦截器这个要详细讲述一下了，上一篇文章说到，Spring的配置文件应该扫描service层及以下，SpringMvc的配置文件应该扫描controller层； 我们在service层如果想做日志的话，可以使用spring aop特性，在spring.xml中配置aspect即可，那么如果想在controller层做日志，相应地，在SpringMvc.xml中应该怎么配置呢？")]),s._v(" "),n("p",[s._v("这个时候就需要拦截器，它其实也是一种aop的实现(aop本身是一种思想)，而且这种实现本质上和aspect是一样的，只是做了更多的事情，我们当然可以在SpringMvc.xml中也配置aspect，不过现在有一个更好的实现，为什么不用呢。")]),s._v(" "),n("p",[s._v("关于拦截器细节，可以参考这篇文章："),n("a",{attrs:{href:"https://link.zhihu.com/?target=http%3A//elim.iteye.com/blog/1750680",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://elim.iteye.com/blog/1750680"),n("OutboundLink")],1)]),s._v(" "),n("h4",{attrs:{id:"_6-2-拦截器的实际应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-拦截器的实际应用"}},[s._v("#")]),s._v(" 6.2 拦截器的实际应用")]),s._v(" "),n("h5",{attrs:{id:"_6-2-1-可以全局做日志"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-1-可以全局做日志"}},[s._v("#")]),s._v(" 6.2.1 可以全局做日志")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package com.mycompany.mvc.interceptor;  \n \nimport java.lang.reflect.Method;  \n \nimport javax.servlet.http.HttpServletRequest;  \nimport javax.servlet.http.HttpServletResponse;  \n \nimport org.springframework.web.method.HandlerMethod;  \nimport org.springframework.web.servlet.HandlerInterceptor;  \nimport org.springframework.web.servlet.ModelAndView;  \n/**@Description \n * logInterceptor公共拦截器，做日志记录 \n */ \npublic class logInterceptor implements HandlerInterceptor{  \n \n \t@Override \n \tpublic void afterCompletion(HttpServletRequest arg0, HttpServletResponse arg1, Object arg2, Exception \targ3) throws Exception {  \n /*做一些清理工作*/ \n    }  \n \n \t@Override \n \tpublic void postHandle(HttpServletRequest arg0, HttpServletResponse arg1, Object arg2, ModelAndView arg3) throws Exception {  \n        System.out.println("logInterceptor.postHandle()---view Name:"+arg3.getViewName());  \n    }  \n \n \t@Override \n \tpublic boolean preHandle(HttpServletRequest arg0, HttpServletResponse arg1, Object arg2) throws Exception {  \n         /*取得调用的controller方法等*/ \n         if(arg2 instanceof HandlerMethod){  \n            HandlerMethod hMethod = (HandlerMethod)arg2;  \n            Method method = hMethod.getMethod();  \n            System.out.println("logInterceptor.preHandle()--method Name:"+method.getName());  \n        }  \n \t\treturn true;  \n    }  \n}  \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br")])]),n("h5",{attrs:{id:"_6-2-2-记录部分调用的时间"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-2-记录部分调用的时间"}},[s._v("#")]),s._v(" 6.2.2 记录部分调用的时间")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package com.mycompany.mvc.interceptor;  \n \nimport javax.servlet.http.HttpServletRequest;  \nimport javax.servlet.http.HttpServletResponse;  \n \nimport org.springframework.web.servlet.HandlerInterceptor;  \nimport org.springframework.web.servlet.ModelAndView;  \n/**@Description \n * 登陆时间拦截器，记录用户登录时间 \n * */ \npublic class timeInterceptor implements HandlerInterceptor{  \n \n \t@Override \n \tpublic boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)  \n throws Exception {  \n \t\treturn true;  \n    }  \n \n \t@Override \n \tpublic void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,  \n            ModelAndView modelAndView) throws Exception {  \n        System.out.println("timeInterceptor.postHandle()--time:"+System.currentTimeMillis());  \n    }  \n \n \t@Override \n \tpublic void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {  \n    }  \n}  \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("p",[s._v("springMvc.xml")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('\x3c!--     拦截器配置 --\x3e \n<mvc:interceptors> \n  <bean class="com.mycompany.mvc.interceptor.logInterceptor"></bean> \n  <mvc:interceptor> \n      <mvc:mapping path="/system/view"/> \n      <bean class="com.mycompany.mvc.interceptor.timeInterceptor"></bean> \n  </mvc:interceptor> \n</mvc:interceptors> \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])])])}),[],!1,null,null,null);e.default=a.exports}}]);