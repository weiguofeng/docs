(window.webpackJsonp=window.webpackJsonp||[]).push([[498],{5780:function(s,t,e){s.exports=e.p+"assets/img/1648305187005.c80a86fd.png"},5781:function(s,t,e){s.exports=e.p+"assets/img/1648305456883.6e80695a.png"},5782:function(s,t,e){s.exports=e.p+"assets/img/1648305515280.eedd4dbb.png"},5783:function(s,t,e){s.exports=e.p+"assets/img/1648305711100.6f34e419.png"},5784:function(s,t,e){s.exports=e.p+"assets/img/1648305822757.c14f0071.png"},9417:function(s,t,e){"use strict";e.r(t);var a=e(5),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"_3-mosh-转义序列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-mosh-转义序列"}},[s._v("#")]),s._v(" 3.mosh-转义序列")]),s._v(" "),a("h2",{attrs:{id:"escape-sequences-转义序列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#escape-sequences-转义序列"}},[s._v("#")]),s._v(" Escape Sequences--转义序列")]),s._v(" "),a("p",[s._v("​\t有时我们的字符串会包括特别的字符，像制表符，换行符，反斜杠，现在我们处理如何正常展示这些字符的问题")]),s._v(" "),a("p",[s._v('比如我们现在想让Mosh这个字符串 显示为"Mosh",如果我们直接添加引号的话，编译器是会报错的，它认为已经有引号了，它不理解你的含义，这就是为什么会有编译错误的问题了')]),s._v(" "),a("p",[a("img",{attrs:{src:e(5780),alt:"1648305187005"}})]),s._v(" "),a("p",[s._v("要处理这个问题 我们在引号前加 反斜杠，使用这个反斜杠我们就可以让编译器明白我们这个属于内部的符合表示")]),s._v(" "),a("p",[a("img",{attrs:{src:e(5781),alt:"1648305456883"}})]),s._v(" "),a("p",[a("img",{attrs:{src:e(5782),alt:"1648305515280"}})]),s._v(" "),a("p",[s._v("如果我们想在字符串显示\\反斜杠，那么就需要双层转义一下 一个\\反斜杠用俩个来表示")]),s._v(" "),a("p",[a("img",{attrs:{src:e(5783),alt:"1648305711100"}})]),s._v(" "),a("p",[s._v("如果我们想显示\\n的话，发现控制台给我们换行 了---都需要加入俩个\\进行转义处理")]),s._v(" "),a("p",[a("img",{attrs:{src:e(5784),alt:"1648305822757"}})])])}),[],!1,null,null,null);t.default=n.exports}}]);