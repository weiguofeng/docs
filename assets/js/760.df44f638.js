(window.webpackJsonp=window.webpackJsonp||[]).push([[760],{8955:function(s,n,t){"use strict";t.r(n);var a=t(5),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"常见安全算法总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见安全算法总结"}},[s._v("#")]),s._v(" 常见安全算法总结")]),s._v(" "),t("p",[s._v("本文主要对消息摘要算法和加密算法做了整理，包括MD5、SHA、DES、AES、RSA等，并且提供了相应算法的Java实现和测试。")]),s._v(" "),t("h1",{attrs:{id:"一-消息摘要算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-消息摘要算法"}},[s._v("#")]),s._v(" 一  消息摘要算法")]),s._v(" "),t("h2",{attrs:{id:"_1-简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[s._v("#")]),s._v(" "),t("strong",[s._v("1. 简介：")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("消息摘要算法的主要特征是加密过程不需要密钥，并且经过加密的数据无法被解密")])]),s._v(" "),t("li",[t("strong",[s._v("只有输入相同的明文数据经过相同的消息摘要算法才能得到相同的密文。")])]),s._v(" "),t("li",[t("strong",[s._v("消息摘要算法主要应用在“数字签名”领域，作为对明文的摘要算法。")])]),s._v(" "),t("li",[t("strong",[s._v("著名的摘要算法有RSA公司的MD5算法和SHA-1算法及其大量的变体")]),s._v("。")])]),s._v(" "),t("h2",{attrs:{id:"_2-特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-特点"}},[s._v("#")]),s._v(" "),t("strong",[s._v("2. 特点：")])]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("无论输入的消息有多长，计算出来的消息摘要的长度总是固定的。")])]),s._v(" "),t("li",[t("strong",[s._v("消息摘要看起来是“伪随机的”。也就是说对相同的信息求摘要结果相同。")])]),s._v(" "),t("li",[t("strong",[s._v("消息轻微改变生成的摘要变化会很大")])]),s._v(" "),t("li",[t("strong",[s._v("只能进行正向的信息摘要，而无法从摘要中恢复出任何的消息，甚至根本就找不到任何与原信息相关的信息")])])]),s._v(" "),t("h2",{attrs:{id:"_3-应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-应用"}},[s._v("#")]),s._v(" "),t("strong",[s._v("3. 应用：")])]),s._v(" "),t("p",[s._v("消息摘要算法最常用的场景就是数字签名以及数据（密码）加密了。(一般平时做项目用的比较多的就是使用MD5对用户密码进行加密)")]),s._v(" "),t("h2",{attrs:{id:"_4-何谓数字签名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-何谓数字签名"}},[s._v("#")]),s._v(" "),t("strong",[s._v("4. 何谓数字签名：")])]),s._v(" "),t("p",[s._v("数字签名主要用到了非对称密钥加密技术与数字摘要技术。数字签名技术是将摘要信息用发送者的私钥加密，与原文一起传送给接收者。接收者只有用发送者的公钥才能解密被加密的摘要信息，然后用HASH函数对收到的原文产生一个摘要信息，与解密的摘要信息对比。\n如果相同，则说明收到的信息是完整的，在传输过程中没有被修改，否则说明信息被修改过.")]),s._v(" "),t("p",[s._v("因此数字签名能够验证信息的完整性。\n数字签名是个加密的过程，数字签名验证是个解密的过程。")]),s._v(" "),t("h2",{attrs:{id:"_5-常见消息-数字摘要算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-常见消息-数字摘要算法"}},[s._v("#")]),s._v(" "),t("strong",[s._v("5. 常见消息/数字摘要算法：")])]),s._v(" "),t("h3",{attrs:{id:"md5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#md5"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"https://baike.baidu.com/item/MD5/212708?fr=aladdin",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[s._v("MD5:")]),t("OutboundLink")],1)]),s._v(" "),t("h4",{attrs:{id:"简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介：")]),s._v(" "),t("p",[s._v('MD5的作用是让大容量信息在用数字签名软件签署私人密钥前被"压缩"成一种保密的格式\n（也就是把一个任意长度的字节串变换成一定长的十六进制数字串）。')]),s._v(" "),t("h4",{attrs:{id:"特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[s._v("#")]),s._v(" 特点：")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("压缩性：")]),s._v(" 任意长度的数据，算出的MD5值长度都是固定的。")]),s._v(" "),t("li",[t("strong",[s._v("容易计算：")]),s._v(" 从原数据计算出MD5值很容易。")]),s._v(" "),t("li",[t("strong",[s._v("抗修改性：")]),s._v(" 对原数据进行任何改动，哪怕只修改1个字节，所得到的MD5值都有很大区别。")]),s._v(" "),t("li",[t("strong",[s._v("强抗碰撞：")]),s._v(" 已知原数据和其MD5值，想找到一个具有相同MD5值的数据（即伪造数据）是非常困难的。")])]),s._v(" "),t("h4",{attrs:{id:"代码实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[s._v("#")]),s._v(" 代码实现：")]),s._v(" "),t("p",[t("strong",[s._v("利用JDK提供java.security.MessageDigest类实现MD5算法：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('package com.snailclimb.ks.securityAlgorithm;\n\nimport java.security.MessageDigest;\n\npublic class MD5Demo {\n\n    // test\n    public static void main(String[] args) {\n        System.out.println(getMD5Code("你若安好，便是晴天"));\n    }\n\n    private MD5Demo() {\n    }\n\n    // md5加密\n    public static String getMD5Code(String message) {\n        String md5Str = "";\n        try {\n        \t//创建MD5算法消息摘要\n            MessageDigest md = MessageDigest.getInstance("MD5");\n            //生成的哈希值的字节数组\n            byte[] md5Bytes = md.digest(message.getBytes());\n            md5Str = bytes2Hex(md5Bytes);\n        }catch(Exception e) {\n            e.printStackTrace();\n        }\n        return md5Str;\n    }\n\n    // 2进制转16进制\n    public static String bytes2Hex(byte[] bytes) {\n        StringBuffer result = new StringBuffer();\n        int temp;\n        try {\n            for (int i = 0; i < bytes.length; i++) {\n                temp = bytes[i];\n                if(temp < 0) {\n                    temp += 256;\n                }\n                if (temp < 16) {\n                    result.append("0");\n                }\n                result.append(Integer.toHexString(temp));\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return result.toString();\n    }\n}\n\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br")])]),t("p",[t("strong",[s._v("结果：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("6bab82679914f7cb480a120b532ffa80\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("strong",[s._v("注意MessageDigest类的几个方法：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("static MessageDigest getInstance(String algorithm)//返回实现指定摘要算法的MessageDigest对象\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("byte[] digest(byte[] input)//使用指定的字节数组对摘要执行最终更新，然后完成摘要计算。 \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"不利用java提供的java-security-messagedigest类实现md5算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不利用java提供的java-security-messagedigest类实现md5算法"}},[s._v("#")]),s._v(" 不利用Java提供的java.security.MessageDigest类实现MD5算法：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('package com.snailclimb.ks.securityAlgorithm;\n\npublic class MD5{\n    /*\n    *四个链接变量\n    */\n    private final int A=0x67452301;\n    private final int B=0xefcdab89;\n    private final int C=0x98badcfe;\n    private final int D=0x10325476;\n    /*\n    *ABCD的临时变量\n    */\n    private int Atemp,Btemp,Ctemp,Dtemp;\n     \n    /*\n    *常量ti\n    *公式:floor(abs(sin(i+1))×(2pow32)\n    */\n    private final int K[]={\n        0xd76aa478,0xe8c7b756,0x242070db,0xc1bdceee,\n        0xf57c0faf,0x4787c62a,0xa8304613,0xfd469501,0x698098d8,\n        0x8b44f7af,0xffff5bb1,0x895cd7be,0x6b901122,0xfd987193,\n        0xa679438e,0x49b40821,0xf61e2562,0xc040b340,0x265e5a51,\n        0xe9b6c7aa,0xd62f105d,0x02441453,0xd8a1e681,0xe7d3fbc8,\n        0x21e1cde6,0xc33707d6,0xf4d50d87,0x455a14ed,0xa9e3e905,\n        0xfcefa3f8,0x676f02d9,0x8d2a4c8a,0xfffa3942,0x8771f681,\n        0x6d9d6122,0xfde5380c,0xa4beea44,0x4bdecfa9,0xf6bb4b60,\n        0xbebfbc70,0x289b7ec6,0xeaa127fa,0xd4ef3085,0x04881d05,\n        0xd9d4d039,0xe6db99e5,0x1fa27cf8,0xc4ac5665,0xf4292244,\n        0x432aff97,0xab9423a7,0xfc93a039,0x655b59c3,0x8f0ccc92,\n        0xffeff47d,0x85845dd1,0x6fa87e4f,0xfe2ce6e0,0xa3014314,\n        0x4e0811a1,0xf7537e82,0xbd3af235,0x2ad7d2bb,0xeb86d391};\n    /*\n    *向左位移数,计算方法未知\n    */\n    private final int s[]={7,12,17,22,7,12,17,22,7,12,17,22,7,\n        12,17,22,5,9,14,20,5,9,14,20,5,9,14,20,5,9,14,20,\n        4,11,16,23,4,11,16,23,4,11,16,23,4,11,16,23,6,10,\n        15,21,6,10,15,21,6,10,15,21,6,10,15,21};\n     \n     \n    /*\n    *初始化函数\n    */\n    private void init(){\n        Atemp=A;\n        Btemp=B;\n        Ctemp=C;\n        Dtemp=D;\n    }\n    /*\n    *移动一定位数\n    */\n    private    int    shift(int a,int s){\n        return(a<<s)|(a>>>(32-s));//右移的时候，高位一定要补零，而不是补充符号位\n    }\n    /*\n    *主循环\n    */\n    private void MainLoop(int M[]){\n        int F,g;\n        int a=Atemp;\n        int b=Btemp;\n        int c=Ctemp;\n        int d=Dtemp;\n        for(int i = 0; i < 64; i ++){\n            if(i<16){\n                F=(b&c)|((~b)&d);\n                g=i;\n            }else if(i<32){\n                F=(d&b)|((~d)&c);\n                g=(5*i+1)%16;\n            }else if(i<48){\n                F=b^c^d;\n                g=(3*i+5)%16;\n            }else{\n                F=c^(b|(~d));\n                g=(7*i)%16;\n            }\n            int tmp=d;\n            d=c;\n            c=b;\n            b=b+shift(a+F+K[i]+M[g],s[i]);\n            a=tmp;\n        }\n        Atemp=a+Atemp;\n        Btemp=b+Btemp;\n        Ctemp=c+Ctemp;\n        Dtemp=d+Dtemp;\n     \n    }\n    /*\n    *填充函数\n    *处理后应满足bits≡448(mod512),字节就是bytes≡56（mode64)\n    *填充方式为先加一个0,其它位补零\n    *最后加上64位的原来长度\n    */\n    private int[] add(String str){\n        int num=((str.length()+8)/64)+1;//以512位，64个字节为一组\n        int strByte[]=new int[num*16];//64/4=16，所以有16个整数\n        for(int i=0;i<num*16;i++){//全部初始化0\n            strByte[i]=0;\n        }\n        int    i;\n        for(i=0;i<str.length();i++){\n            strByte[i>>2]|=str.charAt(i)<<((i%4)*8);//一个整数存储四个字节，小端序\n        }\n        strByte[i>>2]|=0x80<<((i%4)*8);//尾部添加1\n        /*\n        *添加原长度，长度指位的长度，所以要乘8，然后是小端序，所以放在倒数第二个,这里长度只用了32位\n        */\n        strByte[num*16-2]=str.length()*8;\n            return strByte;\n    }\n    /*\n    *调用函数\n    */\n    public String getMD5(String source){\n        init();\n        int strByte[]=add(source);\n        for(int i=0;i<strByte.length/16;i++){\n        int num[]=new int[16];\n        for(int j=0;j<16;j++){\n            num[j]=strByte[i*16+j];\n        }\n        MainLoop(num);\n        }\n        return changeHex(Atemp)+changeHex(Btemp)+changeHex(Ctemp)+changeHex(Dtemp);\n     \n    }\n    /*\n    *整数变成16进制字符串\n    */\n    private String changeHex(int a){\n        String str="";\n        for(int i=0;i<4;i++){\n            str+=String.format("%2s", Integer.toHexString(((a>>i*8)%(1<<8))&0xff)).replace(\' \', \'0\');\n \n        }\n        return str;\n    }\n    /*\n    *单例\n    */\n    private static MD5 instance;\n    public static MD5 getInstance(){\n        if(instance==null){\n            instance=new MD5();\n        }\n        return instance;\n    }\n     \n    private MD5(){};\n     \n    public static void main(String[] args){\n        String str=MD5.getInstance().getMD5("你若安好，便是晴天");\n        System.out.println(str);\n    }\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br"),t("span",{staticClass:"line-number"},[s._v("85")]),t("br"),t("span",{staticClass:"line-number"},[s._v("86")]),t("br"),t("span",{staticClass:"line-number"},[s._v("87")]),t("br"),t("span",{staticClass:"line-number"},[s._v("88")]),t("br"),t("span",{staticClass:"line-number"},[s._v("89")]),t("br"),t("span",{staticClass:"line-number"},[s._v("90")]),t("br"),t("span",{staticClass:"line-number"},[s._v("91")]),t("br"),t("span",{staticClass:"line-number"},[s._v("92")]),t("br"),t("span",{staticClass:"line-number"},[s._v("93")]),t("br"),t("span",{staticClass:"line-number"},[s._v("94")]),t("br"),t("span",{staticClass:"line-number"},[s._v("95")]),t("br"),t("span",{staticClass:"line-number"},[s._v("96")]),t("br"),t("span",{staticClass:"line-number"},[s._v("97")]),t("br"),t("span",{staticClass:"line-number"},[s._v("98")]),t("br"),t("span",{staticClass:"line-number"},[s._v("99")]),t("br"),t("span",{staticClass:"line-number"},[s._v("100")]),t("br"),t("span",{staticClass:"line-number"},[s._v("101")]),t("br"),t("span",{staticClass:"line-number"},[s._v("102")]),t("br"),t("span",{staticClass:"line-number"},[s._v("103")]),t("br"),t("span",{staticClass:"line-number"},[s._v("104")]),t("br"),t("span",{staticClass:"line-number"},[s._v("105")]),t("br"),t("span",{staticClass:"line-number"},[s._v("106")]),t("br"),t("span",{staticClass:"line-number"},[s._v("107")]),t("br"),t("span",{staticClass:"line-number"},[s._v("108")]),t("br"),t("span",{staticClass:"line-number"},[s._v("109")]),t("br"),t("span",{staticClass:"line-number"},[s._v("110")]),t("br"),t("span",{staticClass:"line-number"},[s._v("111")]),t("br"),t("span",{staticClass:"line-number"},[s._v("112")]),t("br"),t("span",{staticClass:"line-number"},[s._v("113")]),t("br"),t("span",{staticClass:"line-number"},[s._v("114")]),t("br"),t("span",{staticClass:"line-number"},[s._v("115")]),t("br"),t("span",{staticClass:"line-number"},[s._v("116")]),t("br"),t("span",{staticClass:"line-number"},[s._v("117")]),t("br"),t("span",{staticClass:"line-number"},[s._v("118")]),t("br"),t("span",{staticClass:"line-number"},[s._v("119")]),t("br"),t("span",{staticClass:"line-number"},[s._v("120")]),t("br"),t("span",{staticClass:"line-number"},[s._v("121")]),t("br"),t("span",{staticClass:"line-number"},[s._v("122")]),t("br"),t("span",{staticClass:"line-number"},[s._v("123")]),t("br"),t("span",{staticClass:"line-number"},[s._v("124")]),t("br"),t("span",{staticClass:"line-number"},[s._v("125")]),t("br"),t("span",{staticClass:"line-number"},[s._v("126")]),t("br"),t("span",{staticClass:"line-number"},[s._v("127")]),t("br"),t("span",{staticClass:"line-number"},[s._v("128")]),t("br"),t("span",{staticClass:"line-number"},[s._v("129")]),t("br"),t("span",{staticClass:"line-number"},[s._v("130")]),t("br"),t("span",{staticClass:"line-number"},[s._v("131")]),t("br"),t("span",{staticClass:"line-number"},[s._v("132")]),t("br"),t("span",{staticClass:"line-number"},[s._v("133")]),t("br"),t("span",{staticClass:"line-number"},[s._v("134")]),t("br"),t("span",{staticClass:"line-number"},[s._v("135")]),t("br"),t("span",{staticClass:"line-number"},[s._v("136")]),t("br"),t("span",{staticClass:"line-number"},[s._v("137")]),t("br"),t("span",{staticClass:"line-number"},[s._v("138")]),t("br"),t("span",{staticClass:"line-number"},[s._v("139")]),t("br"),t("span",{staticClass:"line-number"},[s._v("140")]),t("br"),t("span",{staticClass:"line-number"},[s._v("141")]),t("br"),t("span",{staticClass:"line-number"},[s._v("142")]),t("br"),t("span",{staticClass:"line-number"},[s._v("143")]),t("br"),t("span",{staticClass:"line-number"},[s._v("144")]),t("br"),t("span",{staticClass:"line-number"},[s._v("145")]),t("br"),t("span",{staticClass:"line-number"},[s._v("146")]),t("br"),t("span",{staticClass:"line-number"},[s._v("147")]),t("br"),t("span",{staticClass:"line-number"},[s._v("148")]),t("br"),t("span",{staticClass:"line-number"},[s._v("149")]),t("br"),t("span",{staticClass:"line-number"},[s._v("150")]),t("br"),t("span",{staticClass:"line-number"},[s._v("151")]),t("br"),t("span",{staticClass:"line-number"},[s._v("152")]),t("br"),t("span",{staticClass:"line-number"},[s._v("153")]),t("br"),t("span",{staticClass:"line-number"},[s._v("154")]),t("br"),t("span",{staticClass:"line-number"},[s._v("155")]),t("br"),t("span",{staticClass:"line-number"},[s._v("156")]),t("br"),t("span",{staticClass:"line-number"},[s._v("157")]),t("br"),t("span",{staticClass:"line-number"},[s._v("158")]),t("br"),t("span",{staticClass:"line-number"},[s._v("159")]),t("br"),t("span",{staticClass:"line-number"},[s._v("160")]),t("br")])]),t("h3",{attrs:{id:"sha1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sha1"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"https://baike.baidu.com/item/MD5/212708?fr=aladdin",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[s._v("SHA1:")]),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("对于长度小于2^64位的消息，SHA1会产生一个160位(40个字符)的消息摘要。当接收到消息的时候，这个消息摘要可以用来验证数据的完整性。在传输的过程中，数据很可能会发生变化，那么这时候就会产生不同的消息摘要。")]),s._v(" "),t("p",[s._v("SHA1有如下特性：")]),s._v(" "),t("ul",[t("li",[s._v("不可以从消息摘要中复原信息；")]),s._v(" "),t("li",[s._v("两个不同的消息不会产生同样的消息摘要,(但会有1x10 ^ 48分之一的机率出现相同的消息摘要,一般使用时忽略)。")])]),s._v(" "),t("h4",{attrs:{id:"代码实现-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码实现-2"}},[s._v("#")]),s._v(" 代码实现：")]),s._v(" "),t("p",[s._v("*"),t("em",[s._v("利用JDK提供java.security.MessageDigest类实现SHA1算法：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("package com.snailclimb.ks.securityAlgorithm;\n\nimport java.io.UnsupportedEncodingException;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\n\npublic class SHA1Demo {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(getSha1(\"你若安好，便是晴天\"));\n\t\n\t}\n\n\tpublic static String getSha1(String str) {\n\t\tif (null == str || 0 == str.length()) {\n\t\t\treturn null;\n\t\t}\n\t\tchar[] hexDigits = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };\n\t\ttry {\n\t\t\t//创建SHA1算法消息摘要对象\n\t\t\tMessageDigest mdTemp = MessageDigest.getInstance(\"SHA1\");\n\t\t\t//使用指定的字节数组更新摘要。\n\t\t\tmdTemp.update(str.getBytes(\"UTF-8\"));\n\t\t\t//生成的哈希值的字节数组\n\t\t\tbyte[] md = mdTemp.digest();\n\t\t\t//SHA1算法生成信息摘要关键过程\n\t\t\tint j = md.length;\n\t\t    char[] buf = new char[j * 2];\n\t\t\tint k = 0;\n\t\t\tfor (int i = 0; i < j; i++) {\n\t\t\t\tbyte byte0 = md[i];\n\t\t\t\tbuf[k++] = hexDigits[byte0 >>> 4 & 0xf];\n\t\t\t\tbuf[k++] = hexDigits[byte0 & 0xf];\n\t\t\t}\n\t\t\treturn new String(buf);\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (UnsupportedEncodingException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn \"0\";\n\t\t\n\t}\n}\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br")])]),t("p",[t("strong",[s._v("结果：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("8ce764110a42da9b08504b20e26b19c9e3382414\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h1",{attrs:{id:"二-加密算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-加密算法"}},[s._v("#")]),s._v(" 二 加密算法")]),s._v(" "),t("h2",{attrs:{id:"_1-简介-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介-2"}},[s._v("#")]),s._v(" "),t("strong",[s._v("1. 简介：")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("加密技术包括两个元素：加密算法和密钥。")])]),s._v(" "),t("li",[t("strong",[s._v("加密算法是将普通的文本（或者可以理解的信息）与一串数字（密钥）的结合，产生不可理解的密文的步骤。")])]),s._v(" "),t("li",[t("strong",[s._v("密钥是用来对数据进行编码和解码的一种算法。")])]),s._v(" "),t("li",[t("strong",[s._v("在安全保密中，可通过适当的密钥加密技术和管理机制来保证网络的信息通讯安全。")])])]),s._v(" "),t("h2",{attrs:{id:"_2-分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-分类"}},[s._v("#")]),s._v(" "),t("strong",[s._v("2. 分类：")])]),s._v(" "),t("p",[t("strong",[s._v("密钥加密技术的密码体制分为对称密钥体制和非对称密钥体制两种。相应地，对数据加密的技术分为两类，即对称加密（私人密钥加密）和非对称加密（公开密钥加密）。")])]),s._v(" "),t("p",[t("strong",[s._v("对称加密以数据加密标准（DES，Data Encryption Standard）算法为典型代表，非对称加密通常以RSA（Rivest Shamir Adleman）算法为代表。")])]),s._v(" "),t("p",[t("strong",[s._v("对称加密的加密密钥和解密密钥相同。非对称加密的加密密钥和解密密钥不同，加密密钥可以公开而解密密钥需要保密")])]),s._v(" "),t("h2",{attrs:{id:"_3-应用-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-应用-2"}},[s._v("#")]),s._v(" "),t("strong",[s._v("3. 应用：")])]),s._v(" "),t("p",[s._v("常被用在电子商务或者其他需要保证网络传输安全的范围。")]),s._v(" "),t("h2",{attrs:{id:"_4-对称加密"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-对称加密"}},[s._v("#")]),s._v(" "),t("strong",[s._v("4. 对称加密：")])]),s._v(" "),t("p",[s._v("加密密钥和解密密钥相同的加密算法。")]),s._v(" "),t("p",[s._v("对称加密算法使用起来简单快捷，密钥较短，且破译困难，除了数据加密标准（DES），\n另一个对称密钥加密系统是国际数据加密算法（IDEA），它比DES的加密性好，而且对计算机功能要求也没有那么高。IDEA加密标准由PGP（Pretty Good Privacy）系统使用。")]),s._v(" "),t("h3",{attrs:{id:"des"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#des"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"https://baike.baidu.com/item/DES",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[s._v("DES:")]),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("DES全称为Data Encryption Standard，即数据加密标准，是一种使用密钥加密的块算法，现在已经过时。")]),s._v(" "),t("h4",{attrs:{id:"代码实现-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码实现-3"}},[s._v("#")]),s._v(" 代码实现：")]),s._v(" "),t("p",[s._v("DES算法实现 ：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('package com.snailclimb.ks.securityAlgorithm;\n\nimport java.io.UnsupportedEncodingException;\nimport java.security.SecureRandom;\nimport javax.crypto.spec.DESKeySpec;\nimport javax.crypto.SecretKeyFactory;\nimport javax.crypto.SecretKey;\nimport javax.crypto.Cipher;\n\n/**\n * DES加密介绍 DES是一种对称加密算法，所谓对称加密算法即：加密和解密使用相同密钥的算法。DES加密算法出自IBM的研究，\n * 后来被美国政府正式采用，之后开始广泛流传，但是近些年使用越来越少，因为DES使用56位密钥，以现代计算能力，\n * 24小时内即可被破解。虽然如此，在某些简单应用中，我们还是可以使用DES加密算法，本文简单讲解DES的JAVA实现 。\n * 注意：DES加密和解密过程中，密钥长度都必须是8的倍数\n */\npublic class DesDemo {\n\tpublic DesDemo() {\n\t}\n\n\t// 测试\n\tpublic static void main(String args[]) {\n\t\t// 待加密内容\n\t\tString str = "cryptology";\n\t\t// 密码，长度要是8的倍数\n\t\tString password = "95880288";\n\n\t\tbyte[] result;\n\t\ttry {\n\t\t\tresult = DesDemo.encrypt(str.getBytes(), password);\n\t\t\tSystem.out.println("加密后：" + result);\n\t\t\tbyte[] decryResult = DesDemo.decrypt(result, password);\n\t\t\tSystem.out.println("解密后：" + new String(decryResult));\n\t\t} catch (UnsupportedEncodingException e2) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te2.printStackTrace();\n\t\t} catch (Exception e1) {\n\t\t\te1.printStackTrace();\n\t\t}\n\t}\n\n\t// 直接将如上内容解密\n\n\t/**\n\t * 加密\n\t * \n\t * @param datasource\n\t *            byte[]\n\t * @param password\n\t *            String\n\t * @return byte[]\n\t */\n\tpublic static byte[] encrypt(byte[] datasource, String password) {\n\t\ttry {\n\t\t\tSecureRandom random = new SecureRandom();\n\t\t\tDESKeySpec desKey = new DESKeySpec(password.getBytes());\n\t\t\t// 创建一个密匙工厂，然后用它把DESKeySpec转换成\n\t\t\tSecretKeyFactory keyFactory = SecretKeyFactory.getInstance("DES");\n\t\t\tSecretKey securekey = keyFactory.generateSecret(desKey);\n\t\t\t// Cipher对象实际完成加密操作\n\t\t\tCipher cipher = Cipher.getInstance("DES");\n\t\t\t// 用密匙初始化Cipher对象,ENCRYPT_MODE用于将 Cipher 初始化为加密模式的常量\n\t\t\tcipher.init(Cipher.ENCRYPT_MODE, securekey, random);\n\t\t\t// 现在，获取数据并加密\n\t\t\t// 正式执行加密操作\n\t\t\treturn cipher.doFinal(datasource); // 按单部分操作加密或解密数据，或者结束一个多部分操作\n\t\t} catch (Throwable e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * 解密\n\t * \n\t * @param src\n\t *            byte[]\n\t * @param password\n\t *            String\n\t * @return byte[]\n\t * @throws Exception\n\t */\n\tpublic static byte[] decrypt(byte[] src, String password) throws Exception {\n\t\t// DES算法要求有一个可信任的随机数源\n\t\tSecureRandom random = new SecureRandom();\n\t\t// 创建一个DESKeySpec对象\n\t\tDESKeySpec desKey = new DESKeySpec(password.getBytes());\n\t\t// 创建一个密匙工厂\n\t\tSecretKeyFactory keyFactory = SecretKeyFactory.getInstance("DES");// 返回实现指定转换的\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Cipher\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// 对象\n\t\t// 将DESKeySpec对象转换成SecretKey对象\n\t\tSecretKey securekey = keyFactory.generateSecret(desKey);\n\t\t// Cipher对象实际完成解密操作\n\t\tCipher cipher = Cipher.getInstance("DES");\n\t\t// 用密匙初始化Cipher对象\n\t\tcipher.init(Cipher.DECRYPT_MODE, securekey, random);\n\t\t// 真正开始解密操作\n\t\treturn cipher.doFinal(src);\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br"),t("span",{staticClass:"line-number"},[s._v("85")]),t("br"),t("span",{staticClass:"line-number"},[s._v("86")]),t("br"),t("span",{staticClass:"line-number"},[s._v("87")]),t("br"),t("span",{staticClass:"line-number"},[s._v("88")]),t("br"),t("span",{staticClass:"line-number"},[s._v("89")]),t("br"),t("span",{staticClass:"line-number"},[s._v("90")]),t("br"),t("span",{staticClass:"line-number"},[s._v("91")]),t("br"),t("span",{staticClass:"line-number"},[s._v("92")]),t("br"),t("span",{staticClass:"line-number"},[s._v("93")]),t("br"),t("span",{staticClass:"line-number"},[s._v("94")]),t("br"),t("span",{staticClass:"line-number"},[s._v("95")]),t("br"),t("span",{staticClass:"line-number"},[s._v("96")]),t("br"),t("span",{staticClass:"line-number"},[s._v("97")]),t("br"),t("span",{staticClass:"line-number"},[s._v("98")]),t("br"),t("span",{staticClass:"line-number"},[s._v("99")]),t("br"),t("span",{staticClass:"line-number"},[s._v("100")]),t("br")])]),t("p",[s._v("结果：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("加密后：[B@50cbc42f\n解密后：cryptology\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"idea"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#idea"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"https://baike.baidu.com/item/%E5%9B%BD%E9%99%85%E6%95%B0%E6%8D%AE%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/11048972?fr=aladdin",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[s._v("IDEA:")]),t("OutboundLink")],1)]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("这种算法是在DES算法的基础上发展出来的，类似于三重DES。")])]),s._v(" "),t("li",[t("strong",[s._v("发展IDEA也是因为感到DES具有密钥太短等缺点。")])]),s._v(" "),t("li",[t("strong",[s._v("IDEA的密钥为128位，这么长的密钥在今后若干年内应该是安全的。")])]),s._v(" "),t("li",[t("strong",[s._v("在实际项目中用到的很少了解即可。")])])]),s._v(" "),t("h4",{attrs:{id:"代码实现-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码实现-4"}},[s._v("#")]),s._v(" 代码实现：")]),s._v(" "),t("p",[s._v("IDEA算法实现")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('package com.snailclimb.ks.securityAlgorithm;\n\nimport java.security.Key;\nimport java.security.Security;\n\nimport javax.crypto.Cipher;\nimport javax.crypto.KeyGenerator;\nimport javax.crypto.SecretKey;\nimport javax.crypto.spec.SecretKeySpec;\n\nimport org.apache.commons.codec.binary.Base64;\nimport org.bouncycastle.jce.provider.BouncyCastleProvider;\n\npublic class IDEADemo {\n\tpublic static void main(String args[]) {\n\t\tbcIDEA();\n\t}\n\tpublic static void bcIDEA() {\n\t    String src = "www.xttblog.com security idea";\n\t    try {\n\t        Security.addProvider(new BouncyCastleProvider());\n\t         \n\t        //生成key\n\t        KeyGenerator keyGenerator = KeyGenerator.getInstance("IDEA");\n\t        keyGenerator.init(128);\n\t        SecretKey secretKey = keyGenerator.generateKey();\n\t        byte[] keyBytes = secretKey.getEncoded();\n\t         \n\t        //转换密钥\n\t        Key key = new SecretKeySpec(keyBytes, "IDEA");\n\t         \n\t        //加密\n\t        Cipher cipher = Cipher.getInstance("IDEA/ECB/ISO10126Padding");\n\t        cipher.init(Cipher.ENCRYPT_MODE, key);\n\t        byte[] result = cipher.doFinal(src.getBytes());\n\t        System.out.println("bc idea encrypt : " + Base64.encodeBase64String(result));\n\t         \n\t        //解密\n\t        cipher.init(Cipher.DECRYPT_MODE, key);\n\t        result = cipher.doFinal(result);\n\t        System.out.println("bc idea decrypt : " + new String(result));\n\t    } catch (Exception e) {\n\t        e.printStackTrace();\n\t    }\n\t}\n}\n\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br")])]),t("h2",{attrs:{id:"_5-非对称加密"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-非对称加密"}},[s._v("#")]),s._v(" "),t("strong",[s._v("5. 非对称加密：")])]),s._v(" "),t("ul",[t("li",[s._v("与对称加密算法不同，非对称加密算法需要两个密钥：公开密钥（publickey）和私有密钥 （privatekey）。")]),s._v(" "),t("li",[s._v("公开密钥与私有密钥是一对，如果用公开密钥对数据进行加密，只有用对应的私有密钥才能解密；")]),s._v(" "),t("li",[s._v("如果用私有密钥对数据进行加密，那么只有用对应的公开密钥才能解密。")]),s._v(" "),t("li",[s._v("因为加密和解密使用的是两个不同的密钥，所以这种算法叫作非对称加密算法。")])]),s._v(" "),t("h3",{attrs:{id:"ras"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ras"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"https://baike.baidu.com/item/DES",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[s._v("RAS:")]),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("RSA是目前最有影响力和最常用的公钥加密算法。它能够抵抗到目前为止已知的绝大多数密码攻击，已被ISO推荐为公钥数据加密标准。")]),s._v(" "),t("h4",{attrs:{id:"代码实现-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码实现-5"}},[s._v("#")]),s._v(" 代码实现：")]),s._v(" "),t("p",[s._v("RAS算法实现：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('package com.snailclimb.ks.securityAlgorithm;\n\nimport org.apache.commons.codec.binary.Base64;\n\nimport java.security.*;\nimport java.security.spec.PKCS8EncodedKeySpec;\nimport java.security.spec.X509EncodedKeySpec;\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport javax.crypto.Cipher;\n\n/**\n * Created by humf.需要依赖 commons-codec 包\n */\npublic class RSADemo {\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tMap<String, Key> keyMap = initKey();\n\t\tString publicKey = getPublicKey(keyMap);\n\t\tString privateKey = getPrivateKey(keyMap);\n\n\t\tSystem.out.println(keyMap);\n\t\tSystem.out.println("-----------------------------------");\n\t\tSystem.out.println(publicKey);\n\t\tSystem.out.println("-----------------------------------");\n\t\tSystem.out.println(privateKey);\n\t\tSystem.out.println("-----------------------------------");\n\t\tbyte[] encryptByPrivateKey = encryptByPrivateKey("123456".getBytes(), privateKey);\n\t\tbyte[] encryptByPublicKey = encryptByPublicKey("123456", publicKey);\n\t\tSystem.out.println(encryptByPrivateKey);\n\t\tSystem.out.println("-----------------------------------");\n\t\tSystem.out.println(encryptByPublicKey);\n\t\tSystem.out.println("-----------------------------------");\n\t\tString sign = sign(encryptByPrivateKey, privateKey);\n\t\tSystem.out.println(sign);\n\t\tSystem.out.println("-----------------------------------");\n\t\tboolean verify = verify(encryptByPrivateKey, publicKey, sign);\n\t\tSystem.out.println(verify);\n\t\tSystem.out.println("-----------------------------------");\n\t\tbyte[] decryptByPublicKey = decryptByPublicKey(encryptByPrivateKey, publicKey);\n\t\tbyte[] decryptByPrivateKey = decryptByPrivateKey(encryptByPublicKey, privateKey);\n\t\tSystem.out.println(decryptByPublicKey);\n\t\tSystem.out.println("-----------------------------------");\n\t\tSystem.out.println(decryptByPrivateKey);\n\n\t}\n\n\tpublic static final String KEY_ALGORITHM = "RSA";\n\tpublic static final String SIGNATURE_ALGORITHM = "MD5withRSA";\n\n\tprivate static final String PUBLIC_KEY = "RSAPublicKey";\n\tprivate static final String PRIVATE_KEY = "RSAPrivateKey";\n\n\tpublic static byte[] decryptBASE64(String key) {\n\t\treturn Base64.decodeBase64(key);\n\t}\n\n\tpublic static String encryptBASE64(byte[] bytes) {\n\t\treturn Base64.encodeBase64String(bytes);\n\t}\n\n\t/**\n\t * 用私钥对信息生成数字签名\n\t *\n\t * @param data\n\t *            加密数据\n\t * @param privateKey\n\t *            私钥\n\t * @return\n\t * @throws Exception\n\t */\n\tpublic static String sign(byte[] data, String privateKey) throws Exception {\n\t\t// 解密由base64编码的私钥\n\t\tbyte[] keyBytes = decryptBASE64(privateKey);\n\t\t// 构造PKCS8EncodedKeySpec对象\n\t\tPKCS8EncodedKeySpec pkcs8KeySpec = new PKCS8EncodedKeySpec(keyBytes);\n\t\t// KEY_ALGORITHM 指定的加密算法\n\t\tKeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);\n\t\t// 取私钥匙对象\n\t\tPrivateKey priKey = keyFactory.generatePrivate(pkcs8KeySpec);\n\t\t// 用私钥对信息生成数字签名\n\t\tSignature signature = Signature.getInstance(SIGNATURE_ALGORITHM);\n\t\tsignature.initSign(priKey);\n\t\tsignature.update(data);\n\t\treturn encryptBASE64(signature.sign());\n\t}\n\n\t/**\n\t * 校验数字签名\n\t *\n\t * @param data\n\t *            加密数据\n\t * @param publicKey\n\t *            公钥\n\t * @param sign\n\t *            数字签名\n\t * @return 校验成功返回true 失败返回false\n\t * @throws Exception\n\t */\n\tpublic static boolean verify(byte[] data, String publicKey, String sign) throws Exception {\n\t\t// 解密由base64编码的公钥\n\t\tbyte[] keyBytes = decryptBASE64(publicKey);\n\t\t// 构造X509EncodedKeySpec对象\n\t\tX509EncodedKeySpec keySpec = new X509EncodedKeySpec(keyBytes);\n\t\t// KEY_ALGORITHM 指定的加密算法\n\t\tKeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);\n\t\t// 取公钥匙对象\n\t\tPublicKey pubKey = keyFactory.generatePublic(keySpec);\n\t\tSignature signature = Signature.getInstance(SIGNATURE_ALGORITHM);\n\t\tsignature.initVerify(pubKey);\n\t\tsignature.update(data);\n\t\t// 验证签名是否正常\n\t\treturn signature.verify(decryptBASE64(sign));\n\t}\n\n\tpublic static byte[] decryptByPrivateKey(byte[] data, String key) throws Exception {\n\t\t// 对密钥解密\n\t\tbyte[] keyBytes = decryptBASE64(key);\n\t\t// 取得私钥\n\t\tPKCS8EncodedKeySpec pkcs8KeySpec = new PKCS8EncodedKeySpec(keyBytes);\n\t\tKeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);\n\t\tKey privateKey = keyFactory.generatePrivate(pkcs8KeySpec);\n\t\t// 对数据解密\n\t\tCipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());\n\t\tcipher.init(Cipher.DECRYPT_MODE, privateKey);\n\t\treturn cipher.doFinal(data);\n\t}\n\n\t/**\n\t * 解密<br>\n\t * 用私钥解密\n\t *\n\t * @param data\n\t * @param key\n\t * @return\n\t * @throws Exception\n\t */\n\tpublic static byte[] decryptByPrivateKey(String data, String key) throws Exception {\n\t\treturn decryptByPrivateKey(decryptBASE64(data), key);\n\t}\n\n\t/**\n\t * 解密<br>\n\t * 用公钥解密\n\t *\n\t * @param data\n\t * @param key\n\t * @return\n\t * @throws Exception\n\t */\n\tpublic static byte[] decryptByPublicKey(byte[] data, String key) throws Exception {\n\t\t// 对密钥解密\n\t\tbyte[] keyBytes = decryptBASE64(key);\n\t\t// 取得公钥\n\t\tX509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(keyBytes);\n\t\tKeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);\n\t\tKey publicKey = keyFactory.generatePublic(x509KeySpec);\n\t\t// 对数据解密\n\t\tCipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());\n\t\tcipher.init(Cipher.DECRYPT_MODE, publicKey);\n\t\treturn cipher.doFinal(data);\n\t}\n\n\t/**\n\t * 加密<br>\n\t * 用公钥加密\n\t *\n\t * @param data\n\t * @param key\n\t * @return\n\t * @throws Exception\n\t */\n\tpublic static byte[] encryptByPublicKey(String data, String key) throws Exception {\n\t\t// 对公钥解密\n\t\tbyte[] keyBytes = decryptBASE64(key);\n\t\t// 取得公钥\n\t\tX509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(keyBytes);\n\t\tKeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);\n\t\tKey publicKey = keyFactory.generatePublic(x509KeySpec);\n\t\t// 对数据加密\n\t\tCipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());\n\t\tcipher.init(Cipher.ENCRYPT_MODE, publicKey);\n\t\treturn cipher.doFinal(data.getBytes());\n\t}\n\n\t/**\n\t * 加密<br>\n\t * 用私钥加密\n\t *\n\t * @param data\n\t * @param key\n\t * @return\n\t * @throws Exception\n\t */\n\tpublic static byte[] encryptByPrivateKey(byte[] data, String key) throws Exception {\n\t\t// 对密钥解密\n\t\tbyte[] keyBytes = decryptBASE64(key);\n\t\t// 取得私钥\n\t\tPKCS8EncodedKeySpec pkcs8KeySpec = new PKCS8EncodedKeySpec(keyBytes);\n\t\tKeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);\n\t\tKey privateKey = keyFactory.generatePrivate(pkcs8KeySpec);\n\t\t// 对数据加密\n\t\tCipher cipher = Cipher.getInstance(keyFactory.getAlgorithm());\n\t\tcipher.init(Cipher.ENCRYPT_MODE, privateKey);\n\t\treturn cipher.doFinal(data);\n\t}\n\n\t/**\n\t * 取得私钥\n\t *\n\t * @param keyMap\n\t * @return\n\t * @throws Exception\n\t */\n\tpublic static String getPrivateKey(Map<String, Key> keyMap) throws Exception {\n\t\tKey key = (Key) keyMap.get(PRIVATE_KEY);\n\t\treturn encryptBASE64(key.getEncoded());\n\t}\n\n\t/**\n\t * 取得公钥\n\t *\n\t * @param keyMap\n\t * @return\n\t * @throws Exception\n\t */\n\tpublic static String getPublicKey(Map<String, Key> keyMap) throws Exception {\n\t\tKey key = keyMap.get(PUBLIC_KEY);\n\t\treturn encryptBASE64(key.getEncoded());\n\t}\n\n\t/**\n\t * 初始化密钥\n\t *\n\t * @return\n\t * @throws Exception\n\t */\n\tpublic static Map<String, Key> initKey() throws Exception {\n\t\tKeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(KEY_ALGORITHM);\n\t\tkeyPairGen.initialize(1024);\n\t\tKeyPair keyPair = keyPairGen.generateKeyPair();\n\t\tMap<String, Key> keyMap = new HashMap(2);\n\t\tkeyMap.put(PUBLIC_KEY, keyPair.getPublic());// 公钥\n\t\tkeyMap.put(PRIVATE_KEY, keyPair.getPrivate());// 私钥\n\t\treturn keyMap;\n\t}\n\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br"),t("span",{staticClass:"line-number"},[s._v("85")]),t("br"),t("span",{staticClass:"line-number"},[s._v("86")]),t("br"),t("span",{staticClass:"line-number"},[s._v("87")]),t("br"),t("span",{staticClass:"line-number"},[s._v("88")]),t("br"),t("span",{staticClass:"line-number"},[s._v("89")]),t("br"),t("span",{staticClass:"line-number"},[s._v("90")]),t("br"),t("span",{staticClass:"line-number"},[s._v("91")]),t("br"),t("span",{staticClass:"line-number"},[s._v("92")]),t("br"),t("span",{staticClass:"line-number"},[s._v("93")]),t("br"),t("span",{staticClass:"line-number"},[s._v("94")]),t("br"),t("span",{staticClass:"line-number"},[s._v("95")]),t("br"),t("span",{staticClass:"line-number"},[s._v("96")]),t("br"),t("span",{staticClass:"line-number"},[s._v("97")]),t("br"),t("span",{staticClass:"line-number"},[s._v("98")]),t("br"),t("span",{staticClass:"line-number"},[s._v("99")]),t("br"),t("span",{staticClass:"line-number"},[s._v("100")]),t("br"),t("span",{staticClass:"line-number"},[s._v("101")]),t("br"),t("span",{staticClass:"line-number"},[s._v("102")]),t("br"),t("span",{staticClass:"line-number"},[s._v("103")]),t("br"),t("span",{staticClass:"line-number"},[s._v("104")]),t("br"),t("span",{staticClass:"line-number"},[s._v("105")]),t("br"),t("span",{staticClass:"line-number"},[s._v("106")]),t("br"),t("span",{staticClass:"line-number"},[s._v("107")]),t("br"),t("span",{staticClass:"line-number"},[s._v("108")]),t("br"),t("span",{staticClass:"line-number"},[s._v("109")]),t("br"),t("span",{staticClass:"line-number"},[s._v("110")]),t("br"),t("span",{staticClass:"line-number"},[s._v("111")]),t("br"),t("span",{staticClass:"line-number"},[s._v("112")]),t("br"),t("span",{staticClass:"line-number"},[s._v("113")]),t("br"),t("span",{staticClass:"line-number"},[s._v("114")]),t("br"),t("span",{staticClass:"line-number"},[s._v("115")]),t("br"),t("span",{staticClass:"line-number"},[s._v("116")]),t("br"),t("span",{staticClass:"line-number"},[s._v("117")]),t("br"),t("span",{staticClass:"line-number"},[s._v("118")]),t("br"),t("span",{staticClass:"line-number"},[s._v("119")]),t("br"),t("span",{staticClass:"line-number"},[s._v("120")]),t("br"),t("span",{staticClass:"line-number"},[s._v("121")]),t("br"),t("span",{staticClass:"line-number"},[s._v("122")]),t("br"),t("span",{staticClass:"line-number"},[s._v("123")]),t("br"),t("span",{staticClass:"line-number"},[s._v("124")]),t("br"),t("span",{staticClass:"line-number"},[s._v("125")]),t("br"),t("span",{staticClass:"line-number"},[s._v("126")]),t("br"),t("span",{staticClass:"line-number"},[s._v("127")]),t("br"),t("span",{staticClass:"line-number"},[s._v("128")]),t("br"),t("span",{staticClass:"line-number"},[s._v("129")]),t("br"),t("span",{staticClass:"line-number"},[s._v("130")]),t("br"),t("span",{staticClass:"line-number"},[s._v("131")]),t("br"),t("span",{staticClass:"line-number"},[s._v("132")]),t("br"),t("span",{staticClass:"line-number"},[s._v("133")]),t("br"),t("span",{staticClass:"line-number"},[s._v("134")]),t("br"),t("span",{staticClass:"line-number"},[s._v("135")]),t("br"),t("span",{staticClass:"line-number"},[s._v("136")]),t("br"),t("span",{staticClass:"line-number"},[s._v("137")]),t("br"),t("span",{staticClass:"line-number"},[s._v("138")]),t("br"),t("span",{staticClass:"line-number"},[s._v("139")]),t("br"),t("span",{staticClass:"line-number"},[s._v("140")]),t("br"),t("span",{staticClass:"line-number"},[s._v("141")]),t("br"),t("span",{staticClass:"line-number"},[s._v("142")]),t("br"),t("span",{staticClass:"line-number"},[s._v("143")]),t("br"),t("span",{staticClass:"line-number"},[s._v("144")]),t("br"),t("span",{staticClass:"line-number"},[s._v("145")]),t("br"),t("span",{staticClass:"line-number"},[s._v("146")]),t("br"),t("span",{staticClass:"line-number"},[s._v("147")]),t("br"),t("span",{staticClass:"line-number"},[s._v("148")]),t("br"),t("span",{staticClass:"line-number"},[s._v("149")]),t("br"),t("span",{staticClass:"line-number"},[s._v("150")]),t("br"),t("span",{staticClass:"line-number"},[s._v("151")]),t("br"),t("span",{staticClass:"line-number"},[s._v("152")]),t("br"),t("span",{staticClass:"line-number"},[s._v("153")]),t("br"),t("span",{staticClass:"line-number"},[s._v("154")]),t("br"),t("span",{staticClass:"line-number"},[s._v("155")]),t("br"),t("span",{staticClass:"line-number"},[s._v("156")]),t("br"),t("span",{staticClass:"line-number"},[s._v("157")]),t("br"),t("span",{staticClass:"line-number"},[s._v("158")]),t("br"),t("span",{staticClass:"line-number"},[s._v("159")]),t("br"),t("span",{staticClass:"line-number"},[s._v("160")]),t("br"),t("span",{staticClass:"line-number"},[s._v("161")]),t("br"),t("span",{staticClass:"line-number"},[s._v("162")]),t("br"),t("span",{staticClass:"line-number"},[s._v("163")]),t("br"),t("span",{staticClass:"line-number"},[s._v("164")]),t("br"),t("span",{staticClass:"line-number"},[s._v("165")]),t("br"),t("span",{staticClass:"line-number"},[s._v("166")]),t("br"),t("span",{staticClass:"line-number"},[s._v("167")]),t("br"),t("span",{staticClass:"line-number"},[s._v("168")]),t("br"),t("span",{staticClass:"line-number"},[s._v("169")]),t("br"),t("span",{staticClass:"line-number"},[s._v("170")]),t("br"),t("span",{staticClass:"line-number"},[s._v("171")]),t("br"),t("span",{staticClass:"line-number"},[s._v("172")]),t("br"),t("span",{staticClass:"line-number"},[s._v("173")]),t("br"),t("span",{staticClass:"line-number"},[s._v("174")]),t("br"),t("span",{staticClass:"line-number"},[s._v("175")]),t("br"),t("span",{staticClass:"line-number"},[s._v("176")]),t("br"),t("span",{staticClass:"line-number"},[s._v("177")]),t("br"),t("span",{staticClass:"line-number"},[s._v("178")]),t("br"),t("span",{staticClass:"line-number"},[s._v("179")]),t("br"),t("span",{staticClass:"line-number"},[s._v("180")]),t("br"),t("span",{staticClass:"line-number"},[s._v("181")]),t("br"),t("span",{staticClass:"line-number"},[s._v("182")]),t("br"),t("span",{staticClass:"line-number"},[s._v("183")]),t("br"),t("span",{staticClass:"line-number"},[s._v("184")]),t("br"),t("span",{staticClass:"line-number"},[s._v("185")]),t("br"),t("span",{staticClass:"line-number"},[s._v("186")]),t("br"),t("span",{staticClass:"line-number"},[s._v("187")]),t("br"),t("span",{staticClass:"line-number"},[s._v("188")]),t("br"),t("span",{staticClass:"line-number"},[s._v("189")]),t("br"),t("span",{staticClass:"line-number"},[s._v("190")]),t("br"),t("span",{staticClass:"line-number"},[s._v("191")]),t("br"),t("span",{staticClass:"line-number"},[s._v("192")]),t("br"),t("span",{staticClass:"line-number"},[s._v("193")]),t("br"),t("span",{staticClass:"line-number"},[s._v("194")]),t("br"),t("span",{staticClass:"line-number"},[s._v("195")]),t("br"),t("span",{staticClass:"line-number"},[s._v("196")]),t("br"),t("span",{staticClass:"line-number"},[s._v("197")]),t("br"),t("span",{staticClass:"line-number"},[s._v("198")]),t("br"),t("span",{staticClass:"line-number"},[s._v("199")]),t("br"),t("span",{staticClass:"line-number"},[s._v("200")]),t("br"),t("span",{staticClass:"line-number"},[s._v("201")]),t("br"),t("span",{staticClass:"line-number"},[s._v("202")]),t("br"),t("span",{staticClass:"line-number"},[s._v("203")]),t("br"),t("span",{staticClass:"line-number"},[s._v("204")]),t("br"),t("span",{staticClass:"line-number"},[s._v("205")]),t("br"),t("span",{staticClass:"line-number"},[s._v("206")]),t("br"),t("span",{staticClass:"line-number"},[s._v("207")]),t("br"),t("span",{staticClass:"line-number"},[s._v("208")]),t("br"),t("span",{staticClass:"line-number"},[s._v("209")]),t("br"),t("span",{staticClass:"line-number"},[s._v("210")]),t("br"),t("span",{staticClass:"line-number"},[s._v("211")]),t("br"),t("span",{staticClass:"line-number"},[s._v("212")]),t("br"),t("span",{staticClass:"line-number"},[s._v("213")]),t("br"),t("span",{staticClass:"line-number"},[s._v("214")]),t("br"),t("span",{staticClass:"line-number"},[s._v("215")]),t("br"),t("span",{staticClass:"line-number"},[s._v("216")]),t("br"),t("span",{staticClass:"line-number"},[s._v("217")]),t("br"),t("span",{staticClass:"line-number"},[s._v("218")]),t("br"),t("span",{staticClass:"line-number"},[s._v("219")]),t("br"),t("span",{staticClass:"line-number"},[s._v("220")]),t("br"),t("span",{staticClass:"line-number"},[s._v("221")]),t("br"),t("span",{staticClass:"line-number"},[s._v("222")]),t("br"),t("span",{staticClass:"line-number"},[s._v("223")]),t("br"),t("span",{staticClass:"line-number"},[s._v("224")]),t("br"),t("span",{staticClass:"line-number"},[s._v("225")]),t("br"),t("span",{staticClass:"line-number"},[s._v("226")]),t("br"),t("span",{staticClass:"line-number"},[s._v("227")]),t("br"),t("span",{staticClass:"line-number"},[s._v("228")]),t("br"),t("span",{staticClass:"line-number"},[s._v("229")]),t("br"),t("span",{staticClass:"line-number"},[s._v("230")]),t("br"),t("span",{staticClass:"line-number"},[s._v("231")]),t("br"),t("span",{staticClass:"line-number"},[s._v("232")]),t("br"),t("span",{staticClass:"line-number"},[s._v("233")]),t("br"),t("span",{staticClass:"line-number"},[s._v("234")]),t("br"),t("span",{staticClass:"line-number"},[s._v("235")]),t("br"),t("span",{staticClass:"line-number"},[s._v("236")]),t("br"),t("span",{staticClass:"line-number"},[s._v("237")]),t("br"),t("span",{staticClass:"line-number"},[s._v("238")]),t("br"),t("span",{staticClass:"line-number"},[s._v("239")]),t("br"),t("span",{staticClass:"line-number"},[s._v("240")]),t("br"),t("span",{staticClass:"line-number"},[s._v("241")]),t("br"),t("span",{staticClass:"line-number"},[s._v("242")]),t("br"),t("span",{staticClass:"line-number"},[s._v("243")]),t("br"),t("span",{staticClass:"line-number"},[s._v("244")]),t("br"),t("span",{staticClass:"line-number"},[s._v("245")]),t("br"),t("span",{staticClass:"line-number"},[s._v("246")]),t("br"),t("span",{staticClass:"line-number"},[s._v("247")]),t("br"),t("span",{staticClass:"line-number"},[s._v("248")]),t("br"),t("span",{staticClass:"line-number"},[s._v("249")]),t("br")])]),t("p",[s._v("结果：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("{RSAPublicKey=Sun RSA public key, 1024 bits\n  modulus: 115328826086047873902606456571034976538836553998745367981848911677968062571831626674499650854318207280419960767020601253071739555161388135589487284843845439403614883967713749605268831336418001722701924537624573180276356615050309809260289965219855862692230362893996010057188170525719351126759886050891484226169\n  public exponent: 65537, RSAPrivateKey=sun.security.rsa.RSAPrivateCrtKeyImpl@93479}\n-----------------------------------\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCkO9PBTOFJQTkzznALN62PU7ixd9YFjXrt2dPOGj3wwhymbOU8HLoCztjwpLXHgbpBUJlGmbURV955M1BkZ1kr5dkZYR5x1gO4xOnu8rEipy4AAMcpFttfiarIZrtzL9pKEvEOxABltVN4yzFDr3IjBqY46aHna7YjwhXI0xHieQIDAQAB\n-----------------------------------\nMIICdQIBADANBgkqhkiG9w0BAQEFAASCAl8wggJbAgEAAoGBAKQ708FM4UlBOTPOcAs3rY9TuLF31gWNeu3Z084aPfDCHKZs5TwcugLO2PCktceBukFQmUaZtRFX3nkzUGRnWSvl2RlhHnHWA7jE6e7ysSKnLgAAxykW21+Jqshmu3Mv2koS8Q7EAGW1U3jLMUOvciMGpjjpoedrtiPCFcjTEeJ5AgMBAAECgYAK4sxOa8IjEOexv2U92Rrv/SSo3sCY7Z/QVDft2V9xrewoO9+V9HF/7iYDDWffKYInAiimvVl7JM/iSLxza0ZFv29VMpyDcr4TigYmWwBlk7ZbxSTkqLdNwxxldMmEoTn1py53MUm+1V1K3rzNvJjuZaZFAevU7vUnwQwD+JGQYQJBAM9HBaC+dF3PJ2mkXekHpDS1ZPaSFdrdzd/GvHFi/cJAMM+Uz6PmpkosNXRtOpSYWwlOMRamLZtrHhfQoqSk3S8CQQDK1qL1jGvVdqw5OjqxktR7MmOsWUVZdWiBN+6ojxBgA0yVn0n7vkdAAgEZBj89WG0VHPEu3hd4AgXFZHDfXeDXAkBvSn7nE9t/Et7ihfI2UHgGJO8UxNMfNMB5Skebyb7eMYEDs67ZHdpjMOFypcMyTatzj5wjwQ3zyMvblZX+ONbZAkAX4ysRy9WvL+icXLUo0Gfhkk+WrnSyUldaUGH0y9Rb2kecn0OxN/lgGlxSvB+ac910zRHCOTl+Uo6nbmq0g3PFAkAyqA4eT7G9GXfncakgW1Kdkn72w/ODpozgfhTLNX0SGw1ITML3c4THTtH5h3zLi3AF9zJO2O+K6ajRbV0szHHI\n-----------------------------------\n[B@387c703b\n-----------------------------------\n[B@224aed64\n-----------------------------------\nla4Hc4n/UbeBu0z9iLRuwKVv014SiOJMXkO5qdJvKBsw0MlnsrM+89a3p73yMrb1dAnCU/2kgO0PtFpvmG8pzxTe1u/5nX/25iIyUXALlwVRptJyjzFE83g2IX0XEv/Dxqr1RCRcrMHOLQM0oBoxZCaChmyw1Ub4wsSs6Ndxb9M=\n-----------------------------------\ntrue\n-----------------------------------\n[B@c39f790\n-----------------------------------\n[B@71e7a66b\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);