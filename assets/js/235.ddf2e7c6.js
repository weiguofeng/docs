(window.webpackJsonp=window.webpackJsonp||[]).push([[235],{1669:function(t,s,a){t.exports=a.p+"assets/img/1628322800099.668e71a1.png"},1670:function(t,s,a){t.exports=a.p+"assets/img/1628323356261.cd318852.png"},1671:function(t,s,a){t.exports=a.p+"assets/img/1628323434638.dc276803.png"},1672:function(t,s,a){t.exports=a.p+"assets/img/1628323461413.b3729e88.png"},1673:function(t,s,a){t.exports=a.p+"assets/img/1628323629510.87443893.png"},1674:function(t,s,a){t.exports=a.p+"assets/img/1628323647356.d9fdd988.png"},1675:function(t,s,a){t.exports=a.p+"assets/img/1628324470296.a8ad9f60.png"},1676:function(t,s,a){t.exports=a.p+"assets/img/1628324434507.a5e04bb9.png"},1677:function(t,s,a){t.exports=a.p+"assets/img/1628324119781.89c60f1f.png"},1678:function(t,s,a){t.exports=a.p+"assets/img/1628326514345.5dfa3b0a.png"},1679:function(t,s,a){t.exports=a.p+"assets/img/1628326541581.f621063d.png"},1680:function(t,s,a){t.exports=a.p+"assets/img/1628326736433.17a84655.png"},8356:function(t,s,a){"use strict";a.r(s);var r=a(5),n=Object(r.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"_7-组件的生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-组件的生命周期"}},[t._v("#")]),t._v(" 7.组件的生命周期")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("\t可以帮助我们理解，组件是如何被创建出来，如何在页面中运行，怎么又被卸载掉，我们需要了解他的一个全过程--那么就是他的生命周期。\n\n\n\n\t了解了生命周期之后，我们就可以做一些更复杂的功能了，因为一些复杂的功能是需要借助于生命周期中的内容来完成的，并且了解了组件的生命周期后，也比较容易的可以定位到组件发生错误的地方。\n")])])]),r("p",[r("img",{attrs:{src:a(1669),alt:"1628322800099"}})]),t._v(" "),r("h4",{attrs:{id:"生命周期的三个阶段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#生命周期的三个阶段"}},[t._v("#")]),t._v(" 生命周期的三个阶段")]),t._v(" "),r("p",[r("img",{attrs:{src:a(1670),alt:"1628323356261"}})]),t._v(" "),r("p",[r("img",{attrs:{src:a(1671),alt:"1628323434638"}})]),t._v(" "),r("p",[r("img",{attrs:{src:a(1672),alt:"1628323461413"}})]),t._v(" "),r("h5",{attrs:{id:"代码展示钩子函数的执行顺序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#代码展示钩子函数的执行顺序"}},[t._v("#")]),t._v(" 代码展示钩子函数的执行顺序")]),t._v(" "),r("p",[r("img",{attrs:{src:a(1673),alt:"1628323629510"}})]),t._v(" "),r("p",[r("img",{attrs:{src:a(1674),alt:"1628323647356"}})]),t._v(" "),r("h5",{attrs:{id:"我们看一下每一个钩子函数触发的时机和作用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#我们看一下每一个钩子函数触发的时机和作用"}},[t._v("#")]),t._v(" 我们看一下每一个钩子函数触发的时机和作用")]),t._v(" "),r("p",[r("img",{attrs:{src:a(1675),alt:"1628324470296"}})]),t._v(" "),r("p",[r("img",{attrs:{src:a(1676),alt:"1628324434507"}})]),t._v(" "),r("p",[t._v("注意：不能在render中调用setState如果调用会发生错误，因为属于递归调用了，报错提示，我们不能在状态变化的时候你再来进行更新，render方法应该是一个纯的函数， 只接收props和state的纯函数，你不能在这里做再次的更新了。")]),t._v(" "),r("p",[r("img",{attrs:{src:a(1677),alt:"1628324119781"}})]),t._v(" "),r("p",[t._v("componentDidMount这个钩子一般用于请求或者操作Dom")]),t._v(" "),r("p",[t._v("在componentDidMount执行的时候其实已经完成渲染了")]),t._v(" "),r("p",[r("img",{attrs:{src:a(1678),alt:"1628326514345"}})]),t._v(" "),r("p",[r("img",{attrs:{src:a(1679),alt:"1628326541581"}})]),t._v(" "),r("p",[t._v("另外就是可以componentDidMount钩子函数发送Ajax请求")]),t._v(" "),r("p",[r("img",{attrs:{src:a(1680),alt:"1628326736433"}})]),t._v(" "),r("p",[t._v("https://www.bilibili.com/video/BV14y4y1g7M4?p=59")])])}),[],!1,null,null,null);s.default=n.exports}}]);