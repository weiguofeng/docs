(window.webpackJsonp=window.webpackJsonp||[]).push([[316],{2124:function(t,s,a){t.exports=a.p+"assets/img/1639552337200.6113868f.png"},2125:function(t,s,a){t.exports=a.p+"assets/img/1639552720929.fe17950c.png"},2126:function(t,s,a){t.exports=a.p+"assets/img/1639553195588.260983a1.png"},2127:function(t,s,a){t.exports=a.p+"assets/img/1639553237718.cb3692ff.png"},2128:function(t,s,a){t.exports=a.p+"assets/img/1639553300193.e1372433.png"},2129:function(t,s,a){t.exports=a.p+"assets/img/1639553393195.343b40f9.png"},2130:function(t,s,a){t.exports=a.p+"assets/img/1639553457011.8493b047.png"},2131:function(t,s,a){t.exports=a.p+"assets/img/1639553557936.fb5f2900.png"},2132:function(t,s,a){t.exports=a.p+"assets/img/1639553695127.d06afab0.png"},8384:function(t,s,a){"use strict";a.r(s);var r=a(5),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"_25-用户列表-删除用户"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_25-用户列表-删除用户"}},[t._v("#")]),t._v(" 25.用户列表-删除用户")]),t._v(" "),r("h4",{attrs:{id:"_1、添加用于遗留问题处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1、添加用于遗留问题处理"}},[t._v("#")]),t._v(" 1、添加用于遗留问题处理")]),t._v(" "),r("h4",{attrs:{id:"_1-1-先解决刷新页面才显示新增用户的地域的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-先解决刷新页面才显示新增用户的地域的问题"}},[t._v("#")]),t._v(" 1.1 先解决刷新页面才显示新增用户的地域的问题")]),t._v(" "),r("p",[t._v("​\t"),r("img",{attrs:{src:a(2124),alt:"1639552337200"}})]),t._v(" "),r("p",[t._v("​\t原因是：因为我们创建完的数据 然后接口返回给我们的值里面，其实是没有关联查询角色内容的，所以就没显示，在我们重新刷新页面的时候，他又去管理查询所以就显示出来了--其实这个问题应该是后端来处理，后端直接给我们进行关联的数据返回，我们现在使用的是JsonServer 他现在满足不了这一点")]),t._v(" "),r("p",[t._v("如果是前端来处理的话：")]),t._v(" "),r("p",[t._v("​\t\t\t我们将res.data先展开，然后添加role，role的内容是通过roleList中进行过滤 我们value中的roleId与roleList的roleId相同的时候我们取他的0个作为role的值")]),t._v(" "),r("p",[r("img",{attrs:{src:a(2125),alt:"1639552720929"}})]),t._v(" "),r("p",[t._v("现在显示区域完全没有问题了")]),t._v(" "),r("h4",{attrs:{id:"_1-2-每次添加用户的时候清除上次添加的内容"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-每次添加用户的时候清除上次添加的内容"}},[t._v("#")]),t._v(" 1.2 每次添加用户的时候清除上次添加的内容")]),t._v(" "),r("p",[t._v("​\t\t我们使用resetFieldValue这个方法进行重置表单字段值")]),t._v(" "),r("p",[r("img",{attrs:{src:a(2126),alt:"1639553195588"}})]),t._v(" "),r("p",[t._v("​\t我们在文档中查阅一下都有什么方法")]),t._v(" "),r("p",[r("img",{attrs:{src:a(2127),alt:"1639553237718"}})]),t._v(" "),r("p",[r("img",{attrs:{src:a(2128),alt:"1639553300193"}})]),t._v(" "),r("p",[t._v("重置filed查看效果：清除掉了上次填写的内容没有问题")]),t._v(" "),r("p",[r("img",{attrs:{src:a(2129),alt:"1639553393195"}})]),t._v(" "),r("h4",{attrs:{id:"_2、删除用户"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2、删除用户"}},[t._v("#")]),t._v(" 2、删除用户")]),t._v(" "),r("p",[r("img",{attrs:{src:a(2130),alt:"1639553457011"}})]),t._v(" "),r("p",[t._v("我们先设置同步数据状态  将列表数据过滤，过滤掉要删除的id的内容，保留其他进行更新渲染")]),t._v(" "),r("p",[t._v("​\t\t然后发起delete请求--传入删除的id")]),t._v(" "),r("p",[r("img",{attrs:{src:a(2131),alt:"1639553557936"}})]),t._v(" "),r("p",[t._v("页面测试：点击ok 删除是没有问题的，可以删除的掉")]),t._v(" "),r("p",[r("img",{attrs:{src:a(2132),alt:"1639553695127"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);