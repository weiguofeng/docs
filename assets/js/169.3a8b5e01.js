(window.webpackJsonp=window.webpackJsonp||[]).push([[169],{7986:function(t,s,a){t.exports=a.p+"assets/img/1647879426044.bc7aeb16.png"},7987:function(t,s,a){t.exports=a.p+"assets/img/1647879498530.3803b88a.png"},7988:function(t,s,a){t.exports=a.p+"assets/img/1647879374257.c8785c9a.png"},7989:function(t,s,a){t.exports=a.p+"assets/img/1647879781275.4dd9163d.png"},7990:function(t,s,a){t.exports=a.p+"assets/img/1647879988773.8990f2c2.png"},7991:function(t,s,a){t.exports=a.p+"assets/img/1647880009865.ac1bb8d1.png"},7992:function(t,s,a){t.exports=a.p+"assets/img/1647880685507.5c8f49fe.png"},7993:function(t,s,a){t.exports=a.p+"assets/img/1647881376397.a9305eee.png"},7994:function(t,s,a){t.exports=a.p+"assets/img/1647881046429.75832c2e.png"},7995:function(t,s,a){t.exports=a.p+"assets/img/1647882167693.362aec0c.png"},7996:function(t,s,a){t.exports=a.p+"assets/img/1647882277310.429e9ecb.png"},7997:function(t,s,a){t.exports=a.p+"assets/img/1647882755467.71bdfbdb.png"},7998:function(t,s,a){t.exports=a.p+"assets/img/1647883037620.90091dbc.png"},7999:function(t,s,a){t.exports=a.p+"assets/img/1647883120205.2b75e8e1.png"},8e3:function(t,s,a){t.exports=a.p+"assets/img/1647883190669.f8f919f3.png"},8001:function(t,s,a){t.exports=a.p+"assets/img/1647883257947.9edabe64.png"},9005:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"_8-如何使用mock进行单元测试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-如何使用mock进行单元测试"}},[t._v("#")]),t._v(" 8.如何使用mock进行单元测试")]),t._v(" "),n("p",[n("strong",[t._v("为什么要使用mock？")])]),t._v(" "),n("p",[t._v("​\t\t我们使用mock的目的就是 可以模拟一些数据，然后对我们的程序进行测试")]),t._v(" "),n("p",[t._v("​\t比如我们的这个测试是需要调用远程接口拿到数据进行下一步逻辑操作的，而我们现在并不能在开发环境调取这个接口，那么我们就需要模拟生产环境，然后进行对程序的单元测试。")]),t._v(" "),n("p",[n("strong",[t._v("大家是否有了解 TDD，BDD，DDD")])]),t._v(" "),n("p",[n("strong",[t._v("TDD")]),t._v("：就是我们常说的 "),n("strong",[t._v("测试驱动开发")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(7986),alt:"1647879426044"}})]),t._v(" "),n("p",[n("img",{attrs:{src:a(7987),alt:"1647879498530"}})]),t._v(" "),n("p",[t._v("​\t就是在编写代码之前，我先把测试用例告诉你，然后你现在根据这些用例呢，告诉我最终的结果，必须是和我想象的那个结果，和拿到的那个结果是一致的，就是测试先行，")]),t._v(" "),n("p",[n("strong",[t._v("BDD：是行为驱动开发")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(7988),alt:"1647879374257"}})]),t._v(" "),n("p",[n("strong",[t._v("DDD：领域驱动开发")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(7989),alt:"1647879781275"}})]),t._v(" "),n("p",[n("img",{attrs:{src:a(7990),alt:"1647879988773"}})]),t._v(" "),n("p",[n("img",{attrs:{src:a(7991),alt:"1647880009865"}})]),t._v(" "),n("p",[t._v("​\t\tDDD我们不太去关注测试的点，我们会更关注业务层")]),t._v(" "),n("p",[t._v("​\t\t\t会具体的定义几个模块--而这些模块具体要完成那些功能呢，是需要我们把他写出来的，分成架构，然后我们会对这些业务对象进行"),n("strong",[t._v("专业的术语")]),t._v(" 实体、值对象。。。来完成一些划分")]),t._v(" "),n("p",[n("strong",[t._v("但是无论是TDD，BDD，DDD我们最终一个业务的开发，项目开发完之后，肯定还是要进行单元测试的")])]),t._v(" "),n("p",[t._v("​\t\t其实mock就是TDD测试驱动开发产生的")]),t._v(" "),n("h3",{attrs:{id:"mock的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mock的使用"}},[t._v("#")]),t._v(" mock的使用")]),t._v(" "),n("p",[t._v("-先说一下各个包的关系biz是业务逻辑，Biz会依赖调用Client，Client会依赖Service")]),t._v(" "),n("p",[t._v("​\tReq是返回包装类，Res是请求包装类")]),t._v(" "),n("p",[t._v("我们现在就是想模拟一下Biz下的getFile这个接口，"),n("strong",[t._v("注意使用mock要在test下的包路径都一致哦")])]),t._v(" "),n("p",[t._v("​\t\t可以如下在类名称上alt enter --Create Test 会自动生成单元测试路径")]),t._v(" "),n("p",[n("img",{attrs:{src:a(7992),alt:"1647880685507"}})]),t._v(" "),n("h4",{attrs:{id:"第一步"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第一步"}},[t._v("#")]),t._v(" 第一步")]),t._v(" "),n("p",[t._v("@RunWith里面的参数就是会加载一些上下文的配置，或者是说加载一些必要的使用这个框架的应用，必须把这个加上才可以完成相关的mock")]),t._v(" "),n("p",[n("img",{attrs:{src:a(7993),alt:"1647881376397"}})]),t._v(" "),n("p",[t._v("​\t因为我们要测试这个FileIOBiz这个对象，所以先把这个对象先写出来，然后加上@InjectMocks注解（"),n("strong",[t._v("修饰被测试类--要求必须是类不能是接口")]),t._v("），加上后就代表这个东西可以被打桩")]),t._v(" "),n("p",[t._v("​\t\t然后就是@Mock代表这个对象可以被Mock")]),t._v(" "),n("p",[n("img",{attrs:{src:a(7994),alt:"1647881046429"}})]),t._v(" "),n("p",[t._v("​\t因为我们mock了 FileIOClient 这个对象，那么凡是这个对象需要的参数 我们都需要给他mock")]),t._v(" "),n("p",[n("img",{attrs:{src:a(7995),alt:"1647882167693"}})]),t._v(" "),n("p",[t._v("​\t\t我们看到他使用到的参数就是request对象，对象中包含name")]),t._v(" "),n("p",[n("img",{attrs:{src:a(7996),alt:"1647882277310"}})]),t._v(" "),n("p",[t._v("然后我们看到FileRead方法还会调用FileService，所以这个方法也需要mock掉")]),t._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("when")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("fileIOClient"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("FileRead")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("any")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("thenReturn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t这个意思就是我在调用"),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("fileIOClient"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("FileRead")]),t._v("这个方法的时候 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("any")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("无论传入的是什么参数，"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("thenReturn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("返回的结果都是"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n\t\n    \n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("p",[t._v("查看一下业务逻辑：因为我们只关心这一层的逻辑，具体底层的逻辑由底层的单元测试，我们将这一层的业务正规mock就可以了")]),t._v(" "),n("p",[n("img",{attrs:{src:a(7997),alt:"1647882755467"}})]),t._v(" "),n("p",[t._v("然后我们的断言是GitFile方法返回的结果不为null，还有就是返回的结果值是5 5")]),t._v(" "),n("p",[n("img",{attrs:{src:a(7998),alt:"1647883037620"}})]),t._v(" "),n("p",[t._v("现在我们测试一下：")]),t._v(" "),n("p",[t._v("​\tCoverage会显示一个覆盖率和是否通过")]),t._v(" "),n("p",[n("img",{attrs:{src:a(7999),alt:"1647883120205"}})]),t._v(" "),n("p",[t._v("已经通过了-覆盖率是100%")]),t._v(" "),n("p",[n("img",{attrs:{src:a(8e3),alt:"1647883190669"}})]),t._v(" "),n("p",[t._v("可以看到绿色的就是被测试覆盖到了")]),t._v(" "),n("p",[n("img",{attrs:{src:a(8001),alt:"1647883257947"}})]),t._v(" "),n("h4",{attrs:{id:"使用mock的意义就是-帮助后端关注自己的逻辑-还可以帮助安卓方面进行完全分离的开发"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用mock的意义就是-帮助后端关注自己的逻辑-还可以帮助安卓方面进行完全分离的开发"}},[t._v("#")]),t._v(" 使用mock的意义就是，帮助后端关注自己的逻辑，还可以帮助安卓方面进行完全分离的开发")]),t._v(" "),n("p",[t._v("代码地址：https://github.com/OriKey/MockTutorials/blob/master/src/main/java/Client/FileIOClient.java")])])}),[],!1,null,null,null);s.default=e.exports}}]);